[
  {
    "category": "title",
    "command": "css.title",
    "title": "CSS",
    "source": "css"
  },
  {
    "category": "customData",
    "command": "css.customData.desc",
    "title": "A list of relative file paths pointing to JSON files following the [custom data format](https://github.com/microsoft/vscode-css-languageservice/blob/master/docs/customData.md).\n\nVS Code loads custom data on startup to enhance its CSS support for the custom CSS properties, at directives, pseudo classes and pseudo elements you specify in the JSON files.\n\nThe file paths are relative to workspace and only workspace folder settings are considered.",
    "source": "css"
  },
  {
    "category": "completion",
    "command": "css.completion.triggerPropertyValueCompletion.desc",
    "title": "By default, VS Code triggers property value completion after selecting a CSS property. Use this setting to disable this behavior.",
    "source": "css"
  },
  {
    "category": "completion",
    "command": "css.completion.completePropertyWithSemicolon.desc",
    "title": "Insert semicolon at end of line when completing CSS properties.",
    "source": "css"
  },
  {
    "category": "lint",
    "command": "css.lint.argumentsInColorFunction.desc",
    "title": "Invalid number of parameters.",
    "source": "css"
  },
  {
    "category": "lint",
    "command": "css.lint.boxModel.desc",
    "title": "Do not use `width` or `height` when using `padding` or `border`.",
    "source": "css"
  },
  {
    "category": "lint",
    "command": "css.lint.compatibleVendorPrefixes.desc",
    "title": "When using a vendor-specific prefix make sure to also include all other vendor-specific properties.",
    "source": "css"
  },
  {
    "category": "lint",
    "command": "css.lint.duplicateProperties.desc",
    "title": "Do not use duplicate style definitions.",
    "source": "css"
  },
  {
    "category": "lint",
    "command": "css.lint.emptyRules.desc",
    "title": "Do not use empty rulesets.",
    "source": "css"
  },
  {
    "category": "lint",
    "command": "css.lint.float.desc",
    "title": "Avoid using `float`. Floats lead to fragile CSS that is easy to break if one aspect of the layout changes.",
    "source": "css"
  },
  {
    "category": "lint",
    "command": "css.lint.fontFaceProperties.desc",
    "title": "`@font-face` rule must define `src` and `font-family` properties.",
    "source": "css"
  },
  {
    "category": "lint",
    "command": "css.lint.hexColorLength.desc",
    "title": "Hex colors must consist of three or six hex numbers.",
    "source": "css"
  },
  {
    "category": "lint",
    "command": "css.lint.idSelector.desc",
    "title": "Selectors should not contain IDs because these rules are too tightly coupled with the HTML.",
    "source": "css"
  },
  {
    "category": "lint",
    "command": "css.lint.ieHack.desc",
    "title": "IE hacks are only necessary when supporting IE7 and older.",
    "source": "css"
  },
  {
    "category": "lint",
    "command": "css.lint.important.desc",
    "title": "Avoid using `!important`. It is an indication that the specificity of the entire CSS has gotten out of control and needs to be refactored.",
    "source": "css"
  },
  {
    "category": "lint",
    "command": "css.lint.importStatement.desc",
    "title": "Import statements do not load in parallel.",
    "source": "css"
  },
  {
    "category": "lint",
    "command": "css.lint.propertyIgnoredDueToDisplay.desc",
    "title": "Property is ignored due to the display. E.g. with `display: inline`, the `width`, `height`, `margin-top`, `margin-bottom`, and `float` properties have no effect.",
    "source": "css"
  },
  {
    "category": "lint",
    "command": "css.lint.universalSelector.desc",
    "title": "The universal selector (`*`) is known to be slow.",
    "source": "css"
  },
  {
    "category": "lint",
    "command": "css.lint.unknownAtRules.desc",
    "title": "Unknown at-rule.",
    "source": "css"
  },
  {
    "category": "lint",
    "command": "css.lint.unknownProperties.desc",
    "title": "Unknown property.",
    "source": "css"
  },
  {
    "category": "lint",
    "command": "css.lint.validProperties.desc",
    "title": "A list of properties that are not validated against the `unknownProperties` rule.",
    "source": "css"
  },
  {
    "category": "lint",
    "command": "css.lint.unknownVendorSpecificProperties.desc",
    "title": "Unknown vendor specific property.",
    "source": "css"
  },
  {
    "category": "lint",
    "command": "css.lint.vendorPrefix.desc",
    "title": "When using a vendor-specific prefix, also include the standard property.",
    "source": "css"
  },
  {
    "category": "lint",
    "command": "css.lint.zeroUnits.desc",
    "title": "No unit for zero needed.",
    "source": "css"
  },
  {
    "category": "trace",
    "command": "css.trace.server.desc",
    "title": "Traces the communication between VS Code and the CSS language server.",
    "source": "css"
  },
  {
    "category": "validate",
    "command": "css.validate.title",
    "title": "Controls CSS validation and problem severities.",
    "source": "css"
  },
  {
    "category": "validate",
    "command": "css.validate.desc",
    "title": "Enables or disables all validations.",
    "source": "css"
  },
  {
    "category": "hover",
    "command": "css.hover.documentation",
    "title": "Show tag and attribute documentation in CSS hovers.",
    "source": "css"
  },
  {
    "category": "hover",
    "command": "css.hover.references",
    "title": "Show references to MDN in CSS hovers.",
    "source": "css"
  },
  {
    "category": "format",
    "command": "css.format.enable.desc",
    "title": "Enable/disable default CSS formatter.",
    "source": "css"
  },
  {
    "category": "format",
    "command": "css.format.newlineBetweenSelectors.desc",
    "title": "Separate selectors with a new line.",
    "source": "css"
  },
  {
    "category": "format",
    "command": "css.format.newlineBetweenRules.desc",
    "title": "Separate rulesets by a blank line.",
    "source": "css"
  },
  {
    "category": "format",
    "command": "css.format.spaceAroundSelectorSeparator.desc",
    "title": "Ensure a space character around selector separators '>', '+', '~' (e.g. `a > b`).",
    "source": "css"
  },
  {
    "category": "format",
    "command": "css.format.braceStyle.desc",
    "title": "Put braces on the same line as rules (`collapse`) or put braces on own line (`expand`).",
    "source": "css"
  },
  {
    "category": "format",
    "command": "css.format.preserveNewLines.desc",
    "title": "Whether existing line breaks before elements should be preserved.",
    "source": "css"
  },
  {
    "category": "format",
    "command": "css.format.maxPreserveNewLines.desc",
    "title": "Maximum number of line breaks to be preserved in one chunk, when `#css.format.preserveNewLines#` is enabled.",
    "source": "css"
  },
  {
    "category": "title",
    "command": "less.title",
    "title": "LESS",
    "source": "less"
  },
  {
    "category": "completion",
    "command": "less.completion.triggerPropertyValueCompletion.desc",
    "title": "By default, VS Code triggers property value completion after selecting a CSS property. Use this setting to disable this behavior.",
    "source": "less"
  },
  {
    "category": "completion",
    "command": "less.completion.completePropertyWithSemicolon.desc",
    "title": "Insert semicolon at end of line when completing CSS properties.",
    "source": "less"
  },
  {
    "category": "lint",
    "command": "less.lint.argumentsInColorFunction.desc",
    "title": "Invalid number of parameters.",
    "source": "less"
  },
  {
    "category": "lint",
    "command": "less.lint.boxModel.desc",
    "title": "Do not use `width` or `height` when using `padding` or `border`.",
    "source": "less"
  },
  {
    "category": "lint",
    "command": "less.lint.compatibleVendorPrefixes.desc",
    "title": "When using a vendor-specific prefix make sure to also include all other vendor-specific properties.",
    "source": "less"
  },
  {
    "category": "lint",
    "command": "less.lint.duplicateProperties.desc",
    "title": "Do not use duplicate style definitions.",
    "source": "less"
  },
  {
    "category": "lint",
    "command": "less.lint.emptyRules.desc",
    "title": "Do not use empty rulesets.",
    "source": "less"
  },
  {
    "category": "lint",
    "command": "less.lint.float.desc",
    "title": "Avoid using `float`. Floats lead to fragile CSS that is easy to break if one aspect of the layout changes.",
    "source": "less"
  },
  {
    "category": "lint",
    "command": "less.lint.fontFaceProperties.desc",
    "title": "`@font-face` rule must define `src` and `font-family` properties.",
    "source": "less"
  },
  {
    "category": "lint",
    "command": "less.lint.hexColorLength.desc",
    "title": "Hex colors must consist of three or six hex numbers.",
    "source": "less"
  },
  {
    "category": "lint",
    "command": "less.lint.idSelector.desc",
    "title": "Selectors should not contain IDs because these rules are too tightly coupled with the HTML.",
    "source": "less"
  },
  {
    "category": "lint",
    "command": "less.lint.ieHack.desc",
    "title": "IE hacks are only necessary when supporting IE7 and older.",
    "source": "less"
  },
  {
    "category": "lint",
    "command": "less.lint.important.desc",
    "title": "Avoid using `!important`. It is an indication that the specificity of the entire CSS has gotten out of control and needs to be refactored.",
    "source": "less"
  },
  {
    "category": "lint",
    "command": "less.lint.importStatement.desc",
    "title": "Import statements do not load in parallel.",
    "source": "less"
  },
  {
    "category": "lint",
    "command": "less.lint.propertyIgnoredDueToDisplay.desc",
    "title": "Property is ignored due to the display. E.g. with `display: inline`, the `width`, `height`, `margin-top`, `margin-bottom`, and `float` properties have no effect.",
    "source": "less"
  },
  {
    "category": "lint",
    "command": "less.lint.universalSelector.desc",
    "title": "The universal selector (`*`) is known to be slow.",
    "source": "less"
  },
  {
    "category": "lint",
    "command": "less.lint.unknownAtRules.desc",
    "title": "Unknown at-rule.",
    "source": "less"
  },
  {
    "category": "lint",
    "command": "less.lint.unknownProperties.desc",
    "title": "Unknown property.",
    "source": "less"
  },
  {
    "category": "lint",
    "command": "less.lint.validProperties.desc",
    "title": "A list of properties that are not validated against the `unknownProperties` rule.",
    "source": "less"
  },
  {
    "category": "lint",
    "command": "less.lint.unknownVendorSpecificProperties.desc",
    "title": "Unknown vendor specific property.",
    "source": "less"
  },
  {
    "category": "lint",
    "command": "less.lint.vendorPrefix.desc",
    "title": "When using a vendor-specific prefix, also include the standard property.",
    "source": "less"
  },
  {
    "category": "lint",
    "command": "less.lint.zeroUnits.desc",
    "title": "No unit for zero needed.",
    "source": "less"
  },
  {
    "category": "validate",
    "command": "less.validate.title",
    "title": "Controls LESS validation and problem severities.",
    "source": "less"
  },
  {
    "category": "validate",
    "command": "less.validate.desc",
    "title": "Enables or disables all validations.",
    "source": "less"
  },
  {
    "category": "hover",
    "command": "less.hover.documentation",
    "title": "Show tag and attribute documentation in LESS hovers.",
    "source": "less"
  },
  {
    "category": "hover",
    "command": "less.hover.references",
    "title": "Show references to MDN in LESS hovers.",
    "source": "less"
  },
  {
    "category": "format",
    "command": "less.format.enable.desc",
    "title": "Enable/disable default LESS formatter.",
    "source": "less"
  },
  {
    "category": "format",
    "command": "less.format.newlineBetweenSelectors.desc",
    "title": "Separate selectors with a new line.",
    "source": "less"
  },
  {
    "category": "format",
    "command": "less.format.newlineBetweenRules.desc",
    "title": "Separate rulesets by a blank line.",
    "source": "less"
  },
  {
    "category": "format",
    "command": "less.format.spaceAroundSelectorSeparator.desc",
    "title": "Ensure a space character around selector separators '>', '+', '~' (e.g. `a > b`).",
    "source": "less"
  },
  {
    "category": "format",
    "command": "less.format.braceStyle.desc",
    "title": "Put braces on the same line as rules (`collapse`) or put braces on own line (`expand`).",
    "source": "less"
  },
  {
    "category": "format",
    "command": "less.format.preserveNewLines.desc",
    "title": "Whether existing line breaks before elements should be preserved.",
    "source": "less"
  },
  {
    "category": "format",
    "command": "less.format.maxPreserveNewLines.desc",
    "title": "Maximum number of line breaks to be preserved in one chunk, when `#less.format.preserveNewLines#` is enabled.",
    "source": "less"
  },
  {
    "category": "title",
    "command": "scss.title",
    "title": "SCSS (Sass)",
    "source": "scss"
  },
  {
    "category": "completion",
    "command": "scss.completion.triggerPropertyValueCompletion.desc",
    "title": "By default, VS Code triggers property value completion after selecting a CSS property. Use this setting to disable this behavior.",
    "source": "scss"
  },
  {
    "category": "completion",
    "command": "scss.completion.completePropertyWithSemicolon.desc",
    "title": "Insert semicolon at end of line when completing CSS properties.",
    "source": "scss"
  },
  {
    "category": "lint",
    "command": "scss.lint.argumentsInColorFunction.desc",
    "title": "Invalid number of parameters.",
    "source": "scss"
  },
  {
    "category": "lint",
    "command": "scss.lint.boxModel.desc",
    "title": "Do not use `width` or `height` when using `padding` or `border`.",
    "source": "scss"
  },
  {
    "category": "lint",
    "command": "scss.lint.compatibleVendorPrefixes.desc",
    "title": "When using a vendor-specific prefix make sure to also include all other vendor-specific properties.",
    "source": "scss"
  },
  {
    "category": "lint",
    "command": "scss.lint.duplicateProperties.desc",
    "title": "Do not use duplicate style definitions.",
    "source": "scss"
  },
  {
    "category": "lint",
    "command": "scss.lint.emptyRules.desc",
    "title": "Do not use empty rulesets.",
    "source": "scss"
  },
  {
    "category": "lint",
    "command": "scss.lint.float.desc",
    "title": "Avoid using `float`. Floats lead to fragile CSS that is easy to break if one aspect of the layout changes.",
    "source": "scss"
  },
  {
    "category": "lint",
    "command": "scss.lint.fontFaceProperties.desc",
    "title": "`@font-face` rule must define `src` and `font-family` properties.",
    "source": "scss"
  },
  {
    "category": "lint",
    "command": "scss.lint.hexColorLength.desc",
    "title": "Hex colors must consist of three or six hex numbers.",
    "source": "scss"
  },
  {
    "category": "lint",
    "command": "scss.lint.idSelector.desc",
    "title": "Selectors should not contain IDs because these rules are too tightly coupled with the HTML.",
    "source": "scss"
  },
  {
    "category": "lint",
    "command": "scss.lint.ieHack.desc",
    "title": "IE hacks are only necessary when supporting IE7 and older.",
    "source": "scss"
  },
  {
    "category": "lint",
    "command": "scss.lint.important.desc",
    "title": "Avoid using `!important`. It is an indication that the specificity of the entire CSS has gotten out of control and needs to be refactored.",
    "source": "scss"
  },
  {
    "category": "lint",
    "command": "scss.lint.importStatement.desc",
    "title": "Import statements do not load in parallel.",
    "source": "scss"
  },
  {
    "category": "lint",
    "command": "scss.lint.propertyIgnoredDueToDisplay.desc",
    "title": "Property is ignored due to the display. E.g. with `display: inline`, the `width`, `height`, `margin-top`, `margin-bottom`, and `float` properties have no effect.",
    "source": "scss"
  },
  {
    "category": "lint",
    "command": "scss.lint.universalSelector.desc",
    "title": "The universal selector (`*`) is known to be slow.",
    "source": "scss"
  },
  {
    "category": "lint",
    "command": "scss.lint.unknownAtRules.desc",
    "title": "Unknown at-rule.",
    "source": "scss"
  },
  {
    "category": "lint",
    "command": "scss.lint.unknownProperties.desc",
    "title": "Unknown property.",
    "source": "scss"
  },
  {
    "category": "lint",
    "command": "scss.lint.validProperties.desc",
    "title": "A list of properties that are not validated against the `unknownProperties` rule.",
    "source": "scss"
  },
  {
    "category": "lint",
    "command": "scss.lint.unknownVendorSpecificProperties.desc",
    "title": "Unknown vendor specific property.",
    "source": "scss"
  },
  {
    "category": "lint",
    "command": "scss.lint.vendorPrefix.desc",
    "title": "When using a vendor-specific prefix, also include the standard property.",
    "source": "scss"
  },
  {
    "category": "lint",
    "command": "scss.lint.zeroUnits.desc",
    "title": "No unit for zero needed.",
    "source": "scss"
  },
  {
    "category": "validate",
    "command": "scss.validate.title",
    "title": "Controls SCSS validation and problem severities.",
    "source": "scss"
  },
  {
    "category": "validate",
    "command": "scss.validate.desc",
    "title": "Enables or disables all validations.",
    "source": "scss"
  },
  {
    "category": "hover",
    "command": "scss.hover.documentation",
    "title": "Show tag and attribute documentation in SCSS hovers.",
    "source": "scss"
  },
  {
    "category": "hover",
    "command": "scss.hover.references",
    "title": "Show references to MDN in SCSS hovers.",
    "source": "scss"
  },
  {
    "category": "format",
    "command": "scss.format.enable.desc",
    "title": "Enable/disable default SCSS formatter.",
    "source": "scss"
  },
  {
    "category": "format",
    "command": "scss.format.newlineBetweenSelectors.desc",
    "title": "Separate selectors with a new line.",
    "source": "scss"
  },
  {
    "category": "format",
    "command": "scss.format.newlineBetweenRules.desc",
    "title": "Separate rulesets by a blank line.",
    "source": "scss"
  },
  {
    "category": "format",
    "command": "scss.format.spaceAroundSelectorSeparator.desc",
    "title": "Ensure a space character around selector separators '>', '+', '~' (e.g. `a > b`).",
    "source": "scss"
  },
  {
    "category": "format",
    "command": "scss.format.braceStyle.desc",
    "title": "Put braces on the same line as rules (`collapse`) or put braces on own line (`expand`).",
    "source": "scss"
  },
  {
    "category": "format",
    "command": "scss.format.preserveNewLines.desc",
    "title": "Whether existing line breaks before elements should be preserved.",
    "source": "scss"
  },
  {
    "category": "format",
    "command": "scss.format.maxPreserveNewLines.desc",
    "title": "Maximum number of line breaks to be preserved in one chunk, when `#scss.format.preserveNewLines#` is enabled.",
    "source": "scss"
  },
  {
    "category": "colorDecorators",
    "command": "css.colorDecorators.enable.deprecationMessage",
    "title": "The setting `css.colorDecorators.enable` has been deprecated in favor of `editor.colorDecorators`.",
    "source": "css"
  },
  {
    "category": "colorDecorators",
    "command": "scss.colorDecorators.enable.deprecationMessage",
    "title": "The setting `scss.colorDecorators.enable` has been deprecated in favor of `editor.colorDecorators`.",
    "source": "scss"
  },
  {
    "category": "colorDecorators",
    "command": "less.colorDecorators.enable.deprecationMessage",
    "title": "The setting `less.colorDecorators.enable` has been deprecated in favor of `editor.colorDecorators`.",
    "source": "less"
  },
  {
    "category": "auto",
    "command": "toggle.auto.attach",
    "title": "Toggle Auto Attach",
    "source": "toggle"
  },
  {
    "category": "server",
    "command": "debug.server.ready.serverReadyAction.description",
    "title": "Act upon a URI when a server program under debugging is ready (indicated by sending output of the form 'listening on port 3000' or 'Now listening on: https://localhost:5001' to the debug console.)",
    "source": "debug"
  },
  {
    "category": "server",
    "command": "debug.server.ready.action.description",
    "title": "What to do with the URI when the server is ready.",
    "source": "debug"
  },
  {
    "category": "server",
    "command": "debug.server.ready.action.openExternally.description",
    "title": "Open URI externally with the default application.",
    "source": "debug"
  },
  {
    "category": "server",
    "command": "debug.server.ready.action.debugWithChrome.description",
    "title": "Start debugging with the 'Debugger for Chrome'.",
    "source": "debug"
  },
  {
    "category": "server",
    "command": "debug.server.ready.action.startDebugging.description",
    "title": "Run another launch configuration.",
    "source": "debug"
  },
  {
    "category": "server",
    "command": "debug.server.ready.pattern.description",
    "title": "Server is ready if this pattern appears on the debug console. The first capture group must include a URI or a port number.",
    "source": "debug"
  },
  {
    "category": "server",
    "command": "debug.server.ready.uriFormat.description",
    "title": "A format string used when constructing the URI from a port number. The first '%s' is substituted with the port number.",
    "source": "debug"
  },
  {
    "category": "server",
    "command": "debug.server.ready.webRoot.description",
    "title": "Value passed to the debug configuration for the 'Debugger for Chrome'.",
    "source": "debug"
  },
  {
    "category": "server",
    "command": "debug.server.ready.killOnServerStop.description",
    "title": "Stop the child session when the parent session stopped.",
    "source": "debug"
  },
  {
    "category": "server",
    "command": "debug.server.ready.debugConfigName.description",
    "title": "Name of the launch configuration to run.",
    "source": "debug"
  },
  {
    "category": "wrapWithAbbreviation",
    "command": "command.wrapWithAbbreviation",
    "title": "Wrap with Abbreviation",
    "source": "command"
  },
  {
    "category": "removeTag",
    "command": "command.removeTag",
    "title": "Remove Tag",
    "source": "command"
  },
  {
    "category": "updateTag",
    "command": "command.updateTag",
    "title": "Update Tag",
    "source": "command"
  },
  {
    "category": "matchTag",
    "command": "command.matchTag",
    "title": "Go to Matching Pair",
    "source": "command"
  },
  {
    "category": "balanceIn",
    "command": "command.balanceIn",
    "title": "Balance (inward)",
    "source": "command"
  },
  {
    "category": "balanceOut",
    "command": "command.balanceOut",
    "title": "Balance (outward)",
    "source": "command"
  },
  {
    "category": "prevEditPoint",
    "command": "command.prevEditPoint",
    "title": "Go to Previous Edit Point",
    "source": "command"
  },
  {
    "category": "nextEditPoint",
    "command": "command.nextEditPoint",
    "title": "Go to Next Edit Point",
    "source": "command"
  },
  {
    "category": "mergeLines",
    "command": "command.mergeLines",
    "title": "Merge Lines",
    "source": "command"
  },
  {
    "category": "selectPrevItem",
    "command": "command.selectPrevItem",
    "title": "Select Previous Item",
    "source": "command"
  },
  {
    "category": "selectNextItem",
    "command": "command.selectNextItem",
    "title": "Select Next Item",
    "source": "command"
  },
  {
    "category": "splitJoinTag",
    "command": "command.splitJoinTag",
    "title": "Split/Join Tag",
    "source": "command"
  },
  {
    "category": "toggleComment",
    "command": "command.toggleComment",
    "title": "Toggle Comment",
    "source": "command"
  },
  {
    "category": "evaluateMathExpression",
    "command": "command.evaluateMathExpression",
    "title": "Evaluate Math Expression",
    "source": "command"
  },
  {
    "category": "updateImageSize",
    "command": "command.updateImageSize",
    "title": "Update Image Size",
    "source": "command"
  },
  {
    "category": "reflectCSSValue",
    "command": "command.reflectCSSValue",
    "title": "Reflect CSS Value",
    "source": "command"
  },
  {
    "category": "incrementNumberByOne",
    "command": "command.incrementNumberByOne",
    "title": "Increment by 1",
    "source": "command"
  },
  {
    "category": "decrementNumberByOne",
    "command": "command.decrementNumberByOne",
    "title": "Decrement by 1",
    "source": "command"
  },
  {
    "category": "incrementNumberByOneTenth",
    "command": "command.incrementNumberByOneTenth",
    "title": "Increment by 0.1",
    "source": "command"
  },
  {
    "category": "decrementNumberByOneTenth",
    "command": "command.decrementNumberByOneTenth",
    "title": "Decrement by 0.1",
    "source": "command"
  },
  {
    "category": "incrementNumberByTen",
    "command": "command.incrementNumberByTen",
    "title": "Increment by 10",
    "source": "command"
  },
  {
    "category": "decrementNumberByTen",
    "command": "command.decrementNumberByTen",
    "title": "Decrement by 10",
    "source": "command"
  },
  {
    "category": "showEmmetCommands",
    "command": "command.showEmmetCommands",
    "title": "Show Emmet Commands",
    "source": "command"
  },
  {
    "category": "continueInLocalClone",
    "command": "command.continueInLocalClone",
    "title": "Clone Repository Locally and Open on Desktop...",
    "source": "command"
  },
  {
    "category": "continueInLocalClone",
    "command": "command.continueInLocalClone.qualifiedName",
    "title": "Continue Working in New Local Clone",
    "source": "command"
  },
  {
    "category": "clone",
    "command": "command.clone",
    "title": "Clone",
    "source": "command"
  },
  {
    "category": "cloneRecursive",
    "command": "command.cloneRecursive",
    "title": "Clone (Recursive)",
    "source": "command"
  },
  {
    "category": "init",
    "command": "command.init",
    "title": "Initialize Repository",
    "source": "command"
  },
  {
    "category": "openRepository",
    "command": "command.openRepository",
    "title": "Open Repository",
    "source": "command"
  },
  {
    "category": "close",
    "command": "command.close",
    "title": "Close Repository",
    "source": "command"
  },
  {
    "category": "refresh",
    "command": "command.refresh",
    "title": "Refresh",
    "source": "command"
  },
  {
    "category": "openChange",
    "command": "command.openChange",
    "title": "Open Changes",
    "source": "command"
  },
  {
    "category": "openAllChanges",
    "command": "command.openAllChanges",
    "title": "Open All Changes",
    "source": "command"
  },
  {
    "category": "openFile",
    "command": "command.openFile",
    "title": "Open File",
    "source": "command"
  },
  {
    "category": "openHEADFile",
    "command": "command.openHEADFile",
    "title": "Open File (HEAD)",
    "source": "command"
  },
  {
    "category": "stage",
    "command": "command.stage",
    "title": "Stage Changes",
    "source": "command"
  },
  {
    "category": "stageAll",
    "command": "command.stageAll",
    "title": "Stage All Changes",
    "source": "command"
  },
  {
    "category": "stageAllTracked",
    "command": "command.stageAllTracked",
    "title": "Stage All Tracked Changes",
    "source": "command"
  },
  {
    "category": "stageAllUntracked",
    "command": "command.stageAllUntracked",
    "title": "Stage All Untracked Changes",
    "source": "command"
  },
  {
    "category": "stageAllMerge",
    "command": "command.stageAllMerge",
    "title": "Stage All Merge Changes",
    "source": "command"
  },
  {
    "category": "stageSelectedRanges",
    "command": "command.stageSelectedRanges",
    "title": "Stage Selected Ranges",
    "source": "command"
  },
  {
    "category": "revertSelectedRanges",
    "command": "command.revertSelectedRanges",
    "title": "Revert Selected Ranges",
    "source": "command"
  },
  {
    "category": "stageChange",
    "command": "command.stageChange",
    "title": "Stage Change",
    "source": "command"
  },
  {
    "category": "revertChange",
    "command": "command.revertChange",
    "title": "Revert Change",
    "source": "command"
  },
  {
    "category": "unstage",
    "command": "command.unstage",
    "title": "Unstage Changes",
    "source": "command"
  },
  {
    "category": "unstageAll",
    "command": "command.unstageAll",
    "title": "Unstage All Changes",
    "source": "command"
  },
  {
    "category": "unstageSelectedRanges",
    "command": "command.unstageSelectedRanges",
    "title": "Unstage Selected Ranges",
    "source": "command"
  },
  {
    "category": "rename",
    "command": "command.rename",
    "title": "Rename",
    "source": "command"
  },
  {
    "category": "clean",
    "command": "command.clean",
    "title": "Discard Changes",
    "source": "command"
  },
  {
    "category": "cleanAll",
    "command": "command.cleanAll",
    "title": "Discard All Changes",
    "source": "command"
  },
  {
    "category": "cleanAllTracked",
    "command": "command.cleanAllTracked",
    "title": "Discard All Tracked Changes",
    "source": "command"
  },
  {
    "category": "cleanAllUntracked",
    "command": "command.cleanAllUntracked",
    "title": "Discard All Untracked Changes",
    "source": "command"
  },
  {
    "category": "closeAllDiffEditors",
    "command": "command.closeAllDiffEditors",
    "title": "Close All Diff Editors",
    "source": "command"
  },
  {
    "category": "commit",
    "command": "command.commit",
    "title": "Commit",
    "source": "command"
  },
  {
    "category": "commitStaged",
    "command": "command.commitStaged",
    "title": "Commit Staged",
    "source": "command"
  },
  {
    "category": "commitEmpty",
    "command": "command.commitEmpty",
    "title": "Commit Empty",
    "source": "command"
  },
  {
    "category": "commitStagedSigned",
    "command": "command.commitStagedSigned",
    "title": "Commit Staged (Signed Off)",
    "source": "command"
  },
  {
    "category": "commitStagedAmend",
    "command": "command.commitStagedAmend",
    "title": "Commit Staged (Amend)",
    "source": "command"
  },
  {
    "category": "commitAll",
    "command": "command.commitAll",
    "title": "Commit All",
    "source": "command"
  },
  {
    "category": "commitAllSigned",
    "command": "command.commitAllSigned",
    "title": "Commit All (Signed Off)",
    "source": "command"
  },
  {
    "category": "commitAllAmend",
    "command": "command.commitAllAmend",
    "title": "Commit All (Amend)",
    "source": "command"
  },
  {
    "category": "commitNoVerify",
    "command": "command.commitNoVerify",
    "title": "Commit (No Verify)",
    "source": "command"
  },
  {
    "category": "commitStagedNoVerify",
    "command": "command.commitStagedNoVerify",
    "title": "Commit Staged (No Verify)",
    "source": "command"
  },
  {
    "category": "commitEmptyNoVerify",
    "command": "command.commitEmptyNoVerify",
    "title": "Commit Empty (No Verify)",
    "source": "command"
  },
  {
    "category": "commitStagedSignedNoVerify",
    "command": "command.commitStagedSignedNoVerify",
    "title": "Commit Staged (Signed Off, No Verify)",
    "source": "command"
  },
  {
    "category": "commitStagedAmendNoVerify",
    "command": "command.commitStagedAmendNoVerify",
    "title": "Commit Staged (Amend, No Verify)",
    "source": "command"
  },
  {
    "category": "commitAllNoVerify",
    "command": "command.commitAllNoVerify",
    "title": "Commit All (No Verify)",
    "source": "command"
  },
  {
    "category": "commitAllSignedNoVerify",
    "command": "command.commitAllSignedNoVerify",
    "title": "Commit All (Signed Off, No Verify)",
    "source": "command"
  },
  {
    "category": "commitAllAmendNoVerify",
    "command": "command.commitAllAmendNoVerify",
    "title": "Commit All (Amend, No Verify)",
    "source": "command"
  },
  {
    "category": "commitMessageAccept",
    "command": "command.commitMessageAccept",
    "title": "Accept Commit Message",
    "source": "command"
  },
  {
    "category": "commitMessageDiscard",
    "command": "command.commitMessageDiscard",
    "title": "Discard Commit Message",
    "source": "command"
  },
  {
    "category": "restoreCommitTemplate",
    "command": "command.restoreCommitTemplate",
    "title": "Restore Commit Template",
    "source": "command"
  },
  {
    "category": "undoCommit",
    "command": "command.undoCommit",
    "title": "Undo Last Commit",
    "source": "command"
  },
  {
    "category": "checkout",
    "command": "command.checkout",
    "title": "Checkout to...",
    "source": "command"
  },
  {
    "category": "checkoutDetached",
    "command": "command.checkoutDetached",
    "title": "Checkout to (Detached)...",
    "source": "command"
  },
  {
    "category": "branch",
    "command": "command.branch",
    "title": "Create Branch...",
    "source": "command"
  },
  {
    "category": "branchFrom",
    "command": "command.branchFrom",
    "title": "Create Branch From...",
    "source": "command"
  },
  {
    "category": "deleteBranch",
    "command": "command.deleteBranch",
    "title": "Delete Branch...",
    "source": "command"
  },
  {
    "category": "renameBranch",
    "command": "command.renameBranch",
    "title": "Rename Branch...",
    "source": "command"
  },
  {
    "category": "cherryPick",
    "command": "command.cherryPick",
    "title": "Cherry Pick...",
    "source": "command"
  },
  {
    "category": "merge",
    "command": "command.merge",
    "title": "Merge Branch...",
    "source": "command"
  },
  {
    "category": "mergeAbort",
    "command": "command.mergeAbort",
    "title": "Abort Merge",
    "source": "command"
  },
  {
    "category": "rebase",
    "command": "command.rebase",
    "title": "Rebase Branch...",
    "source": "command"
  },
  {
    "category": "createTag",
    "command": "command.createTag",
    "title": "Create Tag",
    "source": "command"
  },
  {
    "category": "deleteTag",
    "command": "command.deleteTag",
    "title": "Delete Tag",
    "source": "command"
  },
  {
    "category": "deleteRemoteTag",
    "command": "command.deleteRemoteTag",
    "title": "Delete Remote Tag",
    "source": "command"
  },
  {
    "category": "fetch",
    "command": "command.fetch",
    "title": "Fetch",
    "source": "command"
  },
  {
    "category": "fetchPrune",
    "command": "command.fetchPrune",
    "title": "Fetch (Prune)",
    "source": "command"
  },
  {
    "category": "fetchAll",
    "command": "command.fetchAll",
    "title": "Fetch From All Remotes",
    "source": "command"
  },
  {
    "category": "pull",
    "command": "command.pull",
    "title": "Pull",
    "source": "command"
  },
  {
    "category": "pullRebase",
    "command": "command.pullRebase",
    "title": "Pull (Rebase)",
    "source": "command"
  },
  {
    "category": "pullFrom",
    "command": "command.pullFrom",
    "title": "Pull from...",
    "source": "command"
  },
  {
    "category": "push",
    "command": "command.push",
    "title": "Push",
    "source": "command"
  },
  {
    "category": "pushForce",
    "command": "command.pushForce",
    "title": "Push (Force)",
    "source": "command"
  },
  {
    "category": "pushTo",
    "command": "command.pushTo",
    "title": "Push to...",
    "source": "command"
  },
  {
    "category": "pushToForce",
    "command": "command.pushToForce",
    "title": "Push to... (Force)",
    "source": "command"
  },
  {
    "category": "pushFollowTags",
    "command": "command.pushFollowTags",
    "title": "Push (Follow Tags)",
    "source": "command"
  },
  {
    "category": "pushFollowTagsForce",
    "command": "command.pushFollowTagsForce",
    "title": "Push (Follow Tags, Force)",
    "source": "command"
  },
  {
    "category": "pushTags",
    "command": "command.pushTags",
    "title": "Push Tags",
    "source": "command"
  },
  {
    "category": "addRemote",
    "command": "command.addRemote",
    "title": "Add Remote...",
    "source": "command"
  },
  {
    "category": "removeRemote",
    "command": "command.removeRemote",
    "title": "Remove Remote",
    "source": "command"
  },
  {
    "category": "sync",
    "command": "command.sync",
    "title": "Sync",
    "source": "command"
  },
  {
    "category": "syncRebase",
    "command": "command.syncRebase",
    "title": "Sync (Rebase)",
    "source": "command"
  },
  {
    "category": "publish",
    "command": "command.publish",
    "title": "Publish Branch...",
    "source": "command"
  },
  {
    "category": "showOutput",
    "command": "command.showOutput",
    "title": "Show Git Output",
    "source": "command"
  },
  {
    "category": "ignore",
    "command": "command.ignore",
    "title": "Add to .gitignore",
    "source": "command"
  },
  {
    "category": "revealInExplorer",
    "command": "command.revealInExplorer",
    "title": "Reveal in Explorer View",
    "source": "command"
  },
  {
    "category": "revealFileInOS",
    "command": "command.revealFileInOS.linux",
    "title": "Open Containing Folder",
    "source": "command"
  },
  {
    "category": "revealFileInOS",
    "command": "command.revealFileInOS.mac",
    "title": "Reveal in Finder",
    "source": "command"
  },
  {
    "category": "revealFileInOS",
    "command": "command.revealFileInOS.windows",
    "title": "Reveal in File Explorer",
    "source": "command"
  },
  {
    "category": "rebaseAbort",
    "command": "command.rebaseAbort",
    "title": "Abort Rebase",
    "source": "command"
  },
  {
    "category": "stashIncludeUntracked",
    "command": "command.stashIncludeUntracked",
    "title": "Stash (Include Untracked)",
    "source": "command"
  },
  {
    "category": "stash",
    "command": "command.stash",
    "title": "Stash",
    "source": "command"
  },
  {
    "category": "stashStaged",
    "command": "command.stashStaged",
    "title": "Stash Staged",
    "source": "command"
  },
  {
    "category": "stashPop",
    "command": "command.stashPop",
    "title": "Pop Stash...",
    "source": "command"
  },
  {
    "category": "stashPopLatest",
    "command": "command.stashPopLatest",
    "title": "Pop Latest Stash",
    "source": "command"
  },
  {
    "category": "stashApply",
    "command": "command.stashApply",
    "title": "Apply Stash...",
    "source": "command"
  },
  {
    "category": "stashApplyLatest",
    "command": "command.stashApplyLatest",
    "title": "Apply Latest Stash",
    "source": "command"
  },
  {
    "category": "stashDrop",
    "command": "command.stashDrop",
    "title": "Drop Stash...",
    "source": "command"
  },
  {
    "category": "stashDropAll",
    "command": "command.stashDropAll",
    "title": "Drop All Stashes...",
    "source": "command"
  },
  {
    "category": "timelineOpenDiff",
    "command": "command.timelineOpenDiff",
    "title": "Open Changes",
    "source": "command"
  },
  {
    "category": "timelineCopyCommitId",
    "command": "command.timelineCopyCommitId",
    "title": "Copy Commit ID",
    "source": "command"
  },
  {
    "category": "timelineCopyCommitMessage",
    "command": "command.timelineCopyCommitMessage",
    "title": "Copy Commit Message",
    "source": "command"
  },
  {
    "category": "timelineSelectForCompare",
    "command": "command.timelineSelectForCompare",
    "title": "Select for Compare",
    "source": "command"
  },
  {
    "category": "timelineCompareWithSelected",
    "command": "command.timelineCompareWithSelected",
    "title": "Compare with Selected",
    "source": "command"
  },
  {
    "category": "manageUnsafeRepositories",
    "command": "command.manageUnsafeRepositories",
    "title": "Manage Unsafe Repositories",
    "source": "command"
  },
  {
    "category": "openRepositoriesInParentFolders",
    "command": "command.openRepositoriesInParentFolders",
    "title": "Open Repositories In Parent Folders",
    "source": "command"
  },
  {
    "category": "api",
    "command": "command.api.getRepositories",
    "title": "Get Repositories",
    "source": "command"
  },
  {
    "category": "api",
    "command": "command.api.getRepositoryState",
    "title": "Get Repository State",
    "source": "command"
  },
  {
    "category": "api",
    "command": "command.api.getRemoteSources",
    "title": "Get Remote Sources",
    "source": "command"
  },
  {
    "category": "git",
    "command": "command.git.acceptMerge",
    "title": "Complete Merge",
    "source": "command"
  },
  {
    "category": "git",
    "command": "command.git.openMergeEditor",
    "title": "Resolve in Merge Editor",
    "source": "command"
  },
  {
    "category": "git",
    "command": "command.git.runGitMerge",
    "title": "Compute Conflicts With Git",
    "source": "command"
  },
  {
    "category": "git",
    "command": "command.git.runGitMergeDiff3",
    "title": "Compute Conflicts With Git (Diff3)",
    "source": "command"
  },
  {
    "category": "enabled",
    "command": "config.enabled",
    "title": "Whether git is enabled.",
    "source": "config"
  },
  {
    "category": "path",
    "command": "config.path",
    "title": "Path and filename of the git executable, e.g. `C:\\Program Files\\Git\\bin\\git.exe` (Windows). This can also be an array of string values containing multiple paths to look up.",
    "source": "config"
  },
  {
    "category": "autoRepositoryDetection",
    "command": "config.autoRepositoryDetection",
    "title": "Configures when repositories should be automatically detected.",
    "source": "config"
  },
  {
    "category": "autoRepositoryDetection",
    "command": "config.autoRepositoryDetection.true",
    "title": "Scan for both subfolders of the current opened folder and parent folders of open files.",
    "source": "config"
  },
  {
    "category": "autoRepositoryDetection",
    "command": "config.autoRepositoryDetection.false",
    "title": "Disable automatic repository scanning.",
    "source": "config"
  },
  {
    "category": "autoRepositoryDetection",
    "command": "config.autoRepositoryDetection.subFolders",
    "title": "Scan for subfolders of the currently opened folder.",
    "source": "config"
  },
  {
    "category": "autoRepositoryDetection",
    "command": "config.autoRepositoryDetection.openEditors",
    "title": "Scan for parent folders of open files.",
    "source": "config"
  },
  {
    "category": "autorefresh",
    "command": "config.autorefresh",
    "title": "Whether auto refreshing is enabled.",
    "source": "config"
  },
  {
    "category": "autofetch",
    "command": "config.autofetch",
    "title": "When set to true, commits will automatically be fetched from the default remote of the current Git repository. Setting to `all` will fetch from all remotes.",
    "source": "config"
  },
  {
    "category": "autofetchPeriod",
    "command": "config.autofetchPeriod",
    "title": "Duration in seconds between each automatic git fetch, when `#git.autofetch#` is enabled.",
    "source": "config"
  },
  {
    "category": "confirmSync",
    "command": "config.confirmSync",
    "title": "Confirm before synchronizing git repositories.",
    "source": "config"
  },
  {
    "category": "countBadge",
    "command": "config.countBadge",
    "title": "Controls the Git count badge.",
    "source": "config"
  },
  {
    "category": "countBadge",
    "command": "config.countBadge.all",
    "title": "Count all changes.",
    "source": "config"
  },
  {
    "category": "countBadge",
    "command": "config.countBadge.tracked",
    "title": "Count only tracked changes.",
    "source": "config"
  },
  {
    "category": "countBadge",
    "command": "config.countBadge.off",
    "title": "Turn off counter.",
    "source": "config"
  },
  {
    "category": "checkoutType",
    "command": "config.checkoutType",
    "title": "Controls what type of git refs are listed when running `Checkout to...`.",
    "source": "config"
  },
  {
    "category": "checkoutType",
    "command": "config.checkoutType.local",
    "title": "Local branches",
    "source": "config"
  },
  {
    "category": "checkoutType",
    "command": "config.checkoutType.tags",
    "title": "Tags",
    "source": "config"
  },
  {
    "category": "checkoutType",
    "command": "config.checkoutType.remote",
    "title": "Remote branches",
    "source": "config"
  },
  {
    "category": "branchPrefix",
    "command": "config.branchPrefix",
    "title": "Prefix used when creating a new branch.",
    "source": "config"
  },
  {
    "category": "branchProtection",
    "command": "config.branchProtection",
    "title": "List of protected branches. By default, a prompt is shown before changes are committed to a protected branch. The prompt can be controlled using the `#git.branchProtectionPrompt#`  setting.",
    "source": "config"
  },
  {
    "category": "branchProtectionPrompt",
    "command": "config.branchProtectionPrompt",
    "title": "Controls whether a prompt is being shown before changes are committed to a protected branch.",
    "source": "config"
  },
  {
    "category": "branchProtectionPrompt",
    "command": "config.branchProtectionPrompt.alwaysCommit",
    "title": "Always commit changes to the protected branch.",
    "source": "config"
  },
  {
    "category": "branchProtectionPrompt",
    "command": "config.branchProtectionPrompt.alwaysCommitToNewBranch",
    "title": "Always commit changes to a new branch.",
    "source": "config"
  },
  {
    "category": "branchProtectionPrompt",
    "command": "config.branchProtectionPrompt.alwaysPrompt",
    "title": "Always prompt before changes are committed to a protected branch.",
    "source": "config"
  },
  {
    "category": "branchRandomNameDictionary",
    "command": "config.branchRandomNameDictionary",
    "title": "List of dictionaries used for the randomly generated branch name. Each value represents the dictionary used to generate the segment of the branch name. Supported dictionaries: `adjectives`, `animals`, `colors` and `numbers`.",
    "source": "config"
  },
  {
    "category": "branchRandomNameDictionary",
    "command": "config.branchRandomNameDictionary.adjectives",
    "title": "A random adjective",
    "source": "config"
  },
  {
    "category": "branchRandomNameDictionary",
    "command": "config.branchRandomNameDictionary.animals",
    "title": "A random animal name",
    "source": "config"
  },
  {
    "category": "branchRandomNameDictionary",
    "command": "config.branchRandomNameDictionary.colors",
    "title": "A random color name",
    "source": "config"
  },
  {
    "category": "branchRandomNameDictionary",
    "command": "config.branchRandomNameDictionary.numbers",
    "title": "A random number between 100 and 999",
    "source": "config"
  },
  {
    "category": "branchRandomNameEnable",
    "command": "config.branchRandomNameEnable",
    "title": "Controls whether a random name is generated when creating a new branch.",
    "source": "config"
  },
  {
    "category": "branchValidationRegex",
    "command": "config.branchValidationRegex",
    "title": "A regular expression to validate new branch names.",
    "source": "config"
  },
  {
    "category": "branchWhitespaceChar",
    "command": "config.branchWhitespaceChar",
    "title": "The character to replace whitespace in new branch names, and to separate segments of a randomly generated branch name.",
    "source": "config"
  },
  {
    "category": "ignoreLegacyWarning",
    "command": "config.ignoreLegacyWarning",
    "title": "Ignores the legacy Git warning.",
    "source": "config"
  },
  {
    "category": "ignoreMissingGitWarning",
    "command": "config.ignoreMissingGitWarning",
    "title": "Ignores the warning when Git is missing.",
    "source": "config"
  },
  {
    "category": "ignoreWindowsGit27Warning",
    "command": "config.ignoreWindowsGit27Warning",
    "title": "Ignores the warning when Git 2.25 - 2.26 is installed on Windows.",
    "source": "config"
  },
  {
    "category": "ignoreLimitWarning",
    "command": "config.ignoreLimitWarning",
    "title": "Ignores the warning when there are too many changes in a repository.",
    "source": "config"
  },
  {
    "category": "ignoreRebaseWarning",
    "command": "config.ignoreRebaseWarning",
    "title": "Ignores the warning when it looks like the branch might have been rebased when pulling.",
    "source": "config"
  },
  {
    "category": "defaultCloneDirectory",
    "command": "config.defaultCloneDirectory",
    "title": "The default location to clone a git repository.",
    "source": "config"
  },
  {
    "category": "useEditorAsCommitInput",
    "command": "config.useEditorAsCommitInput",
    "title": "Controls whether a full text editor will be used to author commit messages, whenever no message is provided in the commit input box.",
    "source": "config"
  },
  {
    "category": "verboseCommit",
    "command": "config.verboseCommit",
    "title": "Enable verbose output when `#git.useEditorAsCommitInput#` is enabled.",
    "source": "config"
  },
  {
    "category": "enableSmartCommit",
    "command": "config.enableSmartCommit",
    "title": "Commit all changes when there are no staged changes.",
    "source": "config"
  },
  {
    "category": "smartCommitChanges",
    "command": "config.smartCommitChanges",
    "title": "Control which changes are automatically staged by Smart Commit.",
    "source": "config"
  },
  {
    "category": "smartCommitChanges",
    "command": "config.smartCommitChanges.all",
    "title": "Automatically stage all changes.",
    "source": "config"
  },
  {
    "category": "smartCommitChanges",
    "command": "config.smartCommitChanges.tracked",
    "title": "Automatically stage tracked changes only.",
    "source": "config"
  },
  {
    "category": "suggestSmartCommit",
    "command": "config.suggestSmartCommit",
    "title": "Suggests to enable smart commit (commit all changes when there are no staged changes).",
    "source": "config"
  },
  {
    "category": "enableCommitSigning",
    "command": "config.enableCommitSigning",
    "title": "Enables commit signing with GPG or X.509.",
    "source": "config"
  },
  {
    "category": "discardAllScope",
    "command": "config.discardAllScope",
    "title": "Controls what changes are discarded by the `Discard all changes` command. `all` discards all changes. `tracked` discards only tracked files. `prompt` shows a prompt dialog every time the action is run.",
    "source": "config"
  },
  {
    "category": "decorations",
    "command": "config.decorations.enabled",
    "title": "Controls whether Git contributes colors and badges to the Explorer and the Open Editors view.",
    "source": "config"
  },
  {
    "category": "enableStatusBarSync",
    "command": "config.enableStatusBarSync",
    "title": "Controls whether the Git Sync command appears in the status bar.",
    "source": "config"
  },
  {
    "category": "followTagsWhenSync",
    "command": "config.followTagsWhenSync",
    "title": "Push all annotated tags when running the sync command.",
    "source": "config"
  },
  {
    "category": "promptToSaveFilesBeforeStash",
    "command": "config.promptToSaveFilesBeforeStash",
    "title": "Controls whether Git should check for unsaved files before stashing changes.",
    "source": "config"
  },
  {
    "category": "promptToSaveFilesBeforeStash",
    "command": "config.promptToSaveFilesBeforeStash.always",
    "title": "Check for any unsaved files.",
    "source": "config"
  },
  {
    "category": "promptToSaveFilesBeforeStash",
    "command": "config.promptToSaveFilesBeforeStash.staged",
    "title": "Check only for unsaved staged files.",
    "source": "config"
  },
  {
    "category": "promptToSaveFilesBeforeStash",
    "command": "config.promptToSaveFilesBeforeStash.never",
    "title": "Disable this check.",
    "source": "config"
  },
  {
    "category": "promptToSaveFilesBeforeCommit",
    "command": "config.promptToSaveFilesBeforeCommit",
    "title": "Controls whether Git should check for unsaved files before committing.",
    "source": "config"
  },
  {
    "category": "promptToSaveFilesBeforeCommit",
    "command": "config.promptToSaveFilesBeforeCommit.always",
    "title": "Check for any unsaved files.",
    "source": "config"
  },
  {
    "category": "promptToSaveFilesBeforeCommit",
    "command": "config.promptToSaveFilesBeforeCommit.staged",
    "title": "Check only for unsaved staged files.",
    "source": "config"
  },
  {
    "category": "promptToSaveFilesBeforeCommit",
    "command": "config.promptToSaveFilesBeforeCommit.never",
    "title": "Disable this check.",
    "source": "config"
  },
  {
    "category": "postCommitCommand",
    "command": "config.postCommitCommand",
    "title": "Run a git command after a successful commit.",
    "source": "config"
  },
  {
    "category": "postCommitCommand",
    "command": "config.postCommitCommand.none",
    "title": "Don't run any command after a commit.",
    "source": "config"
  },
  {
    "category": "postCommitCommand",
    "command": "config.postCommitCommand.push",
    "title": "Run 'git push' after a successful commit.",
    "source": "config"
  },
  {
    "category": "postCommitCommand",
    "command": "config.postCommitCommand.sync",
    "title": "Run 'git pull' and 'git push' after a successful commit.",
    "source": "config"
  },
  {
    "category": "rememberPostCommitCommand",
    "command": "config.rememberPostCommitCommand",
    "title": "Remember the last git command that ran after a commit.",
    "source": "config"
  },
  {
    "category": "openAfterClone",
    "command": "config.openAfterClone",
    "title": "Controls whether to open a repository automatically after cloning.",
    "source": "config"
  },
  {
    "category": "openAfterClone",
    "command": "config.openAfterClone.always",
    "title": "Always open in current window.",
    "source": "config"
  },
  {
    "category": "openAfterClone",
    "command": "config.openAfterClone.alwaysNewWindow",
    "title": "Always open in a new window.",
    "source": "config"
  },
  {
    "category": "openAfterClone",
    "command": "config.openAfterClone.whenNoFolderOpen",
    "title": "Only open in current window when no folder is opened.",
    "source": "config"
  },
  {
    "category": "openAfterClone",
    "command": "config.openAfterClone.prompt",
    "title": "Always prompt for action.",
    "source": "config"
  },
  {
    "category": "showInlineOpenFileAction",
    "command": "config.showInlineOpenFileAction",
    "title": "Controls whether to show an inline Open File action in the Git changes view.",
    "source": "config"
  },
  {
    "category": "showPushSuccessNotification",
    "command": "config.showPushSuccessNotification",
    "title": "Controls whether to show a notification when a push is successful.",
    "source": "config"
  },
  {
    "category": "inputValidation",
    "command": "config.inputValidation",
    "title": "Controls when to show commit message input validation.",
    "source": "config"
  },
  {
    "category": "inputValidationLength",
    "command": "config.inputValidationLength",
    "title": "Controls the commit message length threshold for showing a warning.",
    "source": "config"
  },
  {
    "category": "inputValidationSubjectLength",
    "command": "config.inputValidationSubjectLength",
    "title": "Controls the commit message subject length threshold for showing a warning. Unset it to inherit the value of `config.inputValidationLength`.",
    "source": "config"
  },
  {
    "category": "detectSubmodules",
    "command": "config.detectSubmodules",
    "title": "Controls whether to automatically detect git submodules.",
    "source": "config"
  },
  {
    "category": "detectSubmodulesLimit",
    "command": "config.detectSubmodulesLimit",
    "title": "Controls the limit of git submodules detected.",
    "source": "config"
  },
  {
    "category": "alwaysShowStagedChangesResourceGroup",
    "command": "config.alwaysShowStagedChangesResourceGroup",
    "title": "Always show the Staged Changes resource group.",
    "source": "config"
  },
  {
    "category": "alwaysSignOff",
    "command": "config.alwaysSignOff",
    "title": "Controls the signoff flag for all commits.",
    "source": "config"
  },
  {
    "category": "ignoreSubmodules",
    "command": "config.ignoreSubmodules",
    "title": "Ignore modifications to submodules in the file tree.",
    "source": "config"
  },
  {
    "category": "ignoredRepositories",
    "command": "config.ignoredRepositories",
    "title": "List of git repositories to ignore.",
    "source": "config"
  },
  {
    "category": "scanRepositories",
    "command": "config.scanRepositories",
    "title": "List of paths to search for git repositories in.",
    "source": "config"
  },
  {
    "category": "showProgress",
    "command": "config.showProgress",
    "title": "Controls whether git actions should show progress.",
    "source": "config"
  },
  {
    "category": "rebaseWhenSync",
    "command": "config.rebaseWhenSync",
    "title": "Force git to use rebase when running the sync command.",
    "source": "config"
  },
  {
    "category": "confirmEmptyCommits",
    "command": "config.confirmEmptyCommits",
    "title": "Always confirm the creation of empty commits for the 'Git: Commit Empty' command.",
    "source": "config"
  },
  {
    "category": "fetchOnPull",
    "command": "config.fetchOnPull",
    "title": "When enabled, fetch all branches when pulling. Otherwise, fetch just the current one.",
    "source": "config"
  },
  {
    "category": "pullBeforeCheckout",
    "command": "config.pullBeforeCheckout",
    "title": "Controls whether a branch that does not have outgoing commits is fast-forwarded before it is checked out.",
    "source": "config"
  },
  {
    "category": "pullTags",
    "command": "config.pullTags",
    "title": "Fetch all tags when pulling.",
    "source": "config"
  },
  {
    "category": "pruneOnFetch",
    "command": "config.pruneOnFetch",
    "title": "Prune when fetching.",
    "source": "config"
  },
  {
    "category": "autoStash",
    "command": "config.autoStash",
    "title": "Stash any changes before pulling and restore them after successful pull.",
    "source": "config"
  },
  {
    "category": "allowForcePush",
    "command": "config.allowForcePush",
    "title": "Controls whether force push (with or without lease) is enabled.",
    "source": "config"
  },
  {
    "category": "useForcePushWithLease",
    "command": "config.useForcePushWithLease",
    "title": "Controls whether force pushing uses the safer force-with-lease variant.",
    "source": "config"
  },
  {
    "category": "confirmForcePush",
    "command": "config.confirmForcePush",
    "title": "Controls whether to ask for confirmation before force-pushing.",
    "source": "config"
  },
  {
    "category": "allowNoVerifyCommit",
    "command": "config.allowNoVerifyCommit",
    "title": "Controls whether commits without running pre-commit and commit-msg hooks are allowed.",
    "source": "config"
  },
  {
    "category": "confirmNoVerifyCommit",
    "command": "config.confirmNoVerifyCommit",
    "title": "Controls whether to ask for confirmation before committing without verification.",
    "source": "config"
  },
  {
    "category": "closeDiffOnOperation",
    "command": "config.closeDiffOnOperation",
    "title": "Controls whether the diff editor should be automatically closed when changes are stashed, committed, discarded, staged, or unstaged.",
    "source": "config"
  },
  {
    "category": "openDiffOnClick",
    "command": "config.openDiffOnClick",
    "title": "Controls whether the diff editor should be opened when clicking a change. Otherwise the regular editor will be opened.",
    "source": "config"
  },
  {
    "category": "supportCancellation",
    "command": "config.supportCancellation",
    "title": "Controls whether a notification comes up when running the Sync action, which allows the user to cancel the operation.",
    "source": "config"
  },
  {
    "category": "branchSortOrder",
    "command": "config.branchSortOrder",
    "title": "Controls the sort order for branches.",
    "source": "config"
  },
  {
    "category": "untrackedChanges",
    "command": "config.untrackedChanges",
    "title": "Controls how untracked changes behave.",
    "source": "config"
  },
  {
    "category": "untrackedChanges",
    "command": "config.untrackedChanges.mixed",
    "title": "All changes, tracked and untracked, appear together and behave equally.",
    "source": "config"
  },
  {
    "category": "untrackedChanges",
    "command": "config.untrackedChanges.separate",
    "title": "Untracked changes appear separately in the Source Control view. They are also excluded from several actions.",
    "source": "config"
  },
  {
    "category": "untrackedChanges",
    "command": "config.untrackedChanges.hidden",
    "title": "Untracked changes are hidden and excluded from several actions.",
    "source": "config"
  },
  {
    "category": "requireGitUserConfig",
    "command": "config.requireGitUserConfig",
    "title": "Controls whether to require explicit Git user configuration or allow Git to guess if missing.",
    "source": "config"
  },
  {
    "category": "showCommitInput",
    "command": "config.showCommitInput",
    "title": "Controls whether to show the commit input in the Git source control panel.",
    "source": "config"
  },
  {
    "category": "terminalAuthentication",
    "command": "config.terminalAuthentication",
    "title": "Controls whether to enable VS Code to be the authentication handler for Git processes spawned in the Integrated Terminal. Note: Terminals need to be restarted to pick up a change in this setting.",
    "source": "config"
  },
  {
    "category": "terminalGitEditor",
    "command": "config.terminalGitEditor",
    "title": "Controls whether to enable VS Code to be the Git editor for Git processes spawned in the integrated terminal. Note: Terminals need to be restarted to pick up a change in this setting.",
    "source": "config"
  },
  {
    "category": "timeline",
    "command": "config.timeline.showAuthor",
    "title": "Controls whether to show the commit author in the Timeline view.",
    "source": "config"
  },
  {
    "category": "timeline",
    "command": "config.timeline.showUncommitted",
    "title": "Controls whether to show uncommitted changes in the Timeline view.",
    "source": "config"
  },
  {
    "category": "timeline",
    "command": "config.timeline.date",
    "title": "Controls which date to use for items in the Timeline view.",
    "source": "config"
  },
  {
    "category": "timeline",
    "command": "config.timeline.date.committed",
    "title": "Use the committed date",
    "source": "config"
  },
  {
    "category": "timeline",
    "command": "config.timeline.date.authored",
    "title": "Use the authored date",
    "source": "config"
  },
  {
    "category": "useCommitInputAsStashMessage",
    "command": "config.useCommitInputAsStashMessage",
    "title": "Controls whether to use the message from the commit input box as the default stash message.",
    "source": "config"
  },
  {
    "category": "showActionButton",
    "command": "config.showActionButton",
    "title": "Controls whether an action button is shown in the Source Control view.",
    "source": "config"
  },
  {
    "category": "showActionButton",
    "command": "config.showActionButton.commit",
    "title": "Show an action button to commit changes when the local branch has modified files ready to be committed.",
    "source": "config"
  },
  {
    "category": "showActionButton",
    "command": "config.showActionButton.publish",
    "title": "Show an action button to publish the local branch when it does not have a tracking remote branch.",
    "source": "config"
  },
  {
    "category": "showActionButton",
    "command": "config.showActionButton.sync",
    "title": "Show an action button to synchronize changes when the local branch is either ahead or behind the remote branch.",
    "source": "config"
  },
  {
    "category": "statusLimit",
    "command": "config.statusLimit",
    "title": "Controls how to limit the number of changes that can be parsed from Git status command. Can be set to 0 for no limit.",
    "source": "config"
  },
  {
    "category": "experimental",
    "command": "config.experimental.installGuide",
    "title": "Experimental improvements for the git setup flow.",
    "source": "config"
  },
  {
    "category": "repositoryScanIgnoredFolders",
    "command": "config.repositoryScanIgnoredFolders",
    "title": "List of folders that are ignored while scanning for Git repositories when `#git.autoRepositoryDetection#` is set to `true` or `subFolders`.",
    "source": "config"
  },
  {
    "category": "repositoryScanMaxDepth",
    "command": "config.repositoryScanMaxDepth",
    "title": "Controls the depth used when scanning workspace folders for Git repositories when `#git.autoRepositoryDetection#` is set to `true` or `subFolders`. Can be set to `-1` for no limit.",
    "source": "config"
  },
  {
    "category": "useIntegratedAskPass",
    "command": "config.useIntegratedAskPass",
    "title": "Controls whether GIT_ASKPASS should be overwritten to use the integrated version.",
    "source": "config"
  },
  {
    "category": "mergeEditor",
    "command": "config.mergeEditor",
    "title": "Open the merge editor for files that are currently under conflict.",
    "source": "config"
  },
  {
    "category": "optimisticUpdate",
    "command": "config.optimisticUpdate",
    "title": "Controls whether to optimistically update the state of the Source Control view after running git commands.",
    "source": "config"
  },
  {
    "category": "openRepositoryInParentFolders",
    "command": "config.openRepositoryInParentFolders",
    "title": "Control whether a repository in parent folders of workspaces or open files should be opened.",
    "source": "config"
  },
  {
    "category": "openRepositoryInParentFolders",
    "command": "config.openRepositoryInParentFolders.always",
    "title": "Always open a repository in parent folders of workspaces or open files.",
    "source": "config"
  },
  {
    "category": "openRepositoryInParentFolders",
    "command": "config.openRepositoryInParentFolders.never",
    "title": "Never open a repository in parent folders of workspaces or open files.",
    "source": "config"
  },
  {
    "category": "openRepositoryInParentFolders",
    "command": "config.openRepositoryInParentFolders.prompt",
    "title": "Prompt before opening a repository the parent folders of workspaces or open files.",
    "source": "config"
  },
  {
    "category": "publishBeforeContinueOn",
    "command": "config.publishBeforeContinueOn",
    "title": "Controls whether to publish unpublished git state when using Continue Working On from a git repository.",
    "source": "config"
  },
  {
    "category": "publishBeforeContinueOn",
    "command": "config.publishBeforeContinueOn.always",
    "title": "Always publish unpublished git state when using Continue Working On from a git repository",
    "source": "config"
  },
  {
    "category": "publishBeforeContinueOn",
    "command": "config.publishBeforeContinueOn.never",
    "title": "Never publish unpublished git state when using Continue Working On from a git repository",
    "source": "config"
  },
  {
    "category": "publishBeforeContinueOn",
    "command": "config.publishBeforeContinueOn.prompt",
    "title": "Prompt to publish unpublished git state when using Continue Working On from a git repository",
    "source": "config"
  },
  {
    "category": "explorer",
    "command": "submenu.explorer",
    "title": "Git",
    "source": "submenu"
  },
  {
    "category": "commit",
    "command": "submenu.commit",
    "title": "Commit",
    "source": "submenu"
  },
  {
    "category": "commit",
    "command": "submenu.commit.amend",
    "title": "Amend",
    "source": "submenu"
  },
  {
    "category": "commit",
    "command": "submenu.commit.signoff",
    "title": "Sign Off",
    "source": "submenu"
  },
  {
    "category": "changes",
    "command": "submenu.changes",
    "title": "Changes",
    "source": "submenu"
  },
  {
    "category": "pullpush",
    "command": "submenu.pullpush",
    "title": "Pull, Push",
    "source": "submenu"
  },
  {
    "category": "branch",
    "command": "submenu.branch",
    "title": "Branch",
    "source": "submenu"
  },
  {
    "category": "remotes",
    "command": "submenu.remotes",
    "title": "Remote",
    "source": "submenu"
  },
  {
    "category": "stash",
    "command": "submenu.stash",
    "title": "Stash",
    "source": "submenu"
  },
  {
    "category": "tags",
    "command": "submenu.tags",
    "title": "Tags",
    "source": "submenu"
  },
  {
    "category": "added",
    "command": "colors.added",
    "title": "Color for added resources.",
    "source": "colors"
  },
  {
    "category": "modified",
    "command": "colors.modified",
    "title": "Color for modified resources.",
    "source": "colors"
  },
  {
    "category": "stageModified",
    "command": "colors.stageModified",
    "title": "Color for modified resources which have been staged.",
    "source": "colors"
  },
  {
    "category": "stageDeleted",
    "command": "colors.stageDeleted",
    "title": "Color for deleted resources which have been staged.",
    "source": "colors"
  },
  {
    "category": "deleted",
    "command": "colors.deleted",
    "title": "Color for deleted resources.",
    "source": "colors"
  },
  {
    "category": "renamed",
    "command": "colors.renamed",
    "title": "Color for renamed or copied resources.",
    "source": "colors"
  },
  {
    "category": "untracked",
    "command": "colors.untracked",
    "title": "Color for untracked resources.",
    "source": "colors"
  },
  {
    "category": "ignored",
    "command": "colors.ignored",
    "title": "Color for ignored resources.",
    "source": "colors"
  },
  {
    "category": "conflict",
    "command": "colors.conflict",
    "title": "Color for resources with conflicts.",
    "source": "colors"
  },
  {
    "category": "submodule",
    "command": "colors.submodule",
    "title": "Color for submodule resources.",
    "source": "colors"
  },
  {
    "category": "workbench",
    "command": "view.workbench.scm.missing",
    "title": "Install Git, a popular source control system, to track code changes and collaborate with others. Learn more in our [Git guides](https://aka.ms/vscode-scm).",
    "source": "view"
  },
  {
    "category": "workbench",
    "command": "view.workbench.learnMore",
    "title": "To learn more about how to use git and source control in VS Code [read our docs](https://aka.ms/vscode-scm).",
    "source": "view"
  },
  {
    "category": "api",
    "command": "command.api.getRemoteSources",
    "title": "Get Remote Sources",
    "source": "command"
  },
  {
    "category": "gitAuthentication",
    "command": "config.gitAuthentication",
    "title": "Controls whether to enable automatic GitHub authentication for git commands within VS Code.",
    "source": "config"
  },
  {
    "category": "gitProtocol",
    "command": "config.gitProtocol",
    "title": "Controls which protocol is used to clone a GitHub repository",
    "source": "config"
  },
  {
    "category": "grunt",
    "command": "config.grunt.autoDetect",
    "title": "Controls enablement of Grunt task detection. Grunt task detection can cause files in any open workspace to be executed.",
    "source": "config"
  },
  {
    "category": "taskDefinition",
    "command": "grunt.taskDefinition.type.description",
    "title": "The Grunt task to customize.",
    "source": "grunt"
  },
  {
    "category": "taskDefinition",
    "command": "grunt.taskDefinition.args.description",
    "title": "Command line arguments to pass to the grunt task",
    "source": "grunt"
  },
  {
    "category": "taskDefinition",
    "command": "grunt.taskDefinition.file.description",
    "title": "The Grunt file that provides the task. Can be omitted.",
    "source": "grunt"
  },
  {
    "category": "gulp",
    "command": "config.gulp.autoDetect",
    "title": "Controls enablement of Gulp task detection. Gulp task detection can cause files in any open workspace to be executed.",
    "source": "config"
  },
  {
    "category": "taskDefinition",
    "command": "gulp.taskDefinition.type.description",
    "title": "The Gulp task to customize.",
    "source": "gulp"
  },
  {
    "category": "taskDefinition",
    "command": "gulp.taskDefinition.file.description",
    "title": "The Gulp file that provides the task. Can be omitted.",
    "source": "gulp"
  },
  {
    "category": "customData",
    "command": "html.customData.desc",
    "title": "A list of relative file paths pointing to JSON files following the [custom data format](https://github.com/microsoft/vscode-html-languageservice/blob/master/docs/customData.md).\n\nVS Code loads custom data on startup to enhance its HTML support for the custom HTML tags, attributes and attribute values you specify in the JSON files.\n\nThe file paths are relative to workspace and only workspace folder settings are considered.",
    "source": "html"
  },
  {
    "category": "format",
    "command": "html.format.enable.desc",
    "title": "Enable/disable default HTML formatter.",
    "source": "html"
  },
  {
    "category": "format",
    "command": "html.format.wrapLineLength.desc",
    "title": "Maximum amount of characters per line (0 = disable).",
    "source": "html"
  },
  {
    "category": "format",
    "command": "html.format.unformatted.desc",
    "title": "List of tags, comma separated, that shouldn't be reformatted. `null` defaults to all tags listed at https://www.w3.org/TR/html5/dom.html#phrasing-content.",
    "source": "html"
  },
  {
    "category": "format",
    "command": "html.format.contentUnformatted.desc",
    "title": "List of tags, comma separated, where the content shouldn't be reformatted. `null` defaults to the `pre` tag.",
    "source": "html"
  },
  {
    "category": "format",
    "command": "html.format.indentInnerHtml.desc",
    "title": "Indent `<head>` and `<body>` sections.",
    "source": "html"
  },
  {
    "category": "format",
    "command": "html.format.preserveNewLines.desc",
    "title": "Controls whether existing line breaks before elements should be preserved. Only works before elements, not inside tags or for text.",
    "source": "html"
  },
  {
    "category": "format",
    "command": "html.format.maxPreserveNewLines.desc",
    "title": "Maximum number of line breaks to be preserved in one chunk. Use `null` for unlimited.",
    "source": "html"
  },
  {
    "category": "format",
    "command": "html.format.indentHandlebars.desc",
    "title": "Format and indent `{{#foo}}` and `{{/foo}}`.",
    "source": "html"
  },
  {
    "category": "format",
    "command": "html.format.extraLiners.desc",
    "title": "List of tags, comma separated, that should have an extra newline before them. `null` defaults to `\"head, body, /html\"`.",
    "source": "html"
  },
  {
    "category": "format",
    "command": "html.format.wrapAttributes.desc",
    "title": "Wrap attributes.",
    "source": "html"
  },
  {
    "category": "format",
    "command": "html.format.wrapAttributes.auto",
    "title": "Wrap attributes only when line length is exceeded.",
    "source": "html"
  },
  {
    "category": "format",
    "command": "html.format.wrapAttributes.force",
    "title": "Wrap each attribute except first.",
    "source": "html"
  },
  {
    "category": "format",
    "command": "html.format.wrapAttributes.forcealign",
    "title": "Wrap each attribute except first and keep aligned.",
    "source": "html"
  },
  {
    "category": "format",
    "command": "html.format.wrapAttributes.forcemultiline",
    "title": "Wrap each attribute.",
    "source": "html"
  },
  {
    "category": "format",
    "command": "html.format.wrapAttributes.alignedmultiple",
    "title": "Wrap when line length is exceeded, align attributes vertically.",
    "source": "html"
  },
  {
    "category": "format",
    "command": "html.format.wrapAttributes.preserve",
    "title": "Preserve wrapping of attributes.",
    "source": "html"
  },
  {
    "category": "format",
    "command": "html.format.wrapAttributes.preservealigned",
    "title": "Preserve wrapping of attributes but align.",
    "source": "html"
  },
  {
    "category": "format",
    "command": "html.format.templating.desc",
    "title": "Honor django, erb, handlebars and php templating language tags.",
    "source": "html"
  },
  {
    "category": "format",
    "command": "html.format.unformattedContentDelimiter.desc",
    "title": "Keep text content together between this string.",
    "source": "html"
  },
  {
    "category": "format",
    "command": "html.format.wrapAttributesIndentSize.desc",
    "title": "Indent wrapped attributes to after N characters. Use `null` to use the default indent size. Ignored if `#html.format.wrapAttributes#` is set to 'aligned'.",
    "source": "html"
  },
  {
    "category": "suggest",
    "command": "html.suggest.html5.desc",
    "title": "Controls whether the built-in HTML language support suggests HTML5 tags, properties and values.",
    "source": "html"
  },
  {
    "category": "trace",
    "command": "html.trace.server.desc",
    "title": "Traces the communication between VS Code and the HTML language server.",
    "source": "html"
  },
  {
    "category": "validate",
    "command": "html.validate.scripts",
    "title": "Controls whether the built-in HTML language support validates embedded scripts.",
    "source": "html"
  },
  {
    "category": "validate",
    "command": "html.validate.styles",
    "title": "Controls whether the built-in HTML language support validates embedded styles.",
    "source": "html"
  },
  {
    "category": "autoCreateQuotes",
    "command": "html.autoCreateQuotes",
    "title": "Enable/disable auto creation of quotes for HTML attribute assignment. The type of quotes can be configured by `#html.completion.attributeDefaultValue#`.",
    "source": "html"
  },
  {
    "category": "autoClosingTags",
    "command": "html.autoClosingTags",
    "title": "Enable/disable autoclosing of HTML tags.",
    "source": "html"
  },
  {
    "category": "completion",
    "command": "html.completion.attributeDefaultValue",
    "title": "Controls the default value for attributes when completion is accepted.",
    "source": "html"
  },
  {
    "category": "completion",
    "command": "html.completion.attributeDefaultValue.doublequotes",
    "title": "Attribute value is set to \"\".",
    "source": "html"
  },
  {
    "category": "completion",
    "command": "html.completion.attributeDefaultValue.singlequotes",
    "title": "Attribute value is set to ''.",
    "source": "html"
  },
  {
    "category": "completion",
    "command": "html.completion.attributeDefaultValue.empty",
    "title": "Attribute value is not set.",
    "source": "html"
  },
  {
    "category": "mirrorCursorOnMatchingTag",
    "command": "html.mirrorCursorOnMatchingTag",
    "title": "Enable/disable mirroring cursor on matching HTML tag.",
    "source": "html"
  },
  {
    "category": "mirrorCursorOnMatchingTagDeprecationMessage",
    "command": "html.mirrorCursorOnMatchingTagDeprecationMessage",
    "title": "Deprecated in favor of `editor.linkedEditing`",
    "source": "html"
  },
  {
    "category": "hover",
    "command": "html.hover.documentation",
    "title": "Show tag and attribute documentation in hover.",
    "source": "html"
  },
  {
    "category": "hover",
    "command": "html.hover.references",
    "title": "Show references to MDN in hover.",
    "source": "html"
  },
  {
    "category": "pasteImagesAsAttachments",
    "command": "ipynb.pasteImagesAsAttachments.enabled",
    "title": "Enable/disable pasting of images into Markdown cells in ipynb notebook files. Pasted images are inserted as attachments to the cell.",
    "source": "ipynb"
  },
  {
    "category": "title",
    "command": "newUntitledIpynb.title",
    "title": "New Jupyter Notebook",
    "source": "newUntitledIpynb"
  },
  {
    "category": "shortTitle",
    "command": "newUntitledIpynb.shortTitle",
    "title": "Jupyter Notebook",
    "source": "newUntitledIpynb"
  },
  {
    "category": "title",
    "command": "openIpynbInNotebookEditor.title",
    "title": "Open IPYNB File In Notebook Editor",
    "source": "openIpynbInNotebookEditor"
  },
  {
    "category": "title",
    "command": "cleanInvalidImageAttachment.title",
    "title": "Clean Invalid Image Attachment Reference",
    "source": "cleanInvalidImageAttachment"
  },
  {
    "category": "taskDefinition",
    "command": "jake.taskDefinition.type.description",
    "title": "The Jake task to customize.",
    "source": "jake"
  },
  {
    "category": "taskDefinition",
    "command": "jake.taskDefinition.file.description",
    "title": "The Jake file that provides the task. Can be omitted.",
    "source": "jake"
  },
  {
    "category": "jake",
    "command": "config.jake.autoDetect",
    "title": "Controls enablement of Jake task detection. Jake task detection can cause files in any open workspace to be executed.",
    "source": "config"
  },
  {
    "category": "schemas",
    "command": "json.schemas.desc",
    "title": "Associate schemas to JSON files in the current project.",
    "source": "json"
  },
  {
    "category": "schemas",
    "command": "json.schemas.url.desc",
    "title": "A URL to a schema or a relative path to a schema in the current directory",
    "source": "json"
  },
  {
    "category": "schemas",
    "command": "json.schemas.fileMatch.desc",
    "title": "An array of file patterns to match against when resolving JSON files to schemas. `*` can be used as a wildcard. Exclusion patterns can also be defined and start with '!'. A file matches when there is at least one matching pattern and the last matching pattern is not an exclusion pattern.",
    "source": "json"
  },
  {
    "category": "schemas",
    "command": "json.schemas.fileMatch.item.desc",
    "title": "A file pattern that can contain '*' to match against when resolving JSON files to schemas.",
    "source": "json"
  },
  {
    "category": "schemas",
    "command": "json.schemas.schema.desc",
    "title": "The schema definition for the given URL. The schema only needs to be provided to avoid accesses to the schema URL.",
    "source": "json"
  },
  {
    "category": "format",
    "command": "json.format.enable.desc",
    "title": "Enable/disable default JSON formatter",
    "source": "json"
  },
  {
    "category": "format",
    "command": "json.format.keepLines.desc",
    "title": "Keep all existing new lines when formatting.",
    "source": "json"
  },
  {
    "category": "validate",
    "command": "json.validate.enable.desc",
    "title": "Enable/disable JSON validation.",
    "source": "json"
  },
  {
    "category": "tracing",
    "command": "json.tracing.desc",
    "title": "Traces the communication between VS Code and the JSON language server.",
    "source": "json"
  },
  {
    "category": "colorDecorators",
    "command": "json.colorDecorators.enable.desc",
    "title": "Enables or disables color decorators",
    "source": "json"
  },
  {
    "category": "colorDecorators",
    "command": "json.colorDecorators.enable.deprecationMessage",
    "title": "The setting `json.colorDecorators.enable` has been deprecated in favor of `editor.colorDecorators`.",
    "source": "json"
  },
  {
    "category": "schemaResolutionErrorMessage",
    "command": "json.schemaResolutionErrorMessage",
    "title": "Unable to resolve schema.",
    "source": "json"
  },
  {
    "category": "clickToRetry",
    "command": "json.clickToRetry",
    "title": "Click to retry.",
    "source": "json"
  },
  {
    "category": "maxItemsComputed",
    "command": "json.maxItemsComputed.desc",
    "title": "The maximum number of outline symbols and folding regions computed (limited for performance reasons).",
    "source": "json"
  },
  {
    "category": "maxItemsExceededInformation",
    "command": "json.maxItemsExceededInformation.desc",
    "title": "Show notification when exceeding the maximum number of outline symbols and folding regions.",
    "source": "json"
  },
  {
    "category": "enableSchemaDownload",
    "command": "json.enableSchemaDownload.desc",
    "title": "When enabled, JSON schemas can be fetched from http and https locations.",
    "source": "json"
  },
  {
    "category": "command",
    "command": "json.command.clearCache",
    "title": "Clear Schema Cache",
    "source": "json"
  },
  {
    "category": "command",
    "command": "json.command.sort",
    "title": "Sort Document",
    "source": "json"
  },
  {
    "category": "preview",
    "command": "markdown.preview.breaks.desc",
    "title": "Sets how line-breaks are rendered in the Markdown preview. Setting it to 'true' creates a <br> for newlines inside paragraphs.",
    "source": "markdown"
  },
  {
    "category": "preview",
    "command": "markdown.preview.linkify",
    "title": "Convert URL-like text to links in the Markdown preview.",
    "source": "markdown"
  },
  {
    "category": "preview",
    "command": "markdown.preview.typographer",
    "title": "Enable some language-neutral replacement and quotes beautification in the Markdown preview.",
    "source": "markdown"
  },
  {
    "category": "preview",
    "command": "markdown.preview.doubleClickToSwitchToEditor.desc",
    "title": "Double-click in the Markdown preview to switch to the editor.",
    "source": "markdown"
  },
  {
    "category": "preview",
    "command": "markdown.preview.fontFamily.desc",
    "title": "Controls the font family used in the Markdown preview.",
    "source": "markdown"
  },
  {
    "category": "preview",
    "command": "markdown.preview.fontSize.desc",
    "title": "Controls the font size in pixels used in the Markdown preview.",
    "source": "markdown"
  },
  {
    "category": "preview",
    "command": "markdown.preview.lineHeight.desc",
    "title": "Controls the line height used in the Markdown preview. This number is relative to the font size.",
    "source": "markdown"
  },
  {
    "category": "preview",
    "command": "markdown.preview.markEditorSelection.desc",
    "title": "Mark the current editor selection in the Markdown preview.",
    "source": "markdown"
  },
  {
    "category": "preview",
    "command": "markdown.preview.scrollEditorWithPreview.desc",
    "title": "When a Markdown preview is scrolled, update the view of the editor.",
    "source": "markdown"
  },
  {
    "category": "preview",
    "command": "markdown.preview.scrollPreviewWithEditor.desc",
    "title": "When a Markdown editor is scrolled, update the view of the preview.",
    "source": "markdown"
  },
  {
    "category": "preview",
    "command": "markdown.preview.title",
    "title": "Open Preview",
    "source": "markdown"
  },
  {
    "category": "previewSide",
    "command": "markdown.previewSide.title",
    "title": "Open Preview to the Side",
    "source": "markdown"
  },
  {
    "category": "showLockedPreviewToSide",
    "command": "markdown.showLockedPreviewToSide.title",
    "title": "Open Locked Preview to the Side",
    "source": "markdown"
  },
  {
    "category": "showSource",
    "command": "markdown.showSource.title",
    "title": "Show Source",
    "source": "markdown"
  },
  {
    "category": "styles",
    "command": "markdown.styles.dec",
    "title": "A list of URLs or local paths to CSS style sheets to use from the Markdown preview. Relative paths are interpreted relative to the folder open in the Explorer. If there is no open folder, they are interpreted relative to the location of the Markdown file. All '\\' need to be written as '\\\\'.",
    "source": "markdown"
  },
  {
    "category": "showPreviewSecuritySelector",
    "command": "markdown.showPreviewSecuritySelector.title",
    "title": "Change Preview Security Settings",
    "source": "markdown"
  },
  {
    "category": "trace",
    "command": "markdown.trace.extension.desc",
    "title": "Enable debug logging for the Markdown extension.",
    "source": "markdown"
  },
  {
    "category": "trace",
    "command": "markdown.trace.server.desc",
    "title": "Traces the communication between VS Code and the Markdown language server.",
    "source": "markdown"
  },
  {
    "category": "server",
    "command": "markdown.server.log.desc",
    "title": "Controls the logging level of the Markdown language server.",
    "source": "markdown"
  },
  {
    "category": "preview",
    "command": "markdown.preview.refresh.title",
    "title": "Refresh Preview",
    "source": "markdown"
  },
  {
    "category": "preview",
    "command": "markdown.preview.toggleLock.title",
    "title": "Toggle Preview Locking",
    "source": "markdown"
  },
  {
    "category": "findAllFileReferences",
    "command": "markdown.findAllFileReferences",
    "title": "Find File References",
    "source": "markdown"
  },
  {
    "category": "editor",
    "command": "markdown.editor.insertLinkFromWorkspace",
    "title": "Insert Link to File in Workspace",
    "source": "markdown"
  },
  {
    "category": "editor",
    "command": "markdown.editor.insertImageFromWorkspace",
    "title": "Insert Image from Workspace",
    "source": "markdown"
  },
  {
    "category": "markdown",
    "command": "configuration.markdown.preview.openMarkdownLinks.description",
    "title": "Controls how links to other Markdown files in the Markdown preview should be opened.",
    "source": "configuration"
  },
  {
    "category": "markdown",
    "command": "configuration.markdown.preview.openMarkdownLinks.inEditor",
    "title": "Try to open links in the editor.",
    "source": "configuration"
  },
  {
    "category": "markdown",
    "command": "configuration.markdown.preview.openMarkdownLinks.inPreview",
    "title": "Try to open links in the Markdown preview.",
    "source": "configuration"
  },
  {
    "category": "markdown",
    "command": "configuration.markdown.links.openLocation.description",
    "title": "Controls where links in Markdown files should be opened.",
    "source": "configuration"
  },
  {
    "category": "markdown",
    "command": "configuration.markdown.links.openLocation.currentGroup",
    "title": "Open links in the active editor group.",
    "source": "configuration"
  },
  {
    "category": "markdown",
    "command": "configuration.markdown.links.openLocation.beside",
    "title": "Open links beside the active editor.",
    "source": "configuration"
  },
  {
    "category": "markdown",
    "command": "configuration.markdown.suggest.paths.enabled.description",
    "title": "Enable path suggestions while writing links in Markdown files.",
    "source": "configuration"
  },
  {
    "category": "markdown",
    "command": "configuration.markdown.suggest.paths.includeWorkspaceHeaderCompletions",
    "title": "Enable suggestions for headers in other Markdown files in the current workspace. Accepting one of these suggestions inserts the full path to header in that file, for example `[link text](/path/to/file.md#header)`.",
    "source": "configuration"
  },
  {
    "category": "markdown",
    "command": "configuration.markdown.suggest.paths.includeWorkspaceHeaderCompletions.never",
    "title": "Disable workspace header suggestions.",
    "source": "configuration"
  },
  {
    "category": "markdown",
    "command": "configuration.markdown.suggest.paths.includeWorkspaceHeaderCompletions.onDoubleHash",
    "title": "Enable workspace header suggestions after typing `##` in a path, for example `[link text](##`.",
    "source": "configuration"
  },
  {
    "category": "markdown",
    "command": "configuration.markdown.suggest.paths.includeWorkspaceHeaderCompletions.onSingleOrDoubleHash",
    "title": "Enable workspace header suggestions after typing either `##` or `#` in a path, for example `[link text](#` or `[link text](##`.",
    "source": "configuration"
  },
  {
    "category": "markdown",
    "command": "configuration.markdown.editor.drop.enabled",
    "title": "Enable dropping files into a Markdown editor while holding Shift. Requires enabling `#editor.dropIntoEditor.enabled#`.",
    "source": "configuration"
  },
  {
    "category": "markdown",
    "command": "configuration.markdown.editor.pasteLinks.enabled",
    "title": "Enable pasting files into a Markdown editor inserts Markdown links. Requires enabling `#editor.experimental.pasteActions.enabled#`.",
    "source": "configuration"
  },
  {
    "category": "markdown",
    "command": "configuration.markdown.validate.enabled.description",
    "title": "Enable all error reporting in Markdown files.",
    "source": "configuration"
  },
  {
    "category": "markdown",
    "command": "configuration.markdown.validate.referenceLinks.enabled.description",
    "title": "Validate reference links in Markdown files, for example `[link][ref]`. Requires enabling `#markdown.validate.enabled#`.",
    "source": "configuration"
  },
  {
    "category": "markdown",
    "command": "configuration.markdown.validate.fragmentLinks.enabled.description",
    "title": "Validate fragment links to headers in the current Markdown file, for example `[link](#header)`. Requires enabling `#markdown.validate.enabled#`.",
    "source": "configuration"
  },
  {
    "category": "markdown",
    "command": "configuration.markdown.validate.fileLinks.enabled.description",
    "title": "Validate links to other files in Markdown files, for example `[link](/path/to/file.md)`. This checks that the target files exists. Requires enabling `#markdown.validate.enabled#`.",
    "source": "configuration"
  },
  {
    "category": "markdown",
    "command": "configuration.markdown.validate.fileLinks.markdownFragmentLinks.description",
    "title": "Validate the fragment part of links to headers in other files in Markdown files, for example `[link](/path/to/file.md#header)`. Inherits the setting value from `#markdown.validate.fragmentLinks.enabled#` by default.",
    "source": "configuration"
  },
  {
    "category": "markdown",
    "command": "configuration.markdown.validate.ignoredLinks.description",
    "title": "Configure links that should not be validated. For example adding `/about` would not validate the link `[about](/about)`, while the glob `/assets/**/*.svg` would let you skip validation for any link to `.svg` files under the `assets` directory.",
    "source": "configuration"
  },
  {
    "category": "markdown",
    "command": "configuration.markdown.validate.unusedLinkDefinitions.description",
    "title": "Validate link definitions that are unused in the current file.",
    "source": "configuration"
  },
  {
    "category": "markdown",
    "command": "configuration.markdown.validate.duplicateLinkDefinitions.description",
    "title": "Validate duplicated definitions in the current file.",
    "source": "configuration"
  },
  {
    "category": "markdown",
    "command": "configuration.markdown.updateLinksOnFileMove.enabled",
    "title": "Try to update links in Markdown files when a file is renamed/moved in the workspace. Use `#markdown.updateLinksOnFileMove.include#` to configure which files trigger link updates.",
    "source": "configuration"
  },
  {
    "category": "markdown",
    "command": "configuration.markdown.updateLinksOnFileMove.enabled.prompt",
    "title": "Prompt on each file move.",
    "source": "configuration"
  },
  {
    "category": "markdown",
    "command": "configuration.markdown.updateLinksOnFileMove.enabled.always",
    "title": "Always update links automatically.",
    "source": "configuration"
  },
  {
    "category": "markdown",
    "command": "configuration.markdown.updateLinksOnFileMove.enabled.never",
    "title": "Never try to update link and don't prompt.",
    "source": "configuration"
  },
  {
    "category": "markdown",
    "command": "configuration.markdown.updateLinksOnFileMove.include",
    "title": "Glob patterns that specifies files that trigger automatic link updates. See `#markdown.updateLinksOnFileMove.enabled#` for details about this feature.",
    "source": "configuration"
  },
  {
    "category": "markdown",
    "command": "configuration.markdown.updateLinksOnFileMove.include.property",
    "title": "The glob pattern to match file paths against. Set to true to enable the pattern.",
    "source": "configuration"
  },
  {
    "category": "markdown",
    "command": "configuration.markdown.updateLinksOnFileMove.enableForDirectories",
    "title": "Enable updating links when a directory is moved or renamed in the workspace.",
    "source": "configuration"
  },
  {
    "category": "markdown",
    "command": "configuration.markdown.occurrencesHighlight.enabled",
    "title": "Enable highlighting link occurrences in the current document.",
    "source": "configuration"
  },
  {
    "category": "markdown",
    "command": "configuration.markdown.copyFiles.destination",
    "title": "Defines where files copied into a Markdown document should be created. This is a map from globs that match on the Markdown document to destinations.\n\nThe destinations may use the following variables:\n\n- `${documentFileName}` — The full filename of the Markdown document, for example `readme.md`.\n- `${documentBaseName}` — The basename of Markdown document, for example `readme`.\n- `${documentExtName}` — The extension of the Markdown document, for example `md`.\n- `${documentDirName}` — The name of the Markdown document's parent directory.\n- `${documentWorkspaceFolder}` — The workspace folder for the Markdown document, for examples, `/Users/me/myProject`. This is the same as `${documentDirName}` if the file is not part of in a workspace.\n- `${fileName}` — The file name of the dropped file, for example `image.png`.",
    "source": "configuration"
  },
  {
    "category": "markdown",
    "command": "configuration.markdown.preferredMdPathExtensionStyle",
    "title": "Controls if file extensions (e.g. `.md`) are added or not for links to Markdown files. This setting is used when file paths are added by tooling such as path completions or file renames.",
    "source": "configuration"
  },
  {
    "category": "markdown",
    "command": "configuration.markdown.preferredMdPathExtensionStyle.auto",
    "title": "For existing paths, try to maintain the file extension style. For new paths, add file extensions.",
    "source": "configuration"
  },
  {
    "category": "markdown",
    "command": "configuration.markdown.preferredMdPathExtensionStyle.includeExtension",
    "title": "Prefer including the file extension. For example, path completions to a file named `file.md` will insert `file.md`.",
    "source": "configuration"
  },
  {
    "category": "markdown",
    "command": "configuration.markdown.preferredMdPathExtensionStyle.removeExtension",
    "title": "Prefer removing the file extension. For example, path completions to a file named `file.md` will insert `file` without the `.md`.",
    "source": "configuration"
  },
  {
    "category": "markdown",
    "command": "config.markdown.math.enabled",
    "title": "Enable/disable rendering math in the built-in Markdown preview.",
    "source": "config"
  },
  {
    "category": "audioPreview",
    "command": "customEditor.audioPreview.displayName",
    "title": "Audio Preview",
    "source": "customEditor"
  },
  {
    "category": "imagePreview",
    "command": "customEditor.imagePreview.displayName",
    "title": "Image Preview",
    "source": "customEditor"
  },
  {
    "category": "videoPreview",
    "command": "customEditor.videoPreview.displayName",
    "title": "Video Preview",
    "source": "customEditor"
  },
  {
    "category": "zoomIn",
    "command": "command.zoomIn",
    "title": "Zoom in",
    "source": "command"
  },
  {
    "category": "zoomOut",
    "command": "command.zoomOut",
    "title": "Zoom out",
    "source": "command"
  },
  {
    "category": "category",
    "command": "command.category",
    "title": "Merge Conflict",
    "source": "command"
  },
  {
    "category": "accept",
    "command": "command.accept.all-current",
    "title": "Accept All Current",
    "source": "command"
  },
  {
    "category": "accept",
    "command": "command.accept.all-incoming",
    "title": "Accept All Incoming",
    "source": "command"
  },
  {
    "category": "accept",
    "command": "command.accept.all-both",
    "title": "Accept All Both",
    "source": "command"
  },
  {
    "category": "accept",
    "command": "command.accept.current",
    "title": "Accept Current",
    "source": "command"
  },
  {
    "category": "accept",
    "command": "command.accept.incoming",
    "title": "Accept Incoming",
    "source": "command"
  },
  {
    "category": "accept",
    "command": "command.accept.selection",
    "title": "Accept Selection",
    "source": "command"
  },
  {
    "category": "accept",
    "command": "command.accept.both",
    "title": "Accept Both",
    "source": "command"
  },
  {
    "category": "next",
    "command": "command.next",
    "title": "Next Conflict",
    "source": "command"
  },
  {
    "category": "previous",
    "command": "command.previous",
    "title": "Previous Conflict",
    "source": "command"
  },
  {
    "category": "compare",
    "command": "command.compare",
    "title": "Compare Current Conflict",
    "source": "command"
  },
  {
    "category": "title",
    "command": "config.title",
    "title": "Merge Conflict",
    "source": "config"
  },
  {
    "category": "autoNavigateNextConflictEnabled",
    "command": "config.autoNavigateNextConflictEnabled",
    "title": "Whether to automatically navigate to the next merge conflict after resolving a merge conflict.",
    "source": "config"
  },
  {
    "category": "codeLensEnabled",
    "command": "config.codeLensEnabled",
    "title": "Create a CodeLens for merge conflict blocks within editor.",
    "source": "config"
  },
  {
    "category": "decoratorsEnabled",
    "command": "config.decoratorsEnabled",
    "title": "Create decorators for merge conflict blocks within editor.",
    "source": "config"
  },
  {
    "category": "diffViewPosition",
    "command": "config.diffViewPosition",
    "title": "Controls where the diff view should be opened when comparing changes in merge conflicts.",
    "source": "config"
  },
  {
    "category": "diffViewPosition",
    "command": "config.diffViewPosition.current",
    "title": "Open the diff view in the current editor group.",
    "source": "config"
  },
  {
    "category": "diffViewPosition",
    "command": "config.diffViewPosition.beside",
    "title": "Open the diff view next to the current editor group.",
    "source": "config"
  },
  {
    "category": "diffViewPosition",
    "command": "config.diffViewPosition.below",
    "title": "Open the diff view below the current editor group.",
    "source": "config"
  },
  {
    "category": "endpoint",
    "command": "microsoft-sovereign-cloud.endpoint.description",
    "title": "Login endpoint for Azure authentication. Select a national cloud or enter the login URL for a custom Azure cloud.",
    "source": "microsoft-sovereign-cloud"
  },
  {
    "category": "npm",
    "command": "config.npm.autoDetect",
    "title": "Controls whether npm scripts should be automatically detected.",
    "source": "config"
  },
  {
    "category": "npm",
    "command": "config.npm.runSilent",
    "title": "Run npm commands with the `--silent` option.",
    "source": "config"
  },
  {
    "category": "npm",
    "command": "config.npm.packageManager",
    "title": "The package manager used to run scripts.",
    "source": "config"
  },
  {
    "category": "npm",
    "command": "config.npm.packageManager.npm",
    "title": "Use npm as the package manager for running scripts.",
    "source": "config"
  },
  {
    "category": "npm",
    "command": "config.npm.packageManager.yarn",
    "title": "Use yarn as the package manager for running scripts.",
    "source": "config"
  },
  {
    "category": "npm",
    "command": "config.npm.packageManager.pnpm",
    "title": "Use pnpm as the package manager for running scripts.",
    "source": "config"
  },
  {
    "category": "npm",
    "command": "config.npm.packageManager.auto",
    "title": "Auto-detect which package manager to use for running scripts based on lock files and installed package managers.",
    "source": "config"
  },
  {
    "category": "npm",
    "command": "config.npm.exclude",
    "title": "Configure glob patterns for folders that should be excluded from automatic script detection.",
    "source": "config"
  },
  {
    "category": "npm",
    "command": "config.npm.enableScriptExplorer",
    "title": "Enable an explorer view for npm scripts when there is no top-level 'package.json' file.",
    "source": "config"
  },
  {
    "category": "npm",
    "command": "config.npm.scriptExplorerAction",
    "title": "The default click action used in the NPM Scripts Explorer: `open` or `run`, the default is `open`.",
    "source": "config"
  },
  {
    "category": "npm",
    "command": "config.npm.scriptExplorerExclude",
    "title": "An array of regular expressions that indicate which scripts should be excluded from the NPM Scripts view.",
    "source": "config"
  },
  {
    "category": "npm",
    "command": "config.npm.enableRunFromFolder",
    "title": "Enable running npm scripts contained in a folder from the Explorer context menu.",
    "source": "config"
  },
  {
    "category": "npm",
    "command": "config.npm.fetchOnlinePackageInfo",
    "title": "Fetch data from https://registry.npmjs.org and https://registry.bower.io to provide auto-completion and information on hover features on npm dependencies.",
    "source": "config"
  },
  {
    "category": "npm",
    "command": "config.npm.scriptHover",
    "title": "Display hover with 'Run' and 'Debug' commands for scripts.",
    "source": "config"
  },
  {
    "category": "parseError",
    "command": "npm.parseError",
    "title": "Npm task detection: failed to parse the file {0}",
    "source": "npm"
  },
  {
    "category": "script",
    "command": "taskdef.script",
    "title": "The npm script to customize.",
    "source": "taskdef"
  },
  {
    "category": "path",
    "command": "taskdef.path",
    "title": "The path to the folder of the package.json file that provides the script. Can be omitted.",
    "source": "taskdef"
  },
  {
    "category": "name",
    "command": "view.name",
    "title": "NPM Scripts",
    "source": "view"
  },
  {
    "category": "refresh",
    "command": "command.refresh",
    "title": "Refresh",
    "source": "command"
  },
  {
    "category": "run",
    "command": "command.run",
    "title": "Run",
    "source": "command"
  },
  {
    "category": "debug",
    "command": "command.debug",
    "title": "Debug",
    "source": "command"
  },
  {
    "category": "openScript",
    "command": "command.openScript",
    "title": "Open",
    "source": "command"
  },
  {
    "category": "runInstall",
    "command": "command.runInstall",
    "title": "Run Install",
    "source": "command"
  },
  {
    "category": "runSelectedScript",
    "command": "command.runSelectedScript",
    "title": "Run Script",
    "source": "command"
  },
  {
    "category": "runScriptFromFolder",
    "command": "command.runScriptFromFolder",
    "title": "Run NPM Script in Folder...",
    "source": "command"
  },
  {
    "category": "packageManager",
    "command": "command.packageManager",
    "title": "Get Configured Package Manager",
    "source": "command"
  },
  {
    "category": "suggest",
    "command": "configuration.suggest.basic",
    "title": "Controls whether the built-in PHP language suggestions are enabled. The support suggests PHP globals and variables.",
    "source": "configuration"
  },
  {
    "category": "validate",
    "command": "configuration.validate.enable",
    "title": "Enable/disable built-in PHP validation.",
    "source": "configuration"
  },
  {
    "category": "validate",
    "command": "configuration.validate.executablePath",
    "title": "Points to the PHP executable.",
    "source": "configuration"
  },
  {
    "category": "validate",
    "command": "configuration.validate.run",
    "title": "Whether the linter is run on save or on type.",
    "source": "configuration"
  },
  {
    "category": "title",
    "command": "configuration.title",
    "title": "PHP",
    "source": "configuration"
  },
  {
    "category": "categroy",
    "command": "commands.categroy.php",
    "title": "PHP",
    "source": "commands"
  },
  {
    "category": "untrustValidationExecutable",
    "command": "command.untrustValidationExecutable",
    "title": "Disallow PHP validation executable (defined as workspace setting)",
    "source": "command"
  },
  {
    "category": "references",
    "command": "config.references.preferredLocation",
    "title": "Controls whether 'Peek References' or 'Find References' is invoked when selecting CodeLens references.",
    "source": "config"
  },
  {
    "category": "references",
    "command": "config.references.preferredLocation.peek",
    "title": "Show references in peek editor.",
    "source": "config"
  },
  {
    "category": "references",
    "command": "config.references.preferredLocation.view",
    "title": "Show references in separate view.",
    "source": "config"
  },
  {
    "category": "title",
    "command": "container.title",
    "title": "References",
    "source": "container"
  },
  {
    "category": "title",
    "command": "view.title",
    "title": "Reference Search Results",
    "source": "view"
  },
  {
    "category": "category",
    "command": "cmd.category.references",
    "title": "References",
    "source": "cmd"
  },
  {
    "category": "references-view",
    "command": "cmd.references-view.findReferences",
    "title": "Find All References",
    "source": "cmd"
  },
  {
    "category": "references-view",
    "command": "cmd.references-view.findImplementations",
    "title": "Find All Implementations",
    "source": "cmd"
  },
  {
    "category": "references-view",
    "command": "cmd.references-view.clearHistory",
    "title": "Clear History",
    "source": "cmd"
  },
  {
    "category": "references-view",
    "command": "cmd.references-view.clear",
    "title": "Clear",
    "source": "cmd"
  },
  {
    "category": "references-view",
    "command": "cmd.references-view.refresh",
    "title": "Refresh",
    "source": "cmd"
  },
  {
    "category": "references-view",
    "command": "cmd.references-view.pickFromHistory",
    "title": "Show History",
    "source": "cmd"
  },
  {
    "category": "references-view",
    "command": "cmd.references-view.removeReferenceItem",
    "title": "Dismiss",
    "source": "cmd"
  },
  {
    "category": "references-view",
    "command": "cmd.references-view.copy",
    "title": "Copy",
    "source": "cmd"
  },
  {
    "category": "references-view",
    "command": "cmd.references-view.copyAll",
    "title": "Copy All",
    "source": "cmd"
  },
  {
    "category": "references-view",
    "command": "cmd.references-view.copyPath",
    "title": "Copy Path",
    "source": "cmd"
  },
  {
    "category": "references-view",
    "command": "cmd.references-view.refind",
    "title": "Rerun",
    "source": "cmd"
  },
  {
    "category": "references-view",
    "command": "cmd.references-view.showCallHierarchy",
    "title": "Show Call Hierarchy",
    "source": "cmd"
  },
  {
    "category": "references-view",
    "command": "cmd.references-view.showOutgoingCalls",
    "title": "Show Outgoing Calls",
    "source": "cmd"
  },
  {
    "category": "references-view",
    "command": "cmd.references-view.showIncomingCalls",
    "title": "Show Incoming Calls",
    "source": "cmd"
  },
  {
    "category": "references-view",
    "command": "cmd.references-view.removeCallItem",
    "title": "Dismiss",
    "source": "cmd"
  },
  {
    "category": "references-view",
    "command": "cmd.references-view.next",
    "title": "Go to Next Reference",
    "source": "cmd"
  },
  {
    "category": "references-view",
    "command": "cmd.references-view.prev",
    "title": "Go to Previous Reference",
    "source": "cmd"
  },
  {
    "category": "references-view",
    "command": "cmd.references-view.showTypeHierarchy",
    "title": "Show Type Hierarchy",
    "source": "cmd"
  },
  {
    "category": "references-view",
    "command": "cmd.references-view.showSupertypes",
    "title": "Show Supertypes",
    "source": "cmd"
  },
  {
    "category": "references-view",
    "command": "cmd.references-view.showSubtypes",
    "title": "Show Subtypes",
    "source": "cmd"
  },
  {
    "category": "references-view",
    "command": "cmd.references-view.removeTypeItem",
    "title": "Dismiss",
    "source": "cmd"
  },
  {
    "category": "focusLockIndicator",
    "command": "configuration.focusLockIndicator.enabled.description",
    "title": "Enable/disable the floating indicator that shows when focused in the simple browser.",
    "source": "configuration"
  },
  {
    "category": "title",
    "command": "reloadProjects.title",
    "title": "Reload Project",
    "source": "reloadProjects"
  },
  {
    "category": "typescript",
    "command": "configuration.typescript",
    "title": "TypeScript",
    "source": "configuration"
  },
  {
    "category": "suggest",
    "command": "configuration.suggest.completeFunctionCalls",
    "title": "Complete functions with their parameter signature.",
    "source": "configuration"
  },
  {
    "category": "suggest",
    "command": "configuration.suggest.includeAutomaticOptionalChainCompletions",
    "title": "Enable/disable showing completions on potentially undefined values that insert an optional chain call. Requires strict null checks to be enabled.",
    "source": "configuration"
  },
  {
    "category": "suggest",
    "command": "configuration.suggest.includeCompletionsForImportStatements",
    "title": "Enable/disable auto-import-style completions on partially-typed import statements.",
    "source": "configuration"
  },
  {
    "category": "tsdk",
    "command": "typescript.tsdk.desc",
    "title": "Specifies the folder path to the tsserver and `lib*.d.ts` files under a TypeScript install to use for IntelliSense, for example: `./node_modules/typescript/lib`.\n\n- When specified as a user setting, the TypeScript version from `typescript.tsdk` automatically replaces the built-in TypeScript version.\n- When specified as a workspace setting, `typescript.tsdk` allows you to switch to use that workspace version of TypeScript for IntelliSense with the `TypeScript: Select TypeScript version` command.\n\nSee the [TypeScript documentation](https://code.visualstudio.com/docs/typescript/typescript-compiling#_using-newer-typescript-versions) for more detail about managing TypeScript versions.",
    "source": "typescript"
  },
  {
    "category": "disableAutomaticTypeAcquisition",
    "command": "typescript.disableAutomaticTypeAcquisition",
    "title": "Disables [automatic type acquisition](https://code.visualstudio.com/docs/nodejs/working-with-javascript#_typings-and-automatic-type-acquisition). Automatic type acquisition fetches `@types` packages from npm to improve IntelliSense for external libraries.",
    "source": "typescript"
  },
  {
    "category": "enablePromptUseWorkspaceTsdk",
    "command": "typescript.enablePromptUseWorkspaceTsdk",
    "title": "Enables prompting of users to use the TypeScript version configured in the workspace for Intellisense.",
    "source": "typescript"
  },
  {
    "category": "tsserver",
    "command": "typescript.tsserver.enableTracing",
    "title": "Enables tracing TS server performance to a directory. These trace files can be used to diagnose TS Server performance issues. The log may contain file paths, source code, and other potentially sensitive information from your project.",
    "source": "typescript"
  },
  {
    "category": "tsserver",
    "command": "typescript.tsserver.log",
    "title": "Enables logging of the TS server to a file. This log can be used to diagnose TS Server issues. The log may contain file paths, source code, and other potentially sensitive information from your project.",
    "source": "typescript"
  },
  {
    "category": "tsserver",
    "command": "typescript.tsserver.pluginPaths",
    "title": "Additional paths to discover TypeScript Language Service plugins.",
    "source": "typescript"
  },
  {
    "category": "tsserver",
    "command": "typescript.tsserver.pluginPaths.item",
    "title": "Either an absolute or relative path. Relative path will be resolved against workspace folder(s).",
    "source": "typescript"
  },
  {
    "category": "tsserver",
    "command": "typescript.tsserver.trace",
    "title": "Enables tracing of messages sent to the TS server. This trace can be used to diagnose TS Server issues. The trace may contain file paths, source code, and other potentially sensitive information from your project.",
    "source": "typescript"
  },
  {
    "category": "validate",
    "command": "typescript.validate.enable",
    "title": "Enable/disable TypeScript validation.",
    "source": "typescript"
  },
  {
    "category": "format",
    "command": "typescript.format.enable",
    "title": "Enable/disable default TypeScript formatter.",
    "source": "typescript"
  },
  {
    "category": "format",
    "command": "javascript.format.enable",
    "title": "Enable/disable default JavaScript formatter.",
    "source": "javascript"
  },
  {
    "category": "insertSpaceAfterCommaDelimiter",
    "command": "format.insertSpaceAfterCommaDelimiter",
    "title": "Defines space handling after a comma delimiter.",
    "source": "format"
  },
  {
    "category": "insertSpaceAfterConstructor",
    "command": "format.insertSpaceAfterConstructor",
    "title": "Defines space handling after the constructor keyword.",
    "source": "format"
  },
  {
    "category": "insertSpaceAfterSemicolonInForStatements",
    "command": "format.insertSpaceAfterSemicolonInForStatements",
    "title": "Defines space handling after a semicolon in a for statement.",
    "source": "format"
  },
  {
    "category": "insertSpaceBeforeAndAfterBinaryOperators",
    "command": "format.insertSpaceBeforeAndAfterBinaryOperators",
    "title": "Defines space handling after a binary operator.",
    "source": "format"
  },
  {
    "category": "insertSpaceAfterKeywordsInControlFlowStatements",
    "command": "format.insertSpaceAfterKeywordsInControlFlowStatements",
    "title": "Defines space handling after keywords in a control flow statement.",
    "source": "format"
  },
  {
    "category": "insertSpaceAfterFunctionKeywordForAnonymousFunctions",
    "command": "format.insertSpaceAfterFunctionKeywordForAnonymousFunctions",
    "title": "Defines space handling after function keyword for anonymous functions.",
    "source": "format"
  },
  {
    "category": "insertSpaceBeforeFunctionParenthesis",
    "command": "format.insertSpaceBeforeFunctionParenthesis",
    "title": "Defines space handling before function argument parentheses.",
    "source": "format"
  },
  {
    "category": "insertSpaceAfterOpeningAndBeforeClosingNonemptyParenthesis",
    "command": "format.insertSpaceAfterOpeningAndBeforeClosingNonemptyParenthesis",
    "title": "Defines space handling after opening and before closing non-empty parenthesis.",
    "source": "format"
  },
  {
    "category": "insertSpaceAfterOpeningAndBeforeClosingNonemptyBrackets",
    "command": "format.insertSpaceAfterOpeningAndBeforeClosingNonemptyBrackets",
    "title": "Defines space handling after opening and before closing non-empty brackets.",
    "source": "format"
  },
  {
    "category": "insertSpaceAfterOpeningAndBeforeClosingNonemptyBraces",
    "command": "format.insertSpaceAfterOpeningAndBeforeClosingNonemptyBraces",
    "title": "Defines space handling after opening and before closing non-empty braces.",
    "source": "format"
  },
  {
    "category": "insertSpaceAfterOpeningAndBeforeClosingEmptyBraces",
    "command": "format.insertSpaceAfterOpeningAndBeforeClosingEmptyBraces",
    "title": "Defines space handling after opening and before closing empty braces.",
    "source": "format"
  },
  {
    "category": "insertSpaceAfterOpeningAndBeforeClosingTemplateStringBraces",
    "command": "format.insertSpaceAfterOpeningAndBeforeClosingTemplateStringBraces",
    "title": "Defines space handling after opening and before closing template string braces.",
    "source": "format"
  },
  {
    "category": "insertSpaceAfterOpeningAndBeforeClosingJsxExpressionBraces",
    "command": "format.insertSpaceAfterOpeningAndBeforeClosingJsxExpressionBraces",
    "title": "Defines space handling after opening and before closing JSX expression braces.",
    "source": "format"
  },
  {
    "category": "insertSpaceAfterTypeAssertion",
    "command": "format.insertSpaceAfterTypeAssertion",
    "title": "Defines space handling after type assertions in TypeScript.",
    "source": "format"
  },
  {
    "category": "placeOpenBraceOnNewLineForFunctions",
    "command": "format.placeOpenBraceOnNewLineForFunctions",
    "title": "Defines whether an open brace is put onto a new line for functions or not.",
    "source": "format"
  },
  {
    "category": "placeOpenBraceOnNewLineForControlBlocks",
    "command": "format.placeOpenBraceOnNewLineForControlBlocks",
    "title": "Defines whether an open brace is put onto a new line for control blocks or not.",
    "source": "format"
  },
  {
    "category": "semicolons",
    "command": "format.semicolons",
    "title": "Defines handling of optional semicolons.",
    "source": "format"
  },
  {
    "category": "semicolons",
    "command": "format.semicolons.ignore",
    "title": "Don't insert or remove any semicolons.",
    "source": "format"
  },
  {
    "category": "semicolons",
    "command": "format.semicolons.insert",
    "title": "Insert semicolons at statement ends.",
    "source": "format"
  },
  {
    "category": "semicolons",
    "command": "format.semicolons.remove",
    "title": "Remove unnecessary semicolons.",
    "source": "format"
  },
  {
    "category": "validate",
    "command": "javascript.validate.enable",
    "title": "Enable/disable JavaScript validation.",
    "source": "javascript"
  },
  {
    "category": "title",
    "command": "goToProjectConfig.title",
    "title": "Go to Project Configuration",
    "source": "goToProjectConfig"
  },
  {
    "category": "referencesCodeLens",
    "command": "javascript.referencesCodeLens.enabled",
    "title": "Enable/disable references CodeLens in JavaScript files.",
    "source": "javascript"
  },
  {
    "category": "referencesCodeLens",
    "command": "javascript.referencesCodeLens.showOnAllFunctions",
    "title": "Enable/disable references CodeLens on all functions in JavaScript files.",
    "source": "javascript"
  },
  {
    "category": "referencesCodeLens",
    "command": "typescript.referencesCodeLens.enabled",
    "title": "Enable/disable references CodeLens in TypeScript files.",
    "source": "typescript"
  },
  {
    "category": "referencesCodeLens",
    "command": "typescript.referencesCodeLens.showOnAllFunctions",
    "title": "Enable/disable references CodeLens on all functions in TypeScript files.",
    "source": "typescript"
  },
  {
    "category": "implementationsCodeLens",
    "command": "typescript.implementationsCodeLens.enabled",
    "title": "Enable/disable implementations CodeLens. This CodeLens shows the implementers of an interface.",
    "source": "typescript"
  },
  {
    "category": "openTsServerLog",
    "command": "typescript.openTsServerLog.title",
    "title": "Open TS Server log",
    "source": "typescript"
  },
  {
    "category": "restartTsServer",
    "command": "typescript.restartTsServer",
    "title": "Restart TS Server",
    "source": "typescript"
  },
  {
    "category": "selectTypeScriptVersion",
    "command": "typescript.selectTypeScriptVersion.title",
    "title": "Select TypeScript Version...",
    "source": "typescript"
  },
  {
    "category": "reportStyleChecksAsWarnings",
    "command": "typescript.reportStyleChecksAsWarnings",
    "title": "Report style checks as warnings.",
    "source": "typescript"
  },
  {
    "category": "npm",
    "command": "typescript.npm",
    "title": "Specifies the path to the npm executable used for [Automatic Type Acquisition](https://code.visualstudio.com/docs/nodejs/working-with-javascript#_typings-and-automatic-type-acquisition).",
    "source": "typescript"
  },
  {
    "category": "check",
    "command": "typescript.check.npmIsInstalled",
    "title": "Check if npm is installed for [Automatic Type Acquisition](https://code.visualstudio.com/docs/nodejs/working-with-javascript#_typings-and-automatic-type-acquisition).",
    "source": "typescript"
  },
  {
    "category": "suggest",
    "command": "configuration.suggest.names",
    "title": "Enable/disable including unique names from the file in JavaScript suggestions. Note that name suggestions are always disabled in JavaScript code that is semantically checked using `@ts-check` or `checkJs`.",
    "source": "configuration"
  },
  {
    "category": "tsc",
    "command": "typescript.tsc.autoDetect",
    "title": "Controls auto detection of tsc tasks.",
    "source": "typescript"
  },
  {
    "category": "tsc",
    "command": "typescript.tsc.autoDetect.off",
    "title": "Disable this feature.",
    "source": "typescript"
  },
  {
    "category": "tsc",
    "command": "typescript.tsc.autoDetect.on",
    "title": "Create both build and watch tasks.",
    "source": "typescript"
  },
  {
    "category": "tsc",
    "command": "typescript.tsc.autoDetect.build",
    "title": "Only create single run compile tasks.",
    "source": "typescript"
  },
  {
    "category": "tsc",
    "command": "typescript.tsc.autoDetect.watch",
    "title": "Only create compile and watch tasks.",
    "source": "typescript"
  },
  {
    "category": "problemMatchers",
    "command": "typescript.problemMatchers.tsc.label",
    "title": "TypeScript problems",
    "source": "typescript"
  },
  {
    "category": "problemMatchers",
    "command": "typescript.problemMatchers.tscWatch.label",
    "title": "TypeScript problems (watch mode)",
    "source": "typescript"
  },
  {
    "category": "suggest",
    "command": "configuration.suggest.paths",
    "title": "Enable/disable suggestions for paths in import statements and require calls.",
    "source": "configuration"
  },
  {
    "category": "tsserver",
    "command": "configuration.tsserver.useSeparateSyntaxServer",
    "title": "Enable/disable spawning a separate TypeScript server that can more quickly respond to syntax related operations, such as calculating folding or computing document symbols.",
    "source": "configuration"
  },
  {
    "category": "tsserver",
    "command": "configuration.tsserver.useSeparateSyntaxServer.deprecation",
    "title": "This setting has been deprecated in favor of `typescript.tsserver.useSyntaxServer`.",
    "source": "configuration"
  },
  {
    "category": "tsserver",
    "command": "configuration.tsserver.useSyntaxServer",
    "title": "Controls if TypeScript launches a dedicated server to more quickly handle syntax related operations, such as computing code folding.",
    "source": "configuration"
  },
  {
    "category": "tsserver",
    "command": "configuration.tsserver.useSyntaxServer.always",
    "title": "Use a lighter weight syntax server to handle all IntelliSense operations. This syntax server can only provide IntelliSense for opened files.",
    "source": "configuration"
  },
  {
    "category": "tsserver",
    "command": "configuration.tsserver.useSyntaxServer.never",
    "title": "Don't use a dedicated syntax server. Use a single server to handle all IntelliSense operations.",
    "source": "configuration"
  },
  {
    "category": "tsserver",
    "command": "configuration.tsserver.useSyntaxServer.auto",
    "title": "Spawn both a full server and a lighter weight server dedicated to syntax operations. The syntax server is used to speed up syntax operations and provide IntelliSense while projects are loading.",
    "source": "configuration"
  },
  {
    "category": "tsserver",
    "command": "configuration.tsserver.maxTsServerMemory",
    "title": "The maximum amount of memory (in MB) to allocate to the TypeScript server process.",
    "source": "configuration"
  },
  {
    "category": "tsserver",
    "command": "configuration.tsserver.experimental.enableProjectDiagnostics",
    "title": "(Experimental) Enables project wide error reporting.",
    "source": "configuration"
  },
  {
    "category": "locale",
    "command": "typescript.locale",
    "title": "Sets the locale used to report JavaScript and TypeScript errors. Defaults to use VS Code's locale.",
    "source": "typescript"
  },
  {
    "category": "implicitProjectConfig",
    "command": "configuration.implicitProjectConfig.module",
    "title": "Sets the module system for the program. See more: https://www.typescriptlang.org/tsconfig#module.",
    "source": "configuration"
  },
  {
    "category": "implicitProjectConfig",
    "command": "configuration.implicitProjectConfig.target",
    "title": "Set target JavaScript language version for emitted JavaScript and include library declarations. See more: https://www.typescriptlang.org/tsconfig#target.",
    "source": "configuration"
  },
  {
    "category": "implicitProjectConfig",
    "command": "configuration.implicitProjectConfig.checkJs",
    "title": "Enable/disable semantic checking of JavaScript files. Existing `jsconfig.json` or `tsconfig.json` files override this setting.",
    "source": "configuration"
  },
  {
    "category": "javascript",
    "command": "configuration.javascript.checkJs.checkJs.deprecation",
    "title": "This setting has been deprecated in favor of `js/ts.implicitProjectConfig.checkJs`.",
    "source": "configuration"
  },
  {
    "category": "implicitProjectConfig",
    "command": "configuration.implicitProjectConfig.experimentalDecorators",
    "title": "Enable/disable `experimentalDecorators` in JavaScript files that are not part of a project. Existing `jsconfig.json` or `tsconfig.json` files override this setting.",
    "source": "configuration"
  },
  {
    "category": "javascript",
    "command": "configuration.javascript.checkJs.experimentalDecorators.deprecation",
    "title": "This setting has been deprecated in favor of `js/ts.implicitProjectConfig.experimentalDecorators`.",
    "source": "configuration"
  },
  {
    "category": "implicitProjectConfig",
    "command": "configuration.implicitProjectConfig.strictNullChecks",
    "title": "Enable/disable [strict null checks](https://www.typescriptlang.org/tsconfig#strictNullChecks) in JavaScript and TypeScript files that are not part of a project. Existing `jsconfig.json` or `tsconfig.json` files override this setting.",
    "source": "configuration"
  },
  {
    "category": "implicitProjectConfig",
    "command": "configuration.implicitProjectConfig.strictFunctionTypes",
    "title": "Enable/disable [strict function types](https://www.typescriptlang.org/tsconfig#strictFunctionTypes) in JavaScript and TypeScript files that are not part of a project. Existing `jsconfig.json` or `tsconfig.json` files override this setting.",
    "source": "configuration"
  },
  {
    "category": "suggest",
    "command": "configuration.suggest.jsdoc.generateReturns",
    "title": "Enable/disable generating `@returns` annotations for JSDoc templates.",
    "source": "configuration"
  },
  {
    "category": "suggest",
    "command": "configuration.suggest.autoImports",
    "title": "Enable/disable auto import suggestions.",
    "source": "configuration"
  },
  {
    "category": "preferGoToSourceDefinition",
    "command": "configuration.preferGoToSourceDefinition",
    "title": "Makes Go to Definition avoid type declaration files when possible by triggering Go to Source Definition instead. This allows Go to Source Definition to be triggered with the mouse gesture. Requires using TypeScript 4.7+ in the workspace.",
    "source": "configuration"
  },
  {
    "category": "parameterNames",
    "command": "inlayHints.parameterNames.none",
    "title": "Disable parameter name hints.",
    "source": "inlayHints"
  },
  {
    "category": "parameterNames",
    "command": "inlayHints.parameterNames.literals",
    "title": "Enable parameter name hints only for literal arguments.",
    "source": "inlayHints"
  },
  {
    "category": "parameterNames",
    "command": "inlayHints.parameterNames.all",
    "title": "Enable parameter name hints for literal and non-literal arguments.",
    "source": "inlayHints"
  },
  {
    "category": "inlayHints",
    "command": "configuration.inlayHints.parameterNames.suppressWhenArgumentMatchesName",
    "title": "Suppress parameter name hints on arguments whose text is identical to the parameter name.",
    "source": "configuration"
  },
  {
    "category": "inlayHints",
    "command": "configuration.inlayHints.variableTypes.suppressWhenTypeMatchesName",
    "title": "Suppress type hints on variables whose name is identical to the type name. Requires using TypeScript 4.8+ in the workspace.",
    "source": "configuration"
  },
  {
    "category": "tsconfig",
    "command": "taskDefinition.tsconfig.description",
    "title": "The tsconfig file that defines the TS build.",
    "source": "taskDefinition"
  },
  {
    "category": "suggestionActions",
    "command": "javascript.suggestionActions.enabled",
    "title": "Enable/disable suggestion diagnostics for JavaScript files in the editor.",
    "source": "javascript"
  },
  {
    "category": "suggestionActions",
    "command": "typescript.suggestionActions.enabled",
    "title": "Enable/disable suggestion diagnostics for TypeScript files in the editor.",
    "source": "typescript"
  },
  {
    "category": "preferences",
    "command": "typescript.preferences.quoteStyle",
    "title": "Preferred quote style to use for Quick Fixes.",
    "source": "typescript"
  },
  {
    "category": "preferences",
    "command": "typescript.preferences.quoteStyle.single",
    "title": "Always use single quotes: `'`",
    "source": "typescript"
  },
  {
    "category": "preferences",
    "command": "typescript.preferences.quoteStyle.double",
    "title": "Always use double quotes: `\"`",
    "source": "typescript"
  },
  {
    "category": "preferences",
    "command": "typescript.preferences.quoteStyle.auto",
    "title": "Infer quote type from existing code",
    "source": "typescript"
  },
  {
    "category": "preferences",
    "command": "typescript.preferences.importModuleSpecifier",
    "title": "Preferred path style for auto imports.",
    "source": "typescript"
  },
  {
    "category": "preferences",
    "command": "typescript.preferences.importModuleSpecifier.shortest",
    "title": "Prefers a non-relative import only if one is available that has fewer path segments than a relative import.",
    "source": "typescript"
  },
  {
    "category": "preferences",
    "command": "typescript.preferences.importModuleSpecifier.relative",
    "title": "Prefers a relative path to the imported file location.",
    "source": "typescript"
  },
  {
    "category": "preferences",
    "command": "typescript.preferences.importModuleSpecifier.nonRelative",
    "title": "Prefers a non-relative import based on the `baseUrl` or `paths` configured in your `jsconfig.json` / `tsconfig.json`.",
    "source": "typescript"
  },
  {
    "category": "preferences",
    "command": "typescript.preferences.importModuleSpecifier.projectRelative",
    "title": "Prefers a non-relative import only if the relative import path would leave the package or project directory.",
    "source": "typescript"
  },
  {
    "category": "preferences",
    "command": "typescript.preferences.importModuleSpecifierEnding",
    "title": "Preferred path ending for auto imports.",
    "source": "typescript"
  },
  {
    "category": "preferences",
    "command": "typescript.preferences.importModuleSpecifierEnding.auto",
    "title": "Use project settings to select a default.",
    "source": "typescript"
  },
  {
    "category": "preferences",
    "command": "typescript.preferences.importModuleSpecifierEnding.minimal",
    "title": "Shorten `./component/index.js` to `./component`.",
    "source": "typescript"
  },
  {
    "category": "preferences",
    "command": "typescript.preferences.importModuleSpecifierEnding.index",
    "title": "Shorten `./component/index.js` to `./component/index`.",
    "source": "typescript"
  },
  {
    "category": "preferences",
    "command": "typescript.preferences.importModuleSpecifierEnding.js",
    "title": "Do not shorten path endings; include the `.js` extension.",
    "source": "typescript"
  },
  {
    "category": "preferences",
    "command": "typescript.preferences.jsxAttributeCompletionStyle",
    "title": "Preferred style for JSX attribute completions.",
    "source": "typescript"
  },
  {
    "category": "preferences",
    "command": "javascript.preferences.jsxAttributeCompletionStyle.auto",
    "title": "Insert `={}` or `=\"\"` after attribute names based on the prop type. See `javascript.preferences.quoteStyle` to control the type of quotes used for string attributes.",
    "source": "javascript"
  },
  {
    "category": "preferences",
    "command": "typescript.preferences.jsxAttributeCompletionStyle.auto",
    "title": "Insert `={}` or `=\"\"` after attribute names based on the prop type. See `typescript.preferences.quoteStyle` to control the type of quotes used for string attributes.",
    "source": "typescript"
  },
  {
    "category": "preferences",
    "command": "typescript.preferences.jsxAttributeCompletionStyle.braces",
    "title": "Insert `={}` after attribute names.",
    "source": "typescript"
  },
  {
    "category": "preferences",
    "command": "typescript.preferences.jsxAttributeCompletionStyle.none",
    "title": "Only insert attribute names.",
    "source": "typescript"
  },
  {
    "category": "preferences",
    "command": "typescript.preferences.includePackageJsonAutoImports",
    "title": "Enable/disable searching `package.json` dependencies for available auto imports.",
    "source": "typescript"
  },
  {
    "category": "preferences",
    "command": "typescript.preferences.includePackageJsonAutoImports.auto",
    "title": "Search dependencies based on estimated performance impact.",
    "source": "typescript"
  },
  {
    "category": "preferences",
    "command": "typescript.preferences.includePackageJsonAutoImports.on",
    "title": "Always search dependencies.",
    "source": "typescript"
  },
  {
    "category": "preferences",
    "command": "typescript.preferences.includePackageJsonAutoImports.off",
    "title": "Never search dependencies.",
    "source": "typescript"
  },
  {
    "category": "preferences",
    "command": "typescript.preferences.autoImportFileExcludePatterns",
    "title": "Specify glob patterns of files to exclude from auto imports. Requires using TypeScript 4.8 or newer in the workspace.",
    "source": "typescript"
  },
  {
    "category": "updateImportsOnFileMove",
    "command": "typescript.updateImportsOnFileMove.enabled",
    "title": "Enable/disable automatic updating of import paths when you rename or move a file in VS Code.",
    "source": "typescript"
  },
  {
    "category": "updateImportsOnFileMove",
    "command": "typescript.updateImportsOnFileMove.enabled.prompt",
    "title": "Prompt on each rename.",
    "source": "typescript"
  },
  {
    "category": "updateImportsOnFileMove",
    "command": "typescript.updateImportsOnFileMove.enabled.always",
    "title": "Always update paths automatically.",
    "source": "typescript"
  },
  {
    "category": "updateImportsOnFileMove",
    "command": "typescript.updateImportsOnFileMove.enabled.never",
    "title": "Never rename paths and don't prompt.",
    "source": "typescript"
  },
  {
    "category": "autoClosingTags",
    "command": "typescript.autoClosingTags",
    "title": "Enable/disable automatic closing of JSX tags.",
    "source": "typescript"
  },
  {
    "category": "suggest",
    "command": "typescript.suggest.enabled",
    "title": "Enabled/disable autocomplete suggestions.",
    "source": "typescript"
  },
  {
    "category": "surveys",
    "command": "configuration.surveys.enabled",
    "title": "Enabled/disable occasional surveys that help us improve VS Code's JavaScript and TypeScript support.",
    "source": "configuration"
  },
  {
    "category": "suggest",
    "command": "configuration.suggest.completeJSDocs",
    "title": "Enable/disable suggestion to complete JSDoc comments.",
    "source": "configuration"
  },
  {
    "category": "tsserver",
    "command": "configuration.tsserver.watchOptions",
    "title": "Configure which watching strategies should be used to keep track of files and directories.",
    "source": "configuration"
  },
  {
    "category": "tsserver",
    "command": "configuration.tsserver.watchOptions.watchFile",
    "title": "Strategy for how individual files are watched.",
    "source": "configuration"
  },
  {
    "category": "tsserver",
    "command": "configuration.tsserver.watchOptions.watchFile.fixedChunkSizePolling",
    "title": "Polls files in chunks at regular interval.",
    "source": "configuration"
  },
  {
    "category": "tsserver",
    "command": "configuration.tsserver.watchOptions.watchFile.fixedPollingInterval",
    "title": "Check every file for changes several times a second at a fixed interval.",
    "source": "configuration"
  },
  {
    "category": "tsserver",
    "command": "configuration.tsserver.watchOptions.watchFile.priorityPollingInterval",
    "title": "Check every file for changes several times a second, but use heuristics to check certain types of files less frequently than others.",
    "source": "configuration"
  },
  {
    "category": "tsserver",
    "command": "configuration.tsserver.watchOptions.watchFile.dynamicPriorityPolling",
    "title": "Use a dynamic queue where less-frequently modified files will be checked less often.",
    "source": "configuration"
  },
  {
    "category": "tsserver",
    "command": "configuration.tsserver.watchOptions.watchFile.useFsEvents",
    "title": "Attempt to use the operating system/file system's native events for file changes.",
    "source": "configuration"
  },
  {
    "category": "tsserver",
    "command": "configuration.tsserver.watchOptions.watchFile.useFsEventsOnParentDirectory",
    "title": "Attempt to use the operating system/file system's native events to listen for changes on a file's containing directories. This can use fewer file watchers, but might be less accurate.",
    "source": "configuration"
  },
  {
    "category": "tsserver",
    "command": "configuration.tsserver.watchOptions.watchDirectory",
    "title": "Strategy for how entire directory trees are watched under systems that lack recursive file-watching functionality.",
    "source": "configuration"
  },
  {
    "category": "tsserver",
    "command": "configuration.tsserver.watchOptions.watchDirectory.fixedChunkSizePolling",
    "title": "Polls directories in chunks at regular interval.",
    "source": "configuration"
  },
  {
    "category": "tsserver",
    "command": "configuration.tsserver.watchOptions.watchDirectory.fixedPollingInterval",
    "title": "Check every directory for changes several times a second at a fixed interval.",
    "source": "configuration"
  },
  {
    "category": "tsserver",
    "command": "configuration.tsserver.watchOptions.watchDirectory.dynamicPriorityPolling",
    "title": "Use a dynamic queue where less-frequently modified directories will be checked less often.",
    "source": "configuration"
  },
  {
    "category": "tsserver",
    "command": "configuration.tsserver.watchOptions.watchDirectory.useFsEvents",
    "title": "Attempt to use the operating system/file system's native events for directory changes.",
    "source": "configuration"
  },
  {
    "category": "tsserver",
    "command": "configuration.tsserver.watchOptions.fallbackPolling",
    "title": "When using file system events, this option specifies the polling strategy that gets used when the system runs out of native file watchers and/or doesn't support native file watchers.",
    "source": "configuration"
  },
  {
    "category": "tsserver",
    "command": "configuration.tsserver.watchOptions.fallbackPolling.fixedPollingInterval",
    "title": "Check every file for changes several times a second at a fixed interval.",
    "source": "configuration"
  },
  {
    "category": "tsserver",
    "command": "configuration.tsserver.watchOptions.fallbackPolling.priorityPollingInterval",
    "title": "Check every file for changes several times a second, but use heuristics to check certain types of files less frequently than others.",
    "source": "configuration"
  },
  {
    "category": "tsserver",
    "command": "configuration.tsserver.watchOptions.fallbackPolling.dynamicPriorityPolling ",
    "title": "Use a dynamic queue where less-frequently modified files will be checked less often.",
    "source": "configuration"
  },
  {
    "category": "tsserver",
    "command": "configuration.tsserver.watchOptions.synchronousWatchDirectory",
    "title": "Disable deferred watching on directories. Deferred watching is useful when lots of file changes might occur at once (e.g. a change in node_modules from running npm install), but you might want to disable it with this flag for some less-common setups.",
    "source": "configuration"
  },
  {
    "category": "preferences",
    "command": "typescript.preferences.renameShorthandProperties.deprecationMessage",
    "title": "The setting 'typescript.preferences.renameShorthandProperties' has been deprecated in favor of 'typescript.preferences.useAliasesForRenames'",
    "source": "typescript"
  },
  {
    "category": "preferences",
    "command": "typescript.preferences.useAliasesForRenames",
    "title": "Enable/disable introducing aliases for object shorthand properties during renames.",
    "source": "typescript"
  },
  {
    "category": "workspaceSymbols",
    "command": "typescript.workspaceSymbols.scope",
    "title": "Controls which files are searched by [Go to Symbol in Workspace](https://code.visualstudio.com/docs/editor/editingevolved#_open-symbol-by-name).",
    "source": "typescript"
  },
  {
    "category": "workspaceSymbols",
    "command": "typescript.workspaceSymbols.scope.allOpenProjects",
    "title": "Search all open JavaScript or TypeScript projects for symbols.",
    "source": "typescript"
  },
  {
    "category": "workspaceSymbols",
    "command": "typescript.workspaceSymbols.scope.currentProject",
    "title": "Only search for symbols in the current JavaScript or TypeScript project.",
    "source": "typescript"
  },
  {
    "category": "refactor",
    "command": "codeActions.refactor.extract.constant.title",
    "title": "Extract constant",
    "source": "codeActions"
  },
  {
    "category": "refactor",
    "command": "codeActions.refactor.extract.constant.description",
    "title": "Extract expression to constant.",
    "source": "codeActions"
  },
  {
    "category": "refactor",
    "command": "codeActions.refactor.extract.function.title",
    "title": "Extract function",
    "source": "codeActions"
  },
  {
    "category": "refactor",
    "command": "codeActions.refactor.extract.function.description",
    "title": "Extract expression to method or function.",
    "source": "codeActions"
  },
  {
    "category": "refactor",
    "command": "codeActions.refactor.extract.type.title",
    "title": "Extract type",
    "source": "codeActions"
  },
  {
    "category": "refactor",
    "command": "codeActions.refactor.extract.type.description",
    "title": "Extract type to a type alias.",
    "source": "codeActions"
  },
  {
    "category": "refactor",
    "command": "codeActions.refactor.extract.interface.title",
    "title": "Extract interface",
    "source": "codeActions"
  },
  {
    "category": "refactor",
    "command": "codeActions.refactor.extract.interface.description",
    "title": "Extract type to an interface.",
    "source": "codeActions"
  },
  {
    "category": "refactor",
    "command": "codeActions.refactor.rewrite.import.title",
    "title": "Convert import",
    "source": "codeActions"
  },
  {
    "category": "refactor",
    "command": "codeActions.refactor.rewrite.import.description",
    "title": "Convert between named imports and namespace imports.",
    "source": "codeActions"
  },
  {
    "category": "refactor",
    "command": "codeActions.refactor.rewrite.export.title",
    "title": "Convert export",
    "source": "codeActions"
  },
  {
    "category": "refactor",
    "command": "codeActions.refactor.rewrite.export.description",
    "title": "Convert between default export and named export.",
    "source": "codeActions"
  },
  {
    "category": "refactor",
    "command": "codeActions.refactor.move.newFile.title",
    "title": "Move to a new file",
    "source": "codeActions"
  },
  {
    "category": "refactor",
    "command": "codeActions.refactor.move.newFile.description",
    "title": "Move the expression to a new file.",
    "source": "codeActions"
  },
  {
    "category": "refactor",
    "command": "codeActions.refactor.rewrite.arrow.braces.title",
    "title": "Rewrite arrow braces",
    "source": "codeActions"
  },
  {
    "category": "refactor",
    "command": "codeActions.refactor.rewrite.arrow.braces.description",
    "title": "Add or remove braces in an arrow function.",
    "source": "codeActions"
  },
  {
    "category": "refactor",
    "command": "codeActions.refactor.rewrite.parameters.toDestructured.title",
    "title": "Convert parameters to destructured object",
    "source": "codeActions"
  },
  {
    "category": "refactor",
    "command": "codeActions.refactor.rewrite.property.generateAccessors.title",
    "title": "Generate accessors",
    "source": "codeActions"
  },
  {
    "category": "refactor",
    "command": "codeActions.refactor.rewrite.property.generateAccessors.description",
    "title": "Generate 'get' and 'set' accessors",
    "source": "codeActions"
  },
  {
    "category": "source",
    "command": "codeActions.source.organizeImports.title",
    "title": "Organize Imports",
    "source": "codeActions"
  },
  {
    "category": "sortImports",
    "command": "typescript.sortImports",
    "title": "Sort Imports",
    "source": "typescript"
  },
  {
    "category": "removeUnusedImports",
    "command": "typescript.removeUnusedImports",
    "title": "Remove Unused Imports",
    "source": "typescript"
  },
  {
    "category": "findAllFileReferences",
    "command": "typescript.findAllFileReferences",
    "title": "Find File References",
    "source": "typescript"
  },
  {
    "category": "goToSourceDefinition",
    "command": "typescript.goToSourceDefinition",
    "title": "Go to Source Definition",
    "source": "typescript"
  },
  {
    "category": "suggest",
    "command": "configuration.suggest.classMemberSnippets.enabled",
    "title": "Enable/disable snippet completions for class members.",
    "source": "configuration"
  },
  {
    "category": "suggest",
    "command": "configuration.suggest.objectLiteralMethodSnippets.enabled",
    "title": "Enable/disable snippet completions for methods in object literals. Requires using TypeScript 4.7+ in the workspace.",
    "source": "configuration"
  },
  {
    "category": "experimental",
    "command": "typescript.experimental.tsserver.web.enableProjectWideIntellisense",
    "title": "Enable/disable project-wide IntelliSense on web. Requires that VS Code is running in a trusted context.",
    "source": "typescript"
  },
  {
    "category": "nodejsWelcome",
    "command": "walkthroughs.nodejsWelcome.title",
    "title": "Get started with JavaScript and Node.js",
    "source": "walkthroughs"
  },
  {
    "category": "nodejsWelcome",
    "command": "walkthroughs.nodejsWelcome.description",
    "title": "Make the most of Visual Studio Code's first-class JavaScript experience.",
    "source": "walkthroughs"
  },
  {
    "category": "nodejsWelcome",
    "command": "walkthroughs.nodejsWelcome.downloadNode.forMacOrWindows.title",
    "title": "Install Node.js",
    "source": "walkthroughs"
  },
  {
    "category": "nodejsWelcome",
    "command": "walkthroughs.nodejsWelcome.downloadNode.forMacOrWindows.description",
    "title": "Node.js is an easy way to run JavaScript code. You can use it to quickly build command-line apps and servers. It also comes with npm, a package manager which makes reusing and sharing JavaScript code easy.\n[Install Node.js](https://nodejs.org/en/download/)",
    "source": "walkthroughs"
  },
  {
    "category": "nodejsWelcome",
    "command": "walkthroughs.nodejsWelcome.downloadNode.forLinux.title",
    "title": "Install Node.js",
    "source": "walkthroughs"
  },
  {
    "category": "nodejsWelcome",
    "command": "walkthroughs.nodejsWelcome.downloadNode.forLinux.description",
    "title": "Node.js is an easy way to run JavaScript code. You can use it to quickly build command-line apps and servers. It also comes with npm, a package manager which makes reusing and sharing JavaScript code easy.\n[Install Node.js](https://nodejs.org/en/download/package-manager/)",
    "source": "walkthroughs"
  },
  {
    "category": "nodejsWelcome",
    "command": "walkthroughs.nodejsWelcome.makeJsFile.title",
    "title": "Create a JavaScript File",
    "source": "walkthroughs"
  },
  {
    "category": "nodejsWelcome",
    "command": "walkthroughs.nodejsWelcome.makeJsFile.description",
    "title": "Let's write our first JavaScript file. We'll have to create a new file and save it with the ``.js`` extension at the end of the file name.\n[Create a JavaScript File](command:javascript-walkthrough.commands.createJsFile)",
    "source": "walkthroughs"
  },
  {
    "category": "nodejsWelcome",
    "command": "walkthroughs.nodejsWelcome.debugJsFile.title",
    "title": "Run and Debug your JavaScript",
    "source": "walkthroughs"
  },
  {
    "category": "nodejsWelcome",
    "command": "walkthroughs.nodejsWelcome.debugJsFile.description",
    "title": "Once you've installed Node.js, you can run JavaScript programs at a terminal by entering ``node your-file-name.js``\nAnother easy way to run Node.js programs is by using VS Code's debugger which lets you run your code, pause at different points, and help you understand what's going on step-by-step.\n[Start Debugging](command:javascript-walkthrough.commands.debugJsFile)",
    "source": "walkthroughs"
  },
  {
    "category": "nodejsWelcome",
    "command": "walkthroughs.nodejsWelcome.debugJsFile.altText",
    "title": "Debug and run your JavaScript code in Node.js with Visual Studio Code.",
    "source": "walkthroughs"
  },
  {
    "category": "nodejsWelcome",
    "command": "walkthroughs.nodejsWelcome.learnMoreAboutJs.title",
    "title": "Explore More",
    "source": "walkthroughs"
  },
  {
    "category": "nodejsWelcome",
    "command": "walkthroughs.nodejsWelcome.learnMoreAboutJs.description",
    "title": "Want to get more comfortable with JavaScript, Node.js, and VS Code? Be sure to check out our docs!\nWe've got lots of resources for learning [JavaScript](https://code.visualstudio.com/docs/nodejs/working-with-javascript) and [Node.js](https://code.visualstudio.com/docs/nodejs/nodejs-tutorial).\n\n[Learn More](https://code.visualstudio.com/docs/nodejs/nodejs-tutorial)",
    "source": "walkthroughs"
  },
  {
    "category": "nodejsWelcome",
    "command": "walkthroughs.nodejsWelcome.learnMoreAboutJs.altText",
    "title": "Learn more about JavaScript and Node.js in Visual Studio Code.",
    "source": "walkthroughs"
  },
  {
    "category": "Apply Refactoring",
    "command": "refactorPreview.apply",
    "title": "Apply Refactoring",
    "source": "refactorPreview"
  },
  {
    "category": "Refactor Preview",
    "command": "refactorPreview.discard",
    "title": "Refactor Preview",
    "source": "refactorPreview"
  },
  {
    "category": "Discard Refactoring",
    "command": "refactorPreview.toggleCheckedState",
    "title": "Discard Refactoring",
    "source": "refactorPreview"
  },
  {
    "category": "Refactor Preview",
    "command": "refactorPreview.groupByFile",
    "title": "Refactor Preview",
    "source": "refactorPreview"
  },
  {
    "category": "Toggle Change",
    "command": "refactorPreview.groupByType",
    "title": "Toggle Change",
    "source": "refactorPreview"
  },
  {
    "category": "Refactor Preview",
    "command": "refactorPreview.toggleGrouping",
    "title": "Refactor Preview",
    "source": "refactorPreview"
  },
  {
    "category": "Peek Call Hierarchy",
    "command": "editor.showCallHierarchy",
    "title": "Peek Call Hierarchy",
    "source": "editor"
  },
  {
    "category": "Show Incoming Calls",
    "command": "editor.showIncomingCalls",
    "title": "Show Incoming Calls",
    "source": "editor"
  },
  {
    "category": "Show Outgoing Calls",
    "command": "editor.showOutgoingCalls",
    "title": "Show Outgoing Calls",
    "source": "editor"
  },
  {
    "category": "Refocus Call Hierarchy",
    "command": "editor.refocusCallHierarchy",
    "title": "Refocus Call Hierarchy",
    "source": "editor"
  },
  {
    "category": "Run Commands",
    "command": "runCommands",
    "title": "Run Commands",
    "source": "runCommands"
  },
  {
    "category": "Terminate Thread",
    "command": "debug.installAdditionalDebuggers",
    "title": "Terminate Thread",
    "source": "debug"
  },
  {
    "category": "Focus on Debug Console View",
    "command": "workbench.debug.action.toggleRepl",
    "title": "Focus on Debug Console View",
    "source": "workbench"
  },
  {
    "category": "Jump to Cursor",
    "command": "workbench.debug.action.focusVariablesView",
    "title": "Jump to Cursor",
    "source": "workbench"
  },
  {
    "category": "Set Next Statement",
    "command": "workbench.debug.action.focusWatchView",
    "title": "Set Next Statement",
    "source": "workbench"
  },
  {
    "category": "Run to Cursor",
    "command": "workbench.debug.action.focusCallStackView",
    "title": "Run to Cursor",
    "source": "workbench"
  },
  {
    "category": "Evaluate in Debug Console",
    "command": "workbench.debug.action.focusBreakpointsView",
    "title": "Evaluate in Debug Console",
    "source": "workbench"
  },
  {
    "category": "Add to Watch",
    "command": "debug",
    "title": "Add to Watch",
    "source": "debug"
  },
  {
    "category": "Continue Working On...",
    "command": "_workbench.editSessions.actions.continueEditSession",
    "title": "Continue Working On...",
    "source": "_workbench"
  },
  {
    "category": "Open In Local Folder",
    "command": "_workbench.editSessions.actions.continueEditSession.openLocalFolder",
    "title": "Open In Local Folder",
    "source": "_workbench"
  },
  {
    "category": "Show Log",
    "command": "workbench.editSessions.actions.showOutputChannel",
    "title": "Show Log",
    "source": "workbench"
  },
  {
    "category": "Show Cloud Changes",
    "command": "workbench.action.continueOn.extensions",
    "title": "Show Cloud Changes",
    "source": "workbench"
  },
  {
    "category": "Resume Latest Changes from Cloud",
    "command": "autoStoreWorkingChanges",
    "title": "Resume Latest Changes from Cloud",
    "source": "autoStoreWorkingChanges"
  },
  {
    "category": "Store Working Changes in Cloud",
    "command": "workbench.editSessions.actions.showEditSessions",
    "title": "Store Working Changes in Cloud",
    "source": "workbench"
  },
  {
    "category": "Open New External Terminal",
    "command": "externalTerminal",
    "title": "Open New External Terminal",
    "source": "externalTerminal"
  },
  {
    "category": "Interactive Window",
    "command": "vscode-interactive-input",
    "title": "Interactive Window",
    "source": "vscode-interactive-input"
  },
  {
    "category": "Open Interactive Window",
    "command": "interactive",
    "title": "Open Interactive Window",
    "source": "interactive"
  },
  {
    "category": "Execute Code",
    "command": "_interactive.open",
    "title": "Execute Code",
    "source": "_interactive"
  },
  {
    "category": "Clear the interactive window input editor contents",
    "command": "interactive.execute",
    "title": "Clear the interactive window input editor contents",
    "source": "interactive"
  },
  {
    "category": "Previous value in history",
    "command": "interactive.input.clear",
    "title": "Previous value in history",
    "source": "interactive"
  },
  {
    "category": "Next value in history",
    "command": "interactive.history.previous",
    "title": "Next value in history",
    "source": "interactive"
  },
  {
    "category": "Focus Input Editor",
    "command": "interactive.history.next",
    "title": "Focus Input Editor",
    "source": "interactive"
  },
  {
    "category": "Focus History",
    "command": "interactive.scrollToTop",
    "title": "Focus History",
    "source": "interactive"
  },
  {
    "category": "Toggle Keyboard Shortcuts Troubleshooting",
    "command": "workbench.action.toggleKeybindingsLog",
    "title": "Toggle Keyboard Shortcuts Troubleshooting",
    "source": "workbench"
  },
  {
    "category": "Detect Language from Content",
    "command": "status.editor.mode",
    "title": "Detect Language from Content",
    "source": "status"
  },
  {
    "category": "Reset Language Status Interaction Counter",
    "command": "status.editor.mode",
    "title": "Reset Language Status Interaction Counter",
    "source": "status"
  },
  {
    "category": "Set Default Log Level",
    "command": "workbench.action.setDefaultLogLevel",
    "title": "Set Default Log Level",
    "source": "workbench"
  },
  {
    "category": "Focus Problems (Errors, Warnings, Infos)",
    "command": "workbench.actions.view.problems",
    "title": "Focus Problems (Errors, Warnings, Infos)",
    "source": "workbench"
  },
  {
    "category": "Copy",
    "command": "workbench.action.problems.focus",
    "title": "Copy",
    "source": "workbench"
  },
  {
    "category": "Show Output Channels...",
    "command": "workbench.action.output.toggleOutput",
    "title": "Show Output Channels...",
    "source": "workbench"
  },
  {
    "category": "Output",
    "command": "workbench.action.showOutputChannels",
    "title": "Output",
    "source": "workbench"
  },
  {
    "category": "Clear Output",
    "command": "workbench.action.showLogs",
    "title": "Clear Output",
    "source": "workbench"
  },
  {
    "category": "Toggle Auto Scrolling",
    "command": "workbench.action.openLogFile",
    "title": "Toggle Auto Scrolling",
    "source": "workbench"
  },
  {
    "category": "Open Log Output File",
    "command": "output",
    "title": "Open Log Output File",
    "source": "output"
  },
  {
    "category": "Open Settings (UI)",
    "command": "workbench.action.openSettings2",
    "title": "Open Settings (UI)",
    "source": "workbench"
  },
  {
    "category": "Open User Settings (JSON)",
    "command": "workbench.action.openSettingsJson",
    "title": "Open User Settings (JSON)",
    "source": "workbench"
  },
  {
    "category": "Open Current Profile Settings (JSON)",
    "command": "workbench.action.openApplicationSettingsJson",
    "title": "Open Current Profile Settings (JSON)",
    "source": "workbench"
  },
  {
    "category": "Preferences",
    "command": "workbench.action.openGlobalSettings",
    "title": "Preferences",
    "source": "workbench"
  },
  {
    "category": "Open Settings (UI)",
    "command": "workbench.action.openRawDefaultSettings",
    "title": "Open Settings (UI)",
    "source": "workbench"
  },
  {
    "category": "Open User Settings",
    "command": "_workbench.openUserSettingsEditor",
    "title": "Open User Settings",
    "source": "_workbench"
  },
  {
    "category": "Open Default Settings (JSON)",
    "command": "workbench.action.openWorkspaceSettings",
    "title": "Open Default Settings (JSON)",
    "source": "workbench"
  },
  {
    "category": "Open Settings (JSON)",
    "command": "workbench.action.openAccessibilitySettings",
    "title": "Open Settings (JSON)",
    "source": "workbench"
  },
  {
    "category": "Open Settings (JSON)",
    "command": "workbench.action.openWorkspaceSettingsFile",
    "title": "Open Settings (JSON)",
    "source": "workbench"
  },
  {
    "category": "Open Workspace Settings",
    "command": "workbench.action.openFolderSettings",
    "title": "Open Workspace Settings",
    "source": "workbench"
  },
  {
    "category": "Open Accessibility Settings",
    "command": "workbench.action.openFolderSettingsFile",
    "title": "Open Accessibility Settings",
    "source": "workbench"
  },
  {
    "category": "Open Workspace Settings (JSON)",
    "command": "_workbench.action.openFolderSettings",
    "title": "Open Workspace Settings (JSON)",
    "source": "_workbench"
  },
  {
    "category": "Open Folder Settings",
    "command": "workbench.action.openRemoteSettings",
    "title": "Open Folder Settings",
    "source": "workbench"
  },
  {
    "category": "Open Folder Settings (JSON)",
    "command": "workbench.action.openRemoteSettingsFile",
    "title": "Open Folder Settings (JSON)",
    "source": "workbench"
  },
  {
    "category": "Open Folder Settings",
    "command": "workbench.action.openGlobalKeybindings",
    "title": "Open Folder Settings",
    "source": "workbench"
  },
  {
    "category": "Show untrusted workspace settings",
    "command": "workbench.action.openGlobalKeybindings",
    "title": "Show untrusted workspace settings",
    "source": "workbench"
  },
  {
    "category": "Focus Settings Search",
    "command": "workbench.action.openGlobalKeybindings",
    "title": "Focus Settings Search",
    "source": "workbench"
  },
  {
    "category": "Clear Settings Search Results",
    "command": "workbench.action.openDefaultKeybindingsFile",
    "title": "Clear Settings Search Results",
    "source": "workbench"
  },
  {
    "category": "Focus Settings Table of Contents",
    "command": "workbench.action.openGlobalKeybindingsFile",
    "title": "Focus Settings Table of Contents",
    "source": "workbench"
  },
  {
    "category": "Show Setting Context Menu",
    "command": "editor.action.defineKeybinding",
    "title": "Show Setting Context Menu",
    "source": "editor"
  },
  {
    "category": "Connection: Trigger Reconnect",
    "command": "workbench.action.triggerReconnect",
    "title": "Connection: Trigger Reconnect",
    "source": "workbench"
  },
  {
    "category": "Connection: Pause socket writing",
    "command": "workbench.action.pauseSocketWriting",
    "title": "Connection: Pause socket writing",
    "source": "workbench"
  },
  {
    "category": "Search",
    "command": "search",
    "title": "Search",
    "source": "search"
  },
  {
    "category": "Search Editor",
    "command": "search.searchEditor.action.deleteFileResults",
    "title": "Search Editor",
    "source": "search"
  },
  {
    "category": "Delete File Results",
    "command": "search.action.openNewEditorFromView",
    "title": "Delete File Results",
    "source": "search"
  },
  {
    "category": "Open Workspace Tasks",
    "command": "workbench.action.tasks.runTask",
    "title": "Open Workspace Tasks",
    "source": "workbench"
  },
  {
    "category": "Configure Task",
    "command": "workbench.action.tasks.build",
    "title": "Configure Task",
    "source": "workbench"
  },
  {
    "category": "Show Task Log",
    "command": "workbench.action.tasks.showTasks",
    "title": "Show Task Log",
    "source": "workbench"
  },
  {
    "category": "Run Task",
    "command": "workbench.action.tasks.restartTask",
    "title": "Run Task",
    "source": "workbench"
  },
  {
    "category": "Rerun Last Task",
    "command": "workbench.action.tasks.terminate",
    "title": "Rerun Last Task",
    "source": "workbench"
  },
  {
    "category": "Restart Running Task",
    "command": "workbench.action.tasks.configureTaskRunner",
    "title": "Restart Running Task",
    "source": "workbench"
  },
  {
    "category": "Show Running Tasks",
    "command": "workbench.action.tasks.configureDefaultBuildTask",
    "title": "Show Running Tasks",
    "source": "workbench"
  },
  {
    "category": "Terminate Task",
    "command": "workbench.action.tasks.openWorkspaceFileTasks",
    "title": "Terminate Task",
    "source": "workbench"
  },
  {
    "category": "Run Build Task",
    "command": "workbench.action.tasks.showLog",
    "title": "Run Build Task",
    "source": "workbench"
  },
  {
    "category": "Run Test Task",
    "command": "workbench.action.tasks.runTask",
    "title": "Run Test Task",
    "source": "workbench"
  },
  {
    "category": "Configure Default Build Task",
    "command": "workbench.action.tasks.reRunTask",
    "title": "Configure Default Build Task",
    "source": "workbench"
  },
  {
    "category": "Configure Default Test Task",
    "command": "workbench.action.tasks.restartTask",
    "title": "Configure Default Test Task",
    "source": "workbench"
  },
  {
    "category": "Open User Tasks",
    "command": "workbench.action.tasks.showTasks",
    "title": "Open User Tasks",
    "source": "workbench"
  },
  {
    "category": "Peek Type Hierarchy",
    "command": "editor.showTypeHierarchy",
    "title": "Peek Type Hierarchy",
    "source": "editor"
  },
  {
    "category": "Show Supertypes",
    "command": "editor.showSupertypes",
    "title": "Show Supertypes",
    "source": "editor"
  },
  {
    "category": "Show Subtypes",
    "command": "editor.showSubtypes",
    "title": "Show Subtypes",
    "source": "editor"
  },
  {
    "category": "Refocus Type Hierarchy",
    "command": "editor.refocusTypeHierarchy",
    "title": "Refocus Type Hierarchy",
    "source": "editor"
  },
  {
    "category": "Show Release Notes",
    "command": "update.checkForUpdate",
    "title": "Show Release Notes",
    "source": "update"
  },
  {
    "category": "Check for Updates...",
    "command": "update.downloadUpdate",
    "title": "Check for Updates...",
    "source": "update"
  },
  {
    "category": "Download Update",
    "command": "update.installUpdate",
    "title": "Download Update",
    "source": "update"
  },
  {
    "category": "Install Update",
    "command": "update.restartToUpdate",
    "title": "Install Update",
    "source": "update"
  },
  {
    "category": "Restart to Update",
    "command": "_update.applyupdate",
    "title": "Restart to Update",
    "source": "_update"
  },
  {
    "category": "Open URL",
    "command": "workbench.action.url.openUrl",
    "title": "Open URL",
    "source": "workbench"
  },
  {
    "category": "Open Local Backups Folder",
    "command": "workbench.userData.actions.openSyncBackupsFolder",
    "title": "Open Local Backups Folder",
    "source": "workbench"
  },
  {
    "category": "Welcome",
    "command": "workbench.action.openWalkthrough",
    "title": "Welcome",
    "source": "workbench"
  },
  {
    "category": "Welcome",
    "command": "welcome.goBack",
    "title": "Welcome",
    "source": "welcome"
  },
  {
    "category": "Go Back",
    "command": "walkthroughs.selectStep",
    "title": "Go Back",
    "source": "walkthroughs"
  },
  {
    "category": "Open Walkthrough...",
    "command": "welcome.markStepComplete",
    "title": "Open Walkthrough...",
    "source": "welcome"
  },
  {
    "category": "Workspaces",
    "command": "security",
    "title": "Workspaces",
    "source": "security"
  },
  {
    "category": "Open Workspace",
    "command": "workspaces.dontPromptToOpen",
    "title": "Open Workspace",
    "source": "workspaces"
  },
  {
    "category": "title",
    "command": "css.title",
    "title": "CSS",
    "source": "css"
  },
  {
    "category": "customData",
    "command": "css.customData.desc",
    "title": "A list of relative file paths pointing to JSON files following the [custom data format](https://github.com/microsoft/vscode-css-languageservice/blob/master/docs/customData.md).\n\nVS Code loads custom data on startup to enhance its CSS support for the custom CSS properties, at directives, pseudo classes and pseudo elements you specify in the JSON files.\n\nThe file paths are relative to workspace and only workspace folder settings are considered.",
    "source": "css"
  },
  {
    "category": "completion",
    "command": "css.completion.triggerPropertyValueCompletion.desc",
    "title": "By default, VS Code triggers property value completion after selecting a CSS property. Use this setting to disable this behavior.",
    "source": "css"
  },
  {
    "category": "completion",
    "command": "css.completion.completePropertyWithSemicolon.desc",
    "title": "Insert semicolon at end of line when completing CSS properties.",
    "source": "css"
  },
  {
    "category": "lint",
    "command": "css.lint.argumentsInColorFunction.desc",
    "title": "Invalid number of parameters.",
    "source": "css"
  },
  {
    "category": "lint",
    "command": "css.lint.boxModel.desc",
    "title": "Do not use `width` or `height` when using `padding` or `border`.",
    "source": "css"
  },
  {
    "category": "lint",
    "command": "css.lint.compatibleVendorPrefixes.desc",
    "title": "When using a vendor-specific prefix make sure to also include all other vendor-specific properties.",
    "source": "css"
  },
  {
    "category": "lint",
    "command": "css.lint.duplicateProperties.desc",
    "title": "Do not use duplicate style definitions.",
    "source": "css"
  },
  {
    "category": "lint",
    "command": "css.lint.emptyRules.desc",
    "title": "Do not use empty rulesets.",
    "source": "css"
  },
  {
    "category": "lint",
    "command": "css.lint.float.desc",
    "title": "Avoid using `float`. Floats lead to fragile CSS that is easy to break if one aspect of the layout changes.",
    "source": "css"
  },
  {
    "category": "lint",
    "command": "css.lint.fontFaceProperties.desc",
    "title": "`@font-face` rule must define `src` and `font-family` properties.",
    "source": "css"
  },
  {
    "category": "lint",
    "command": "css.lint.hexColorLength.desc",
    "title": "Hex colors must consist of three or six hex numbers.",
    "source": "css"
  },
  {
    "category": "lint",
    "command": "css.lint.idSelector.desc",
    "title": "Selectors should not contain IDs because these rules are too tightly coupled with the HTML.",
    "source": "css"
  },
  {
    "category": "lint",
    "command": "css.lint.ieHack.desc",
    "title": "IE hacks are only necessary when supporting IE7 and older.",
    "source": "css"
  },
  {
    "category": "lint",
    "command": "css.lint.important.desc",
    "title": "Avoid using `!important`. It is an indication that the specificity of the entire CSS has gotten out of control and needs to be refactored.",
    "source": "css"
  },
  {
    "category": "lint",
    "command": "css.lint.importStatement.desc",
    "title": "Import statements do not load in parallel.",
    "source": "css"
  },
  {
    "category": "lint",
    "command": "css.lint.propertyIgnoredDueToDisplay.desc",
    "title": "Property is ignored due to the display. E.g. with `display: inline`, the `width`, `height`, `margin-top`, `margin-bottom`, and `float` properties have no effect.",
    "source": "css"
  },
  {
    "category": "lint",
    "command": "css.lint.universalSelector.desc",
    "title": "The universal selector (`*`) is known to be slow.",
    "source": "css"
  },
  {
    "category": "lint",
    "command": "css.lint.unknownAtRules.desc",
    "title": "Unknown at-rule.",
    "source": "css"
  },
  {
    "category": "lint",
    "command": "css.lint.unknownProperties.desc",
    "title": "Unknown property.",
    "source": "css"
  },
  {
    "category": "lint",
    "command": "css.lint.validProperties.desc",
    "title": "A list of properties that are not validated against the `unknownProperties` rule.",
    "source": "css"
  },
  {
    "category": "lint",
    "command": "css.lint.unknownVendorSpecificProperties.desc",
    "title": "Unknown vendor specific property.",
    "source": "css"
  },
  {
    "category": "lint",
    "command": "css.lint.vendorPrefix.desc",
    "title": "When using a vendor-specific prefix, also include the standard property.",
    "source": "css"
  },
  {
    "category": "lint",
    "command": "css.lint.zeroUnits.desc",
    "title": "No unit for zero needed.",
    "source": "css"
  },
  {
    "category": "trace",
    "command": "css.trace.server.desc",
    "title": "Traces the communication between VS Code and the CSS language server.",
    "source": "css"
  },
  {
    "category": "validate",
    "command": "css.validate.title",
    "title": "Controls CSS validation and problem severities.",
    "source": "css"
  },
  {
    "category": "validate",
    "command": "css.validate.desc",
    "title": "Enables or disables all validations.",
    "source": "css"
  },
  {
    "category": "hover",
    "command": "css.hover.documentation",
    "title": "Show tag and attribute documentation in CSS hovers.",
    "source": "css"
  },
  {
    "category": "hover",
    "command": "css.hover.references",
    "title": "Show references to MDN in CSS hovers.",
    "source": "css"
  },
  {
    "category": "format",
    "command": "css.format.enable.desc",
    "title": "Enable/disable default CSS formatter.",
    "source": "css"
  },
  {
    "category": "format",
    "command": "css.format.newlineBetweenSelectors.desc",
    "title": "Separate selectors with a new line.",
    "source": "css"
  },
  {
    "category": "format",
    "command": "css.format.newlineBetweenRules.desc",
    "title": "Separate rulesets by a blank line.",
    "source": "css"
  },
  {
    "category": "format",
    "command": "css.format.spaceAroundSelectorSeparator.desc",
    "title": "Ensure a space character around selector separators '>', '+', '~' (e.g. `a > b`).",
    "source": "css"
  },
  {
    "category": "format",
    "command": "css.format.braceStyle.desc",
    "title": "Put braces on the same line as rules (`collapse`) or put braces on own line (`expand`).",
    "source": "css"
  },
  {
    "category": "format",
    "command": "css.format.preserveNewLines.desc",
    "title": "Whether existing line breaks before elements should be preserved.",
    "source": "css"
  },
  {
    "category": "format",
    "command": "css.format.maxPreserveNewLines.desc",
    "title": "Maximum number of line breaks to be preserved in one chunk, when `#css.format.preserveNewLines#` is enabled.",
    "source": "css"
  },
  {
    "category": "title",
    "command": "less.title",
    "title": "LESS",
    "source": "less"
  },
  {
    "category": "completion",
    "command": "less.completion.triggerPropertyValueCompletion.desc",
    "title": "By default, VS Code triggers property value completion after selecting a CSS property. Use this setting to disable this behavior.",
    "source": "less"
  },
  {
    "category": "completion",
    "command": "less.completion.completePropertyWithSemicolon.desc",
    "title": "Insert semicolon at end of line when completing CSS properties.",
    "source": "less"
  },
  {
    "category": "lint",
    "command": "less.lint.argumentsInColorFunction.desc",
    "title": "Invalid number of parameters.",
    "source": "less"
  },
  {
    "category": "lint",
    "command": "less.lint.boxModel.desc",
    "title": "Do not use `width` or `height` when using `padding` or `border`.",
    "source": "less"
  },
  {
    "category": "lint",
    "command": "less.lint.compatibleVendorPrefixes.desc",
    "title": "When using a vendor-specific prefix make sure to also include all other vendor-specific properties.",
    "source": "less"
  },
  {
    "category": "lint",
    "command": "less.lint.duplicateProperties.desc",
    "title": "Do not use duplicate style definitions.",
    "source": "less"
  },
  {
    "category": "lint",
    "command": "less.lint.emptyRules.desc",
    "title": "Do not use empty rulesets.",
    "source": "less"
  },
  {
    "category": "lint",
    "command": "less.lint.float.desc",
    "title": "Avoid using `float`. Floats lead to fragile CSS that is easy to break if one aspect of the layout changes.",
    "source": "less"
  },
  {
    "category": "lint",
    "command": "less.lint.fontFaceProperties.desc",
    "title": "`@font-face` rule must define `src` and `font-family` properties.",
    "source": "less"
  },
  {
    "category": "lint",
    "command": "less.lint.hexColorLength.desc",
    "title": "Hex colors must consist of three or six hex numbers.",
    "source": "less"
  },
  {
    "category": "lint",
    "command": "less.lint.idSelector.desc",
    "title": "Selectors should not contain IDs because these rules are too tightly coupled with the HTML.",
    "source": "less"
  },
  {
    "category": "lint",
    "command": "less.lint.ieHack.desc",
    "title": "IE hacks are only necessary when supporting IE7 and older.",
    "source": "less"
  },
  {
    "category": "lint",
    "command": "less.lint.important.desc",
    "title": "Avoid using `!important`. It is an indication that the specificity of the entire CSS has gotten out of control and needs to be refactored.",
    "source": "less"
  },
  {
    "category": "lint",
    "command": "less.lint.importStatement.desc",
    "title": "Import statements do not load in parallel.",
    "source": "less"
  },
  {
    "category": "lint",
    "command": "less.lint.propertyIgnoredDueToDisplay.desc",
    "title": "Property is ignored due to the display. E.g. with `display: inline`, the `width`, `height`, `margin-top`, `margin-bottom`, and `float` properties have no effect.",
    "source": "less"
  },
  {
    "category": "lint",
    "command": "less.lint.universalSelector.desc",
    "title": "The universal selector (`*`) is known to be slow.",
    "source": "less"
  },
  {
    "category": "lint",
    "command": "less.lint.unknownAtRules.desc",
    "title": "Unknown at-rule.",
    "source": "less"
  },
  {
    "category": "lint",
    "command": "less.lint.unknownProperties.desc",
    "title": "Unknown property.",
    "source": "less"
  },
  {
    "category": "lint",
    "command": "less.lint.validProperties.desc",
    "title": "A list of properties that are not validated against the `unknownProperties` rule.",
    "source": "less"
  },
  {
    "category": "lint",
    "command": "less.lint.unknownVendorSpecificProperties.desc",
    "title": "Unknown vendor specific property.",
    "source": "less"
  },
  {
    "category": "lint",
    "command": "less.lint.vendorPrefix.desc",
    "title": "When using a vendor-specific prefix, also include the standard property.",
    "source": "less"
  },
  {
    "category": "lint",
    "command": "less.lint.zeroUnits.desc",
    "title": "No unit for zero needed.",
    "source": "less"
  },
  {
    "category": "validate",
    "command": "less.validate.title",
    "title": "Controls LESS validation and problem severities.",
    "source": "less"
  },
  {
    "category": "validate",
    "command": "less.validate.desc",
    "title": "Enables or disables all validations.",
    "source": "less"
  },
  {
    "category": "hover",
    "command": "less.hover.documentation",
    "title": "Show tag and attribute documentation in LESS hovers.",
    "source": "less"
  },
  {
    "category": "hover",
    "command": "less.hover.references",
    "title": "Show references to MDN in LESS hovers.",
    "source": "less"
  },
  {
    "category": "format",
    "command": "less.format.enable.desc",
    "title": "Enable/disable default LESS formatter.",
    "source": "less"
  },
  {
    "category": "format",
    "command": "less.format.newlineBetweenSelectors.desc",
    "title": "Separate selectors with a new line.",
    "source": "less"
  },
  {
    "category": "format",
    "command": "less.format.newlineBetweenRules.desc",
    "title": "Separate rulesets by a blank line.",
    "source": "less"
  },
  {
    "category": "format",
    "command": "less.format.spaceAroundSelectorSeparator.desc",
    "title": "Ensure a space character around selector separators '>', '+', '~' (e.g. `a > b`).",
    "source": "less"
  },
  {
    "category": "format",
    "command": "less.format.braceStyle.desc",
    "title": "Put braces on the same line as rules (`collapse`) or put braces on own line (`expand`).",
    "source": "less"
  },
  {
    "category": "format",
    "command": "less.format.preserveNewLines.desc",
    "title": "Whether existing line breaks before elements should be preserved.",
    "source": "less"
  },
  {
    "category": "format",
    "command": "less.format.maxPreserveNewLines.desc",
    "title": "Maximum number of line breaks to be preserved in one chunk, when `#less.format.preserveNewLines#` is enabled.",
    "source": "less"
  },
  {
    "category": "title",
    "command": "scss.title",
    "title": "SCSS (Sass)",
    "source": "scss"
  },
  {
    "category": "completion",
    "command": "scss.completion.triggerPropertyValueCompletion.desc",
    "title": "By default, VS Code triggers property value completion after selecting a CSS property. Use this setting to disable this behavior.",
    "source": "scss"
  },
  {
    "category": "completion",
    "command": "scss.completion.completePropertyWithSemicolon.desc",
    "title": "Insert semicolon at end of line when completing CSS properties.",
    "source": "scss"
  },
  {
    "category": "lint",
    "command": "scss.lint.argumentsInColorFunction.desc",
    "title": "Invalid number of parameters.",
    "source": "scss"
  },
  {
    "category": "lint",
    "command": "scss.lint.boxModel.desc",
    "title": "Do not use `width` or `height` when using `padding` or `border`.",
    "source": "scss"
  },
  {
    "category": "lint",
    "command": "scss.lint.compatibleVendorPrefixes.desc",
    "title": "When using a vendor-specific prefix make sure to also include all other vendor-specific properties.",
    "source": "scss"
  },
  {
    "category": "lint",
    "command": "scss.lint.duplicateProperties.desc",
    "title": "Do not use duplicate style definitions.",
    "source": "scss"
  },
  {
    "category": "lint",
    "command": "scss.lint.emptyRules.desc",
    "title": "Do not use empty rulesets.",
    "source": "scss"
  },
  {
    "category": "lint",
    "command": "scss.lint.float.desc",
    "title": "Avoid using `float`. Floats lead to fragile CSS that is easy to break if one aspect of the layout changes.",
    "source": "scss"
  },
  {
    "category": "lint",
    "command": "scss.lint.fontFaceProperties.desc",
    "title": "`@font-face` rule must define `src` and `font-family` properties.",
    "source": "scss"
  },
  {
    "category": "lint",
    "command": "scss.lint.hexColorLength.desc",
    "title": "Hex colors must consist of three or six hex numbers.",
    "source": "scss"
  },
  {
    "category": "lint",
    "command": "scss.lint.idSelector.desc",
    "title": "Selectors should not contain IDs because these rules are too tightly coupled with the HTML.",
    "source": "scss"
  },
  {
    "category": "lint",
    "command": "scss.lint.ieHack.desc",
    "title": "IE hacks are only necessary when supporting IE7 and older.",
    "source": "scss"
  },
  {
    "category": "lint",
    "command": "scss.lint.important.desc",
    "title": "Avoid using `!important`. It is an indication that the specificity of the entire CSS has gotten out of control and needs to be refactored.",
    "source": "scss"
  },
  {
    "category": "lint",
    "command": "scss.lint.importStatement.desc",
    "title": "Import statements do not load in parallel.",
    "source": "scss"
  },
  {
    "category": "lint",
    "command": "scss.lint.propertyIgnoredDueToDisplay.desc",
    "title": "Property is ignored due to the display. E.g. with `display: inline`, the `width`, `height`, `margin-top`, `margin-bottom`, and `float` properties have no effect.",
    "source": "scss"
  },
  {
    "category": "lint",
    "command": "scss.lint.universalSelector.desc",
    "title": "The universal selector (`*`) is known to be slow.",
    "source": "scss"
  },
  {
    "category": "lint",
    "command": "scss.lint.unknownAtRules.desc",
    "title": "Unknown at-rule.",
    "source": "scss"
  },
  {
    "category": "lint",
    "command": "scss.lint.unknownProperties.desc",
    "title": "Unknown property.",
    "source": "scss"
  },
  {
    "category": "lint",
    "command": "scss.lint.validProperties.desc",
    "title": "A list of properties that are not validated against the `unknownProperties` rule.",
    "source": "scss"
  },
  {
    "category": "lint",
    "command": "scss.lint.unknownVendorSpecificProperties.desc",
    "title": "Unknown vendor specific property.",
    "source": "scss"
  },
  {
    "category": "lint",
    "command": "scss.lint.vendorPrefix.desc",
    "title": "When using a vendor-specific prefix, also include the standard property.",
    "source": "scss"
  },
  {
    "category": "lint",
    "command": "scss.lint.zeroUnits.desc",
    "title": "No unit for zero needed.",
    "source": "scss"
  },
  {
    "category": "validate",
    "command": "scss.validate.title",
    "title": "Controls SCSS validation and problem severities.",
    "source": "scss"
  },
  {
    "category": "validate",
    "command": "scss.validate.desc",
    "title": "Enables or disables all validations.",
    "source": "scss"
  },
  {
    "category": "hover",
    "command": "scss.hover.documentation",
    "title": "Show tag and attribute documentation in SCSS hovers.",
    "source": "scss"
  },
  {
    "category": "hover",
    "command": "scss.hover.references",
    "title": "Show references to MDN in SCSS hovers.",
    "source": "scss"
  },
  {
    "category": "format",
    "command": "scss.format.enable.desc",
    "title": "Enable/disable default SCSS formatter.",
    "source": "scss"
  },
  {
    "category": "format",
    "command": "scss.format.newlineBetweenSelectors.desc",
    "title": "Separate selectors with a new line.",
    "source": "scss"
  },
  {
    "category": "format",
    "command": "scss.format.newlineBetweenRules.desc",
    "title": "Separate rulesets by a blank line.",
    "source": "scss"
  },
  {
    "category": "format",
    "command": "scss.format.spaceAroundSelectorSeparator.desc",
    "title": "Ensure a space character around selector separators '>', '+', '~' (e.g. `a > b`).",
    "source": "scss"
  },
  {
    "category": "format",
    "command": "scss.format.braceStyle.desc",
    "title": "Put braces on the same line as rules (`collapse`) or put braces on own line (`expand`).",
    "source": "scss"
  },
  {
    "category": "format",
    "command": "scss.format.preserveNewLines.desc",
    "title": "Whether existing line breaks before elements should be preserved.",
    "source": "scss"
  },
  {
    "category": "format",
    "command": "scss.format.maxPreserveNewLines.desc",
    "title": "Maximum number of line breaks to be preserved in one chunk, when `#scss.format.preserveNewLines#` is enabled.",
    "source": "scss"
  },
  {
    "category": "colorDecorators",
    "command": "css.colorDecorators.enable.deprecationMessage",
    "title": "The setting `css.colorDecorators.enable` has been deprecated in favor of `editor.colorDecorators`.",
    "source": "css"
  },
  {
    "category": "colorDecorators",
    "command": "scss.colorDecorators.enable.deprecationMessage",
    "title": "The setting `scss.colorDecorators.enable` has been deprecated in favor of `editor.colorDecorators`.",
    "source": "scss"
  },
  {
    "category": "colorDecorators",
    "command": "less.colorDecorators.enable.deprecationMessage",
    "title": "The setting `less.colorDecorators.enable` has been deprecated in favor of `editor.colorDecorators`.",
    "source": "less"
  },
  {
    "category": "auto",
    "command": "toggle.auto.attach",
    "title": "Toggle Auto Attach",
    "source": "toggle"
  },
  {
    "category": "server",
    "command": "debug.server.ready.serverReadyAction.description",
    "title": "Act upon a URI when a server program under debugging is ready (indicated by sending output of the form 'listening on port 3000' or 'Now listening on: https://localhost:5001' to the debug console.)",
    "source": "debug"
  },
  {
    "category": "server",
    "command": "debug.server.ready.action.description",
    "title": "What to do with the URI when the server is ready.",
    "source": "debug"
  },
  {
    "category": "server",
    "command": "debug.server.ready.action.openExternally.description",
    "title": "Open URI externally with the default application.",
    "source": "debug"
  },
  {
    "category": "server",
    "command": "debug.server.ready.action.debugWithChrome.description",
    "title": "Start debugging with the 'Debugger for Chrome'.",
    "source": "debug"
  },
  {
    "category": "server",
    "command": "debug.server.ready.action.startDebugging.description",
    "title": "Run another launch configuration.",
    "source": "debug"
  },
  {
    "category": "server",
    "command": "debug.server.ready.pattern.description",
    "title": "Server is ready if this pattern appears on the debug console. The first capture group must include a URI or a port number.",
    "source": "debug"
  },
  {
    "category": "server",
    "command": "debug.server.ready.uriFormat.description",
    "title": "A format string used when constructing the URI from a port number. The first '%s' is substituted with the port number.",
    "source": "debug"
  },
  {
    "category": "server",
    "command": "debug.server.ready.webRoot.description",
    "title": "Value passed to the debug configuration for the 'Debugger for Chrome'.",
    "source": "debug"
  },
  {
    "category": "server",
    "command": "debug.server.ready.killOnServerStop.description",
    "title": "Stop the child session when the parent session stopped.",
    "source": "debug"
  },
  {
    "category": "server",
    "command": "debug.server.ready.debugConfigName.description",
    "title": "Name of the launch configuration to run.",
    "source": "debug"
  },
  {
    "category": "wrapWithAbbreviation",
    "command": "command.wrapWithAbbreviation",
    "title": "Wrap with Abbreviation",
    "source": "command"
  },
  {
    "category": "removeTag",
    "command": "command.removeTag",
    "title": "Remove Tag",
    "source": "command"
  },
  {
    "category": "updateTag",
    "command": "command.updateTag",
    "title": "Update Tag",
    "source": "command"
  },
  {
    "category": "matchTag",
    "command": "command.matchTag",
    "title": "Go to Matching Pair",
    "source": "command"
  },
  {
    "category": "balanceIn",
    "command": "command.balanceIn",
    "title": "Balance (inward)",
    "source": "command"
  },
  {
    "category": "balanceOut",
    "command": "command.balanceOut",
    "title": "Balance (outward)",
    "source": "command"
  },
  {
    "category": "prevEditPoint",
    "command": "command.prevEditPoint",
    "title": "Go to Previous Edit Point",
    "source": "command"
  },
  {
    "category": "nextEditPoint",
    "command": "command.nextEditPoint",
    "title": "Go to Next Edit Point",
    "source": "command"
  },
  {
    "category": "mergeLines",
    "command": "command.mergeLines",
    "title": "Merge Lines",
    "source": "command"
  },
  {
    "category": "selectPrevItem",
    "command": "command.selectPrevItem",
    "title": "Select Previous Item",
    "source": "command"
  },
  {
    "category": "selectNextItem",
    "command": "command.selectNextItem",
    "title": "Select Next Item",
    "source": "command"
  },
  {
    "category": "splitJoinTag",
    "command": "command.splitJoinTag",
    "title": "Split/Join Tag",
    "source": "command"
  },
  {
    "category": "toggleComment",
    "command": "command.toggleComment",
    "title": "Toggle Comment",
    "source": "command"
  },
  {
    "category": "evaluateMathExpression",
    "command": "command.evaluateMathExpression",
    "title": "Evaluate Math Expression",
    "source": "command"
  },
  {
    "category": "updateImageSize",
    "command": "command.updateImageSize",
    "title": "Update Image Size",
    "source": "command"
  },
  {
    "category": "reflectCSSValue",
    "command": "command.reflectCSSValue",
    "title": "Reflect CSS Value",
    "source": "command"
  },
  {
    "category": "incrementNumberByOne",
    "command": "command.incrementNumberByOne",
    "title": "Increment by 1",
    "source": "command"
  },
  {
    "category": "decrementNumberByOne",
    "command": "command.decrementNumberByOne",
    "title": "Decrement by 1",
    "source": "command"
  },
  {
    "category": "incrementNumberByOneTenth",
    "command": "command.incrementNumberByOneTenth",
    "title": "Increment by 0.1",
    "source": "command"
  },
  {
    "category": "decrementNumberByOneTenth",
    "command": "command.decrementNumberByOneTenth",
    "title": "Decrement by 0.1",
    "source": "command"
  },
  {
    "category": "incrementNumberByTen",
    "command": "command.incrementNumberByTen",
    "title": "Increment by 10",
    "source": "command"
  },
  {
    "category": "decrementNumberByTen",
    "command": "command.decrementNumberByTen",
    "title": "Decrement by 10",
    "source": "command"
  },
  {
    "category": "showEmmetCommands",
    "command": "command.showEmmetCommands",
    "title": "Show Emmet Commands",
    "source": "command"
  },
  {
    "category": "continueInLocalClone",
    "command": "command.continueInLocalClone",
    "title": "Clone Repository Locally and Open on Desktop...",
    "source": "command"
  },
  {
    "category": "continueInLocalClone",
    "command": "command.continueInLocalClone.qualifiedName",
    "title": "Continue Working in New Local Clone",
    "source": "command"
  },
  {
    "category": "clone",
    "command": "command.clone",
    "title": "Clone",
    "source": "command"
  },
  {
    "category": "cloneRecursive",
    "command": "command.cloneRecursive",
    "title": "Clone (Recursive)",
    "source": "command"
  },
  {
    "category": "init",
    "command": "command.init",
    "title": "Initialize Repository",
    "source": "command"
  },
  {
    "category": "openRepository",
    "command": "command.openRepository",
    "title": "Open Repository",
    "source": "command"
  },
  {
    "category": "close",
    "command": "command.close",
    "title": "Close Repository",
    "source": "command"
  },
  {
    "category": "refresh",
    "command": "command.refresh",
    "title": "Refresh",
    "source": "command"
  },
  {
    "category": "openChange",
    "command": "command.openChange",
    "title": "Open Changes",
    "source": "command"
  },
  {
    "category": "openAllChanges",
    "command": "command.openAllChanges",
    "title": "Open All Changes",
    "source": "command"
  },
  {
    "category": "openFile",
    "command": "command.openFile",
    "title": "Open File",
    "source": "command"
  },
  {
    "category": "openHEADFile",
    "command": "command.openHEADFile",
    "title": "Open File (HEAD)",
    "source": "command"
  },
  {
    "category": "stage",
    "command": "command.stage",
    "title": "Stage Changes",
    "source": "command"
  },
  {
    "category": "stageAll",
    "command": "command.stageAll",
    "title": "Stage All Changes",
    "source": "command"
  },
  {
    "category": "stageAllTracked",
    "command": "command.stageAllTracked",
    "title": "Stage All Tracked Changes",
    "source": "command"
  },
  {
    "category": "stageAllUntracked",
    "command": "command.stageAllUntracked",
    "title": "Stage All Untracked Changes",
    "source": "command"
  },
  {
    "category": "stageAllMerge",
    "command": "command.stageAllMerge",
    "title": "Stage All Merge Changes",
    "source": "command"
  },
  {
    "category": "stageSelectedRanges",
    "command": "command.stageSelectedRanges",
    "title": "Stage Selected Ranges",
    "source": "command"
  },
  {
    "category": "revertSelectedRanges",
    "command": "command.revertSelectedRanges",
    "title": "Revert Selected Ranges",
    "source": "command"
  },
  {
    "category": "stageChange",
    "command": "command.stageChange",
    "title": "Stage Change",
    "source": "command"
  },
  {
    "category": "revertChange",
    "command": "command.revertChange",
    "title": "Revert Change",
    "source": "command"
  },
  {
    "category": "unstage",
    "command": "command.unstage",
    "title": "Unstage Changes",
    "source": "command"
  },
  {
    "category": "unstageAll",
    "command": "command.unstageAll",
    "title": "Unstage All Changes",
    "source": "command"
  },
  {
    "category": "unstageSelectedRanges",
    "command": "command.unstageSelectedRanges",
    "title": "Unstage Selected Ranges",
    "source": "command"
  },
  {
    "category": "rename",
    "command": "command.rename",
    "title": "Rename",
    "source": "command"
  },
  {
    "category": "clean",
    "command": "command.clean",
    "title": "Discard Changes",
    "source": "command"
  },
  {
    "category": "cleanAll",
    "command": "command.cleanAll",
    "title": "Discard All Changes",
    "source": "command"
  },
  {
    "category": "cleanAllTracked",
    "command": "command.cleanAllTracked",
    "title": "Discard All Tracked Changes",
    "source": "command"
  },
  {
    "category": "cleanAllUntracked",
    "command": "command.cleanAllUntracked",
    "title": "Discard All Untracked Changes",
    "source": "command"
  },
  {
    "category": "closeAllDiffEditors",
    "command": "command.closeAllDiffEditors",
    "title": "Close All Diff Editors",
    "source": "command"
  },
  {
    "category": "commit",
    "command": "command.commit",
    "title": "Commit",
    "source": "command"
  },
  {
    "category": "commitStaged",
    "command": "command.commitStaged",
    "title": "Commit Staged",
    "source": "command"
  },
  {
    "category": "commitEmpty",
    "command": "command.commitEmpty",
    "title": "Commit Empty",
    "source": "command"
  },
  {
    "category": "commitStagedSigned",
    "command": "command.commitStagedSigned",
    "title": "Commit Staged (Signed Off)",
    "source": "command"
  },
  {
    "category": "commitStagedAmend",
    "command": "command.commitStagedAmend",
    "title": "Commit Staged (Amend)",
    "source": "command"
  },
  {
    "category": "commitAll",
    "command": "command.commitAll",
    "title": "Commit All",
    "source": "command"
  },
  {
    "category": "commitAllSigned",
    "command": "command.commitAllSigned",
    "title": "Commit All (Signed Off)",
    "source": "command"
  },
  {
    "category": "commitAllAmend",
    "command": "command.commitAllAmend",
    "title": "Commit All (Amend)",
    "source": "command"
  },
  {
    "category": "commitNoVerify",
    "command": "command.commitNoVerify",
    "title": "Commit (No Verify)",
    "source": "command"
  },
  {
    "category": "commitStagedNoVerify",
    "command": "command.commitStagedNoVerify",
    "title": "Commit Staged (No Verify)",
    "source": "command"
  },
  {
    "category": "commitEmptyNoVerify",
    "command": "command.commitEmptyNoVerify",
    "title": "Commit Empty (No Verify)",
    "source": "command"
  },
  {
    "category": "commitStagedSignedNoVerify",
    "command": "command.commitStagedSignedNoVerify",
    "title": "Commit Staged (Signed Off, No Verify)",
    "source": "command"
  },
  {
    "category": "commitStagedAmendNoVerify",
    "command": "command.commitStagedAmendNoVerify",
    "title": "Commit Staged (Amend, No Verify)",
    "source": "command"
  },
  {
    "category": "commitAllNoVerify",
    "command": "command.commitAllNoVerify",
    "title": "Commit All (No Verify)",
    "source": "command"
  },
  {
    "category": "commitAllSignedNoVerify",
    "command": "command.commitAllSignedNoVerify",
    "title": "Commit All (Signed Off, No Verify)",
    "source": "command"
  },
  {
    "category": "commitAllAmendNoVerify",
    "command": "command.commitAllAmendNoVerify",
    "title": "Commit All (Amend, No Verify)",
    "source": "command"
  },
  {
    "category": "commitMessageAccept",
    "command": "command.commitMessageAccept",
    "title": "Accept Commit Message",
    "source": "command"
  },
  {
    "category": "commitMessageDiscard",
    "command": "command.commitMessageDiscard",
    "title": "Discard Commit Message",
    "source": "command"
  },
  {
    "category": "restoreCommitTemplate",
    "command": "command.restoreCommitTemplate",
    "title": "Restore Commit Template",
    "source": "command"
  },
  {
    "category": "undoCommit",
    "command": "command.undoCommit",
    "title": "Undo Last Commit",
    "source": "command"
  },
  {
    "category": "checkout",
    "command": "command.checkout",
    "title": "Checkout to...",
    "source": "command"
  },
  {
    "category": "checkoutDetached",
    "command": "command.checkoutDetached",
    "title": "Checkout to (Detached)...",
    "source": "command"
  },
  {
    "category": "branch",
    "command": "command.branch",
    "title": "Create Branch...",
    "source": "command"
  },
  {
    "category": "branchFrom",
    "command": "command.branchFrom",
    "title": "Create Branch From...",
    "source": "command"
  },
  {
    "category": "deleteBranch",
    "command": "command.deleteBranch",
    "title": "Delete Branch...",
    "source": "command"
  },
  {
    "category": "renameBranch",
    "command": "command.renameBranch",
    "title": "Rename Branch...",
    "source": "command"
  },
  {
    "category": "cherryPick",
    "command": "command.cherryPick",
    "title": "Cherry Pick...",
    "source": "command"
  },
  {
    "category": "merge",
    "command": "command.merge",
    "title": "Merge Branch...",
    "source": "command"
  },
  {
    "category": "mergeAbort",
    "command": "command.mergeAbort",
    "title": "Abort Merge",
    "source": "command"
  },
  {
    "category": "rebase",
    "command": "command.rebase",
    "title": "Rebase Branch...",
    "source": "command"
  },
  {
    "category": "createTag",
    "command": "command.createTag",
    "title": "Create Tag",
    "source": "command"
  },
  {
    "category": "deleteTag",
    "command": "command.deleteTag",
    "title": "Delete Tag",
    "source": "command"
  },
  {
    "category": "deleteRemoteTag",
    "command": "command.deleteRemoteTag",
    "title": "Delete Remote Tag",
    "source": "command"
  },
  {
    "category": "fetch",
    "command": "command.fetch",
    "title": "Fetch",
    "source": "command"
  },
  {
    "category": "fetchPrune",
    "command": "command.fetchPrune",
    "title": "Fetch (Prune)",
    "source": "command"
  },
  {
    "category": "fetchAll",
    "command": "command.fetchAll",
    "title": "Fetch From All Remotes",
    "source": "command"
  },
  {
    "category": "pull",
    "command": "command.pull",
    "title": "Pull",
    "source": "command"
  },
  {
    "category": "pullRebase",
    "command": "command.pullRebase",
    "title": "Pull (Rebase)",
    "source": "command"
  },
  {
    "category": "pullFrom",
    "command": "command.pullFrom",
    "title": "Pull from...",
    "source": "command"
  },
  {
    "category": "push",
    "command": "command.push",
    "title": "Push",
    "source": "command"
  },
  {
    "category": "pushForce",
    "command": "command.pushForce",
    "title": "Push (Force)",
    "source": "command"
  },
  {
    "category": "pushTo",
    "command": "command.pushTo",
    "title": "Push to...",
    "source": "command"
  },
  {
    "category": "pushToForce",
    "command": "command.pushToForce",
    "title": "Push to... (Force)",
    "source": "command"
  },
  {
    "category": "pushFollowTags",
    "command": "command.pushFollowTags",
    "title": "Push (Follow Tags)",
    "source": "command"
  },
  {
    "category": "pushFollowTagsForce",
    "command": "command.pushFollowTagsForce",
    "title": "Push (Follow Tags, Force)",
    "source": "command"
  },
  {
    "category": "pushTags",
    "command": "command.pushTags",
    "title": "Push Tags",
    "source": "command"
  },
  {
    "category": "addRemote",
    "command": "command.addRemote",
    "title": "Add Remote...",
    "source": "command"
  },
  {
    "category": "removeRemote",
    "command": "command.removeRemote",
    "title": "Remove Remote",
    "source": "command"
  },
  {
    "category": "sync",
    "command": "command.sync",
    "title": "Sync",
    "source": "command"
  },
  {
    "category": "syncRebase",
    "command": "command.syncRebase",
    "title": "Sync (Rebase)",
    "source": "command"
  },
  {
    "category": "publish",
    "command": "command.publish",
    "title": "Publish Branch...",
    "source": "command"
  },
  {
    "category": "showOutput",
    "command": "command.showOutput",
    "title": "Show Git Output",
    "source": "command"
  },
  {
    "category": "ignore",
    "command": "command.ignore",
    "title": "Add to .gitignore",
    "source": "command"
  },
  {
    "category": "revealInExplorer",
    "command": "command.revealInExplorer",
    "title": "Reveal in Explorer View",
    "source": "command"
  },
  {
    "category": "revealFileInOS",
    "command": "command.revealFileInOS.linux",
    "title": "Open Containing Folder",
    "source": "command"
  },
  {
    "category": "revealFileInOS",
    "command": "command.revealFileInOS.mac",
    "title": "Reveal in Finder",
    "source": "command"
  },
  {
    "category": "revealFileInOS",
    "command": "command.revealFileInOS.windows",
    "title": "Reveal in File Explorer",
    "source": "command"
  },
  {
    "category": "rebaseAbort",
    "command": "command.rebaseAbort",
    "title": "Abort Rebase",
    "source": "command"
  },
  {
    "category": "stashIncludeUntracked",
    "command": "command.stashIncludeUntracked",
    "title": "Stash (Include Untracked)",
    "source": "command"
  },
  {
    "category": "stash",
    "command": "command.stash",
    "title": "Stash",
    "source": "command"
  },
  {
    "category": "stashStaged",
    "command": "command.stashStaged",
    "title": "Stash Staged",
    "source": "command"
  },
  {
    "category": "stashPop",
    "command": "command.stashPop",
    "title": "Pop Stash...",
    "source": "command"
  },
  {
    "category": "stashPopLatest",
    "command": "command.stashPopLatest",
    "title": "Pop Latest Stash",
    "source": "command"
  },
  {
    "category": "stashApply",
    "command": "command.stashApply",
    "title": "Apply Stash...",
    "source": "command"
  },
  {
    "category": "stashApplyLatest",
    "command": "command.stashApplyLatest",
    "title": "Apply Latest Stash",
    "source": "command"
  },
  {
    "category": "stashDrop",
    "command": "command.stashDrop",
    "title": "Drop Stash...",
    "source": "command"
  },
  {
    "category": "stashDropAll",
    "command": "command.stashDropAll",
    "title": "Drop All Stashes...",
    "source": "command"
  },
  {
    "category": "timelineOpenDiff",
    "command": "command.timelineOpenDiff",
    "title": "Open Changes",
    "source": "command"
  },
  {
    "category": "timelineCopyCommitId",
    "command": "command.timelineCopyCommitId",
    "title": "Copy Commit ID",
    "source": "command"
  },
  {
    "category": "timelineCopyCommitMessage",
    "command": "command.timelineCopyCommitMessage",
    "title": "Copy Commit Message",
    "source": "command"
  },
  {
    "category": "timelineSelectForCompare",
    "command": "command.timelineSelectForCompare",
    "title": "Select for Compare",
    "source": "command"
  },
  {
    "category": "timelineCompareWithSelected",
    "command": "command.timelineCompareWithSelected",
    "title": "Compare with Selected",
    "source": "command"
  },
  {
    "category": "manageUnsafeRepositories",
    "command": "command.manageUnsafeRepositories",
    "title": "Manage Unsafe Repositories",
    "source": "command"
  },
  {
    "category": "openRepositoriesInParentFolders",
    "command": "command.openRepositoriesInParentFolders",
    "title": "Open Repositories In Parent Folders",
    "source": "command"
  },
  {
    "category": "api",
    "command": "command.api.getRepositories",
    "title": "Get Repositories",
    "source": "command"
  },
  {
    "category": "api",
    "command": "command.api.getRepositoryState",
    "title": "Get Repository State",
    "source": "command"
  },
  {
    "category": "api",
    "command": "command.api.getRemoteSources",
    "title": "Get Remote Sources",
    "source": "command"
  },
  {
    "category": "git",
    "command": "command.git.acceptMerge",
    "title": "Complete Merge",
    "source": "command"
  },
  {
    "category": "git",
    "command": "command.git.openMergeEditor",
    "title": "Resolve in Merge Editor",
    "source": "command"
  },
  {
    "category": "git",
    "command": "command.git.runGitMerge",
    "title": "Compute Conflicts With Git",
    "source": "command"
  },
  {
    "category": "git",
    "command": "command.git.runGitMergeDiff3",
    "title": "Compute Conflicts With Git (Diff3)",
    "source": "command"
  },
  {
    "category": "enabled",
    "command": "config.enabled",
    "title": "Whether git is enabled.",
    "source": "config"
  },
  {
    "category": "path",
    "command": "config.path",
    "title": "Path and filename of the git executable, e.g. `C:\\Program Files\\Git\\bin\\git.exe` (Windows). This can also be an array of string values containing multiple paths to look up.",
    "source": "config"
  },
  {
    "category": "autoRepositoryDetection",
    "command": "config.autoRepositoryDetection",
    "title": "Configures when repositories should be automatically detected.",
    "source": "config"
  },
  {
    "category": "autoRepositoryDetection",
    "command": "config.autoRepositoryDetection.true",
    "title": "Scan for both subfolders of the current opened folder and parent folders of open files.",
    "source": "config"
  },
  {
    "category": "autoRepositoryDetection",
    "command": "config.autoRepositoryDetection.false",
    "title": "Disable automatic repository scanning.",
    "source": "config"
  },
  {
    "category": "autoRepositoryDetection",
    "command": "config.autoRepositoryDetection.subFolders",
    "title": "Scan for subfolders of the currently opened folder.",
    "source": "config"
  },
  {
    "category": "autoRepositoryDetection",
    "command": "config.autoRepositoryDetection.openEditors",
    "title": "Scan for parent folders of open files.",
    "source": "config"
  },
  {
    "category": "autorefresh",
    "command": "config.autorefresh",
    "title": "Whether auto refreshing is enabled.",
    "source": "config"
  },
  {
    "category": "autofetch",
    "command": "config.autofetch",
    "title": "When set to true, commits will automatically be fetched from the default remote of the current Git repository. Setting to `all` will fetch from all remotes.",
    "source": "config"
  },
  {
    "category": "autofetchPeriod",
    "command": "config.autofetchPeriod",
    "title": "Duration in seconds between each automatic git fetch, when `#git.autofetch#` is enabled.",
    "source": "config"
  },
  {
    "category": "confirmSync",
    "command": "config.confirmSync",
    "title": "Confirm before synchronizing git repositories.",
    "source": "config"
  },
  {
    "category": "countBadge",
    "command": "config.countBadge",
    "title": "Controls the Git count badge.",
    "source": "config"
  },
  {
    "category": "countBadge",
    "command": "config.countBadge.all",
    "title": "Count all changes.",
    "source": "config"
  },
  {
    "category": "countBadge",
    "command": "config.countBadge.tracked",
    "title": "Count only tracked changes.",
    "source": "config"
  },
  {
    "category": "countBadge",
    "command": "config.countBadge.off",
    "title": "Turn off counter.",
    "source": "config"
  },
  {
    "category": "checkoutType",
    "command": "config.checkoutType",
    "title": "Controls what type of git refs are listed when running `Checkout to...`.",
    "source": "config"
  },
  {
    "category": "checkoutType",
    "command": "config.checkoutType.local",
    "title": "Local branches",
    "source": "config"
  },
  {
    "category": "checkoutType",
    "command": "config.checkoutType.tags",
    "title": "Tags",
    "source": "config"
  },
  {
    "category": "checkoutType",
    "command": "config.checkoutType.remote",
    "title": "Remote branches",
    "source": "config"
  },
  {
    "category": "branchPrefix",
    "command": "config.branchPrefix",
    "title": "Prefix used when creating a new branch.",
    "source": "config"
  },
  {
    "category": "branchProtection",
    "command": "config.branchProtection",
    "title": "List of protected branches. By default, a prompt is shown before changes are committed to a protected branch. The prompt can be controlled using the `#git.branchProtectionPrompt#`  setting.",
    "source": "config"
  },
  {
    "category": "branchProtectionPrompt",
    "command": "config.branchProtectionPrompt",
    "title": "Controls whether a prompt is being shown before changes are committed to a protected branch.",
    "source": "config"
  },
  {
    "category": "branchProtectionPrompt",
    "command": "config.branchProtectionPrompt.alwaysCommit",
    "title": "Always commit changes to the protected branch.",
    "source": "config"
  },
  {
    "category": "branchProtectionPrompt",
    "command": "config.branchProtectionPrompt.alwaysCommitToNewBranch",
    "title": "Always commit changes to a new branch.",
    "source": "config"
  },
  {
    "category": "branchProtectionPrompt",
    "command": "config.branchProtectionPrompt.alwaysPrompt",
    "title": "Always prompt before changes are committed to a protected branch.",
    "source": "config"
  },
  {
    "category": "branchRandomNameDictionary",
    "command": "config.branchRandomNameDictionary",
    "title": "List of dictionaries used for the randomly generated branch name. Each value represents the dictionary used to generate the segment of the branch name. Supported dictionaries: `adjectives`, `animals`, `colors` and `numbers`.",
    "source": "config"
  },
  {
    "category": "branchRandomNameDictionary",
    "command": "config.branchRandomNameDictionary.adjectives",
    "title": "A random adjective",
    "source": "config"
  },
  {
    "category": "branchRandomNameDictionary",
    "command": "config.branchRandomNameDictionary.animals",
    "title": "A random animal name",
    "source": "config"
  },
  {
    "category": "branchRandomNameDictionary",
    "command": "config.branchRandomNameDictionary.colors",
    "title": "A random color name",
    "source": "config"
  },
  {
    "category": "branchRandomNameDictionary",
    "command": "config.branchRandomNameDictionary.numbers",
    "title": "A random number between 100 and 999",
    "source": "config"
  },
  {
    "category": "branchRandomNameEnable",
    "command": "config.branchRandomNameEnable",
    "title": "Controls whether a random name is generated when creating a new branch.",
    "source": "config"
  },
  {
    "category": "branchValidationRegex",
    "command": "config.branchValidationRegex",
    "title": "A regular expression to validate new branch names.",
    "source": "config"
  },
  {
    "category": "branchWhitespaceChar",
    "command": "config.branchWhitespaceChar",
    "title": "The character to replace whitespace in new branch names, and to separate segments of a randomly generated branch name.",
    "source": "config"
  },
  {
    "category": "ignoreLegacyWarning",
    "command": "config.ignoreLegacyWarning",
    "title": "Ignores the legacy Git warning.",
    "source": "config"
  },
  {
    "category": "ignoreMissingGitWarning",
    "command": "config.ignoreMissingGitWarning",
    "title": "Ignores the warning when Git is missing.",
    "source": "config"
  },
  {
    "category": "ignoreWindowsGit27Warning",
    "command": "config.ignoreWindowsGit27Warning",
    "title": "Ignores the warning when Git 2.25 - 2.26 is installed on Windows.",
    "source": "config"
  },
  {
    "category": "ignoreLimitWarning",
    "command": "config.ignoreLimitWarning",
    "title": "Ignores the warning when there are too many changes in a repository.",
    "source": "config"
  },
  {
    "category": "ignoreRebaseWarning",
    "command": "config.ignoreRebaseWarning",
    "title": "Ignores the warning when it looks like the branch might have been rebased when pulling.",
    "source": "config"
  },
  {
    "category": "defaultCloneDirectory",
    "command": "config.defaultCloneDirectory",
    "title": "The default location to clone a git repository.",
    "source": "config"
  },
  {
    "category": "useEditorAsCommitInput",
    "command": "config.useEditorAsCommitInput",
    "title": "Controls whether a full text editor will be used to author commit messages, whenever no message is provided in the commit input box.",
    "source": "config"
  },
  {
    "category": "verboseCommit",
    "command": "config.verboseCommit",
    "title": "Enable verbose output when `#git.useEditorAsCommitInput#` is enabled.",
    "source": "config"
  },
  {
    "category": "enableSmartCommit",
    "command": "config.enableSmartCommit",
    "title": "Commit all changes when there are no staged changes.",
    "source": "config"
  },
  {
    "category": "smartCommitChanges",
    "command": "config.smartCommitChanges",
    "title": "Control which changes are automatically staged by Smart Commit.",
    "source": "config"
  },
  {
    "category": "smartCommitChanges",
    "command": "config.smartCommitChanges.all",
    "title": "Automatically stage all changes.",
    "source": "config"
  },
  {
    "category": "smartCommitChanges",
    "command": "config.smartCommitChanges.tracked",
    "title": "Automatically stage tracked changes only.",
    "source": "config"
  },
  {
    "category": "suggestSmartCommit",
    "command": "config.suggestSmartCommit",
    "title": "Suggests to enable smart commit (commit all changes when there are no staged changes).",
    "source": "config"
  },
  {
    "category": "enableCommitSigning",
    "command": "config.enableCommitSigning",
    "title": "Enables commit signing with GPG or X.509.",
    "source": "config"
  },
  {
    "category": "discardAllScope",
    "command": "config.discardAllScope",
    "title": "Controls what changes are discarded by the `Discard all changes` command. `all` discards all changes. `tracked` discards only tracked files. `prompt` shows a prompt dialog every time the action is run.",
    "source": "config"
  },
  {
    "category": "decorations",
    "command": "config.decorations.enabled",
    "title": "Controls whether Git contributes colors and badges to the Explorer and the Open Editors view.",
    "source": "config"
  },
  {
    "category": "enableStatusBarSync",
    "command": "config.enableStatusBarSync",
    "title": "Controls whether the Git Sync command appears in the status bar.",
    "source": "config"
  },
  {
    "category": "followTagsWhenSync",
    "command": "config.followTagsWhenSync",
    "title": "Push all annotated tags when running the sync command.",
    "source": "config"
  },
  {
    "category": "promptToSaveFilesBeforeStash",
    "command": "config.promptToSaveFilesBeforeStash",
    "title": "Controls whether Git should check for unsaved files before stashing changes.",
    "source": "config"
  },
  {
    "category": "promptToSaveFilesBeforeStash",
    "command": "config.promptToSaveFilesBeforeStash.always",
    "title": "Check for any unsaved files.",
    "source": "config"
  },
  {
    "category": "promptToSaveFilesBeforeStash",
    "command": "config.promptToSaveFilesBeforeStash.staged",
    "title": "Check only for unsaved staged files.",
    "source": "config"
  },
  {
    "category": "promptToSaveFilesBeforeStash",
    "command": "config.promptToSaveFilesBeforeStash.never",
    "title": "Disable this check.",
    "source": "config"
  },
  {
    "category": "promptToSaveFilesBeforeCommit",
    "command": "config.promptToSaveFilesBeforeCommit",
    "title": "Controls whether Git should check for unsaved files before committing.",
    "source": "config"
  },
  {
    "category": "promptToSaveFilesBeforeCommit",
    "command": "config.promptToSaveFilesBeforeCommit.always",
    "title": "Check for any unsaved files.",
    "source": "config"
  },
  {
    "category": "promptToSaveFilesBeforeCommit",
    "command": "config.promptToSaveFilesBeforeCommit.staged",
    "title": "Check only for unsaved staged files.",
    "source": "config"
  },
  {
    "category": "promptToSaveFilesBeforeCommit",
    "command": "config.promptToSaveFilesBeforeCommit.never",
    "title": "Disable this check.",
    "source": "config"
  },
  {
    "category": "postCommitCommand",
    "command": "config.postCommitCommand",
    "title": "Run a git command after a successful commit.",
    "source": "config"
  },
  {
    "category": "postCommitCommand",
    "command": "config.postCommitCommand.none",
    "title": "Don't run any command after a commit.",
    "source": "config"
  },
  {
    "category": "postCommitCommand",
    "command": "config.postCommitCommand.push",
    "title": "Run 'git push' after a successful commit.",
    "source": "config"
  },
  {
    "category": "postCommitCommand",
    "command": "config.postCommitCommand.sync",
    "title": "Run 'git pull' and 'git push' after a successful commit.",
    "source": "config"
  },
  {
    "category": "rememberPostCommitCommand",
    "command": "config.rememberPostCommitCommand",
    "title": "Remember the last git command that ran after a commit.",
    "source": "config"
  },
  {
    "category": "openAfterClone",
    "command": "config.openAfterClone",
    "title": "Controls whether to open a repository automatically after cloning.",
    "source": "config"
  },
  {
    "category": "openAfterClone",
    "command": "config.openAfterClone.always",
    "title": "Always open in current window.",
    "source": "config"
  },
  {
    "category": "openAfterClone",
    "command": "config.openAfterClone.alwaysNewWindow",
    "title": "Always open in a new window.",
    "source": "config"
  },
  {
    "category": "openAfterClone",
    "command": "config.openAfterClone.whenNoFolderOpen",
    "title": "Only open in current window when no folder is opened.",
    "source": "config"
  },
  {
    "category": "openAfterClone",
    "command": "config.openAfterClone.prompt",
    "title": "Always prompt for action.",
    "source": "config"
  },
  {
    "category": "showInlineOpenFileAction",
    "command": "config.showInlineOpenFileAction",
    "title": "Controls whether to show an inline Open File action in the Git changes view.",
    "source": "config"
  },
  {
    "category": "showPushSuccessNotification",
    "command": "config.showPushSuccessNotification",
    "title": "Controls whether to show a notification when a push is successful.",
    "source": "config"
  },
  {
    "category": "inputValidation",
    "command": "config.inputValidation",
    "title": "Controls when to show commit message input validation.",
    "source": "config"
  },
  {
    "category": "inputValidationLength",
    "command": "config.inputValidationLength",
    "title": "Controls the commit message length threshold for showing a warning.",
    "source": "config"
  },
  {
    "category": "inputValidationSubjectLength",
    "command": "config.inputValidationSubjectLength",
    "title": "Controls the commit message subject length threshold for showing a warning. Unset it to inherit the value of `config.inputValidationLength`.",
    "source": "config"
  },
  {
    "category": "detectSubmodules",
    "command": "config.detectSubmodules",
    "title": "Controls whether to automatically detect git submodules.",
    "source": "config"
  },
  {
    "category": "detectSubmodulesLimit",
    "command": "config.detectSubmodulesLimit",
    "title": "Controls the limit of git submodules detected.",
    "source": "config"
  },
  {
    "category": "alwaysShowStagedChangesResourceGroup",
    "command": "config.alwaysShowStagedChangesResourceGroup",
    "title": "Always show the Staged Changes resource group.",
    "source": "config"
  },
  {
    "category": "alwaysSignOff",
    "command": "config.alwaysSignOff",
    "title": "Controls the signoff flag for all commits.",
    "source": "config"
  },
  {
    "category": "ignoreSubmodules",
    "command": "config.ignoreSubmodules",
    "title": "Ignore modifications to submodules in the file tree.",
    "source": "config"
  },
  {
    "category": "ignoredRepositories",
    "command": "config.ignoredRepositories",
    "title": "List of git repositories to ignore.",
    "source": "config"
  },
  {
    "category": "scanRepositories",
    "command": "config.scanRepositories",
    "title": "List of paths to search for git repositories in.",
    "source": "config"
  },
  {
    "category": "showProgress",
    "command": "config.showProgress",
    "title": "Controls whether git actions should show progress.",
    "source": "config"
  },
  {
    "category": "rebaseWhenSync",
    "command": "config.rebaseWhenSync",
    "title": "Force git to use rebase when running the sync command.",
    "source": "config"
  },
  {
    "category": "confirmEmptyCommits",
    "command": "config.confirmEmptyCommits",
    "title": "Always confirm the creation of empty commits for the 'Git: Commit Empty' command.",
    "source": "config"
  },
  {
    "category": "fetchOnPull",
    "command": "config.fetchOnPull",
    "title": "When enabled, fetch all branches when pulling. Otherwise, fetch just the current one.",
    "source": "config"
  },
  {
    "category": "pullBeforeCheckout",
    "command": "config.pullBeforeCheckout",
    "title": "Controls whether a branch that does not have outgoing commits is fast-forwarded before it is checked out.",
    "source": "config"
  },
  {
    "category": "pullTags",
    "command": "config.pullTags",
    "title": "Fetch all tags when pulling.",
    "source": "config"
  },
  {
    "category": "pruneOnFetch",
    "command": "config.pruneOnFetch",
    "title": "Prune when fetching.",
    "source": "config"
  },
  {
    "category": "autoStash",
    "command": "config.autoStash",
    "title": "Stash any changes before pulling and restore them after successful pull.",
    "source": "config"
  },
  {
    "category": "allowForcePush",
    "command": "config.allowForcePush",
    "title": "Controls whether force push (with or without lease) is enabled.",
    "source": "config"
  },
  {
    "category": "useForcePushWithLease",
    "command": "config.useForcePushWithLease",
    "title": "Controls whether force pushing uses the safer force-with-lease variant.",
    "source": "config"
  },
  {
    "category": "confirmForcePush",
    "command": "config.confirmForcePush",
    "title": "Controls whether to ask for confirmation before force-pushing.",
    "source": "config"
  },
  {
    "category": "allowNoVerifyCommit",
    "command": "config.allowNoVerifyCommit",
    "title": "Controls whether commits without running pre-commit and commit-msg hooks are allowed.",
    "source": "config"
  },
  {
    "category": "confirmNoVerifyCommit",
    "command": "config.confirmNoVerifyCommit",
    "title": "Controls whether to ask for confirmation before committing without verification.",
    "source": "config"
  },
  {
    "category": "closeDiffOnOperation",
    "command": "config.closeDiffOnOperation",
    "title": "Controls whether the diff editor should be automatically closed when changes are stashed, committed, discarded, staged, or unstaged.",
    "source": "config"
  },
  {
    "category": "openDiffOnClick",
    "command": "config.openDiffOnClick",
    "title": "Controls whether the diff editor should be opened when clicking a change. Otherwise the regular editor will be opened.",
    "source": "config"
  },
  {
    "category": "supportCancellation",
    "command": "config.supportCancellation",
    "title": "Controls whether a notification comes up when running the Sync action, which allows the user to cancel the operation.",
    "source": "config"
  },
  {
    "category": "branchSortOrder",
    "command": "config.branchSortOrder",
    "title": "Controls the sort order for branches.",
    "source": "config"
  },
  {
    "category": "untrackedChanges",
    "command": "config.untrackedChanges",
    "title": "Controls how untracked changes behave.",
    "source": "config"
  },
  {
    "category": "untrackedChanges",
    "command": "config.untrackedChanges.mixed",
    "title": "All changes, tracked and untracked, appear together and behave equally.",
    "source": "config"
  },
  {
    "category": "untrackedChanges",
    "command": "config.untrackedChanges.separate",
    "title": "Untracked changes appear separately in the Source Control view. They are also excluded from several actions.",
    "source": "config"
  },
  {
    "category": "untrackedChanges",
    "command": "config.untrackedChanges.hidden",
    "title": "Untracked changes are hidden and excluded from several actions.",
    "source": "config"
  },
  {
    "category": "requireGitUserConfig",
    "command": "config.requireGitUserConfig",
    "title": "Controls whether to require explicit Git user configuration or allow Git to guess if missing.",
    "source": "config"
  },
  {
    "category": "showCommitInput",
    "command": "config.showCommitInput",
    "title": "Controls whether to show the commit input in the Git source control panel.",
    "source": "config"
  },
  {
    "category": "terminalAuthentication",
    "command": "config.terminalAuthentication",
    "title": "Controls whether to enable VS Code to be the authentication handler for Git processes spawned in the Integrated Terminal. Note: Terminals need to be restarted to pick up a change in this setting.",
    "source": "config"
  },
  {
    "category": "terminalGitEditor",
    "command": "config.terminalGitEditor",
    "title": "Controls whether to enable VS Code to be the Git editor for Git processes spawned in the integrated terminal. Note: Terminals need to be restarted to pick up a change in this setting.",
    "source": "config"
  },
  {
    "category": "timeline",
    "command": "config.timeline.showAuthor",
    "title": "Controls whether to show the commit author in the Timeline view.",
    "source": "config"
  },
  {
    "category": "timeline",
    "command": "config.timeline.showUncommitted",
    "title": "Controls whether to show uncommitted changes in the Timeline view.",
    "source": "config"
  },
  {
    "category": "timeline",
    "command": "config.timeline.date",
    "title": "Controls which date to use for items in the Timeline view.",
    "source": "config"
  },
  {
    "category": "timeline",
    "command": "config.timeline.date.committed",
    "title": "Use the committed date",
    "source": "config"
  },
  {
    "category": "timeline",
    "command": "config.timeline.date.authored",
    "title": "Use the authored date",
    "source": "config"
  },
  {
    "category": "useCommitInputAsStashMessage",
    "command": "config.useCommitInputAsStashMessage",
    "title": "Controls whether to use the message from the commit input box as the default stash message.",
    "source": "config"
  },
  {
    "category": "showActionButton",
    "command": "config.showActionButton",
    "title": "Controls whether an action button is shown in the Source Control view.",
    "source": "config"
  },
  {
    "category": "showActionButton",
    "command": "config.showActionButton.commit",
    "title": "Show an action button to commit changes when the local branch has modified files ready to be committed.",
    "source": "config"
  },
  {
    "category": "showActionButton",
    "command": "config.showActionButton.publish",
    "title": "Show an action button to publish the local branch when it does not have a tracking remote branch.",
    "source": "config"
  },
  {
    "category": "showActionButton",
    "command": "config.showActionButton.sync",
    "title": "Show an action button to synchronize changes when the local branch is either ahead or behind the remote branch.",
    "source": "config"
  },
  {
    "category": "statusLimit",
    "command": "config.statusLimit",
    "title": "Controls how to limit the number of changes that can be parsed from Git status command. Can be set to 0 for no limit.",
    "source": "config"
  },
  {
    "category": "experimental",
    "command": "config.experimental.installGuide",
    "title": "Experimental improvements for the git setup flow.",
    "source": "config"
  },
  {
    "category": "repositoryScanIgnoredFolders",
    "command": "config.repositoryScanIgnoredFolders",
    "title": "List of folders that are ignored while scanning for Git repositories when `#git.autoRepositoryDetection#` is set to `true` or `subFolders`.",
    "source": "config"
  },
  {
    "category": "repositoryScanMaxDepth",
    "command": "config.repositoryScanMaxDepth",
    "title": "Controls the depth used when scanning workspace folders for Git repositories when `#git.autoRepositoryDetection#` is set to `true` or `subFolders`. Can be set to `-1` for no limit.",
    "source": "config"
  },
  {
    "category": "useIntegratedAskPass",
    "command": "config.useIntegratedAskPass",
    "title": "Controls whether GIT_ASKPASS should be overwritten to use the integrated version.",
    "source": "config"
  },
  {
    "category": "mergeEditor",
    "command": "config.mergeEditor",
    "title": "Open the merge editor for files that are currently under conflict.",
    "source": "config"
  },
  {
    "category": "optimisticUpdate",
    "command": "config.optimisticUpdate",
    "title": "Controls whether to optimistically update the state of the Source Control view after running git commands.",
    "source": "config"
  },
  {
    "category": "openRepositoryInParentFolders",
    "command": "config.openRepositoryInParentFolders",
    "title": "Control whether a repository in parent folders of workspaces or open files should be opened.",
    "source": "config"
  },
  {
    "category": "openRepositoryInParentFolders",
    "command": "config.openRepositoryInParentFolders.always",
    "title": "Always open a repository in parent folders of workspaces or open files.",
    "source": "config"
  },
  {
    "category": "openRepositoryInParentFolders",
    "command": "config.openRepositoryInParentFolders.never",
    "title": "Never open a repository in parent folders of workspaces or open files.",
    "source": "config"
  },
  {
    "category": "openRepositoryInParentFolders",
    "command": "config.openRepositoryInParentFolders.prompt",
    "title": "Prompt before opening a repository the parent folders of workspaces or open files.",
    "source": "config"
  },
  {
    "category": "publishBeforeContinueOn",
    "command": "config.publishBeforeContinueOn",
    "title": "Controls whether to publish unpublished git state when using Continue Working On from a git repository.",
    "source": "config"
  },
  {
    "category": "publishBeforeContinueOn",
    "command": "config.publishBeforeContinueOn.always",
    "title": "Always publish unpublished git state when using Continue Working On from a git repository",
    "source": "config"
  },
  {
    "category": "publishBeforeContinueOn",
    "command": "config.publishBeforeContinueOn.never",
    "title": "Never publish unpublished git state when using Continue Working On from a git repository",
    "source": "config"
  },
  {
    "category": "publishBeforeContinueOn",
    "command": "config.publishBeforeContinueOn.prompt",
    "title": "Prompt to publish unpublished git state when using Continue Working On from a git repository",
    "source": "config"
  },
  {
    "category": "explorer",
    "command": "submenu.explorer",
    "title": "Git",
    "source": "submenu"
  },
  {
    "category": "commit",
    "command": "submenu.commit",
    "title": "Commit",
    "source": "submenu"
  },
  {
    "category": "commit",
    "command": "submenu.commit.amend",
    "title": "Amend",
    "source": "submenu"
  },
  {
    "category": "commit",
    "command": "submenu.commit.signoff",
    "title": "Sign Off",
    "source": "submenu"
  },
  {
    "category": "changes",
    "command": "submenu.changes",
    "title": "Changes",
    "source": "submenu"
  },
  {
    "category": "pullpush",
    "command": "submenu.pullpush",
    "title": "Pull, Push",
    "source": "submenu"
  },
  {
    "category": "branch",
    "command": "submenu.branch",
    "title": "Branch",
    "source": "submenu"
  },
  {
    "category": "remotes",
    "command": "submenu.remotes",
    "title": "Remote",
    "source": "submenu"
  },
  {
    "category": "stash",
    "command": "submenu.stash",
    "title": "Stash",
    "source": "submenu"
  },
  {
    "category": "tags",
    "command": "submenu.tags",
    "title": "Tags",
    "source": "submenu"
  },
  {
    "category": "added",
    "command": "colors.added",
    "title": "Color for added resources.",
    "source": "colors"
  },
  {
    "category": "modified",
    "command": "colors.modified",
    "title": "Color for modified resources.",
    "source": "colors"
  },
  {
    "category": "stageModified",
    "command": "colors.stageModified",
    "title": "Color for modified resources which have been staged.",
    "source": "colors"
  },
  {
    "category": "stageDeleted",
    "command": "colors.stageDeleted",
    "title": "Color for deleted resources which have been staged.",
    "source": "colors"
  },
  {
    "category": "deleted",
    "command": "colors.deleted",
    "title": "Color for deleted resources.",
    "source": "colors"
  },
  {
    "category": "renamed",
    "command": "colors.renamed",
    "title": "Color for renamed or copied resources.",
    "source": "colors"
  },
  {
    "category": "untracked",
    "command": "colors.untracked",
    "title": "Color for untracked resources.",
    "source": "colors"
  },
  {
    "category": "ignored",
    "command": "colors.ignored",
    "title": "Color for ignored resources.",
    "source": "colors"
  },
  {
    "category": "conflict",
    "command": "colors.conflict",
    "title": "Color for resources with conflicts.",
    "source": "colors"
  },
  {
    "category": "submodule",
    "command": "colors.submodule",
    "title": "Color for submodule resources.",
    "source": "colors"
  },
  {
    "category": "workbench",
    "command": "view.workbench.scm.missing",
    "title": "Install Git, a popular source control system, to track code changes and collaborate with others. Learn more in our [Git guides](https://aka.ms/vscode-scm).",
    "source": "view"
  },
  {
    "category": "workbench",
    "command": "view.workbench.learnMore",
    "title": "To learn more about how to use git and source control in VS Code [read our docs](https://aka.ms/vscode-scm).",
    "source": "view"
  },
  {
    "category": "api",
    "command": "command.api.getRemoteSources",
    "title": "Get Remote Sources",
    "source": "command"
  },
  {
    "category": "gitAuthentication",
    "command": "config.gitAuthentication",
    "title": "Controls whether to enable automatic GitHub authentication for git commands within VS Code.",
    "source": "config"
  },
  {
    "category": "gitProtocol",
    "command": "config.gitProtocol",
    "title": "Controls which protocol is used to clone a GitHub repository",
    "source": "config"
  },
  {
    "category": "grunt",
    "command": "config.grunt.autoDetect",
    "title": "Controls enablement of Grunt task detection. Grunt task detection can cause files in any open workspace to be executed.",
    "source": "config"
  },
  {
    "category": "taskDefinition",
    "command": "grunt.taskDefinition.type.description",
    "title": "The Grunt task to customize.",
    "source": "grunt"
  },
  {
    "category": "taskDefinition",
    "command": "grunt.taskDefinition.args.description",
    "title": "Command line arguments to pass to the grunt task",
    "source": "grunt"
  },
  {
    "category": "taskDefinition",
    "command": "grunt.taskDefinition.file.description",
    "title": "The Grunt file that provides the task. Can be omitted.",
    "source": "grunt"
  },
  {
    "category": "gulp",
    "command": "config.gulp.autoDetect",
    "title": "Controls enablement of Gulp task detection. Gulp task detection can cause files in any open workspace to be executed.",
    "source": "config"
  },
  {
    "category": "taskDefinition",
    "command": "gulp.taskDefinition.type.description",
    "title": "The Gulp task to customize.",
    "source": "gulp"
  },
  {
    "category": "taskDefinition",
    "command": "gulp.taskDefinition.file.description",
    "title": "The Gulp file that provides the task. Can be omitted.",
    "source": "gulp"
  },
  {
    "category": "customData",
    "command": "html.customData.desc",
    "title": "A list of relative file paths pointing to JSON files following the [custom data format](https://github.com/microsoft/vscode-html-languageservice/blob/master/docs/customData.md).\n\nVS Code loads custom data on startup to enhance its HTML support for the custom HTML tags, attributes and attribute values you specify in the JSON files.\n\nThe file paths are relative to workspace and only workspace folder settings are considered.",
    "source": "html"
  },
  {
    "category": "format",
    "command": "html.format.enable.desc",
    "title": "Enable/disable default HTML formatter.",
    "source": "html"
  },
  {
    "category": "format",
    "command": "html.format.wrapLineLength.desc",
    "title": "Maximum amount of characters per line (0 = disable).",
    "source": "html"
  },
  {
    "category": "format",
    "command": "html.format.unformatted.desc",
    "title": "List of tags, comma separated, that shouldn't be reformatted. `null` defaults to all tags listed at https://www.w3.org/TR/html5/dom.html#phrasing-content.",
    "source": "html"
  },
  {
    "category": "format",
    "command": "html.format.contentUnformatted.desc",
    "title": "List of tags, comma separated, where the content shouldn't be reformatted. `null` defaults to the `pre` tag.",
    "source": "html"
  },
  {
    "category": "format",
    "command": "html.format.indentInnerHtml.desc",
    "title": "Indent `<head>` and `<body>` sections.",
    "source": "html"
  },
  {
    "category": "format",
    "command": "html.format.preserveNewLines.desc",
    "title": "Controls whether existing line breaks before elements should be preserved. Only works before elements, not inside tags or for text.",
    "source": "html"
  },
  {
    "category": "format",
    "command": "html.format.maxPreserveNewLines.desc",
    "title": "Maximum number of line breaks to be preserved in one chunk. Use `null` for unlimited.",
    "source": "html"
  },
  {
    "category": "format",
    "command": "html.format.indentHandlebars.desc",
    "title": "Format and indent `{{#foo}}` and `{{/foo}}`.",
    "source": "html"
  },
  {
    "category": "format",
    "command": "html.format.extraLiners.desc",
    "title": "List of tags, comma separated, that should have an extra newline before them. `null` defaults to `\"head, body, /html\"`.",
    "source": "html"
  },
  {
    "category": "format",
    "command": "html.format.wrapAttributes.desc",
    "title": "Wrap attributes.",
    "source": "html"
  },
  {
    "category": "format",
    "command": "html.format.wrapAttributes.auto",
    "title": "Wrap attributes only when line length is exceeded.",
    "source": "html"
  },
  {
    "category": "format",
    "command": "html.format.wrapAttributes.force",
    "title": "Wrap each attribute except first.",
    "source": "html"
  },
  {
    "category": "format",
    "command": "html.format.wrapAttributes.forcealign",
    "title": "Wrap each attribute except first and keep aligned.",
    "source": "html"
  },
  {
    "category": "format",
    "command": "html.format.wrapAttributes.forcemultiline",
    "title": "Wrap each attribute.",
    "source": "html"
  },
  {
    "category": "format",
    "command": "html.format.wrapAttributes.alignedmultiple",
    "title": "Wrap when line length is exceeded, align attributes vertically.",
    "source": "html"
  },
  {
    "category": "format",
    "command": "html.format.wrapAttributes.preserve",
    "title": "Preserve wrapping of attributes.",
    "source": "html"
  },
  {
    "category": "format",
    "command": "html.format.wrapAttributes.preservealigned",
    "title": "Preserve wrapping of attributes but align.",
    "source": "html"
  },
  {
    "category": "format",
    "command": "html.format.templating.desc",
    "title": "Honor django, erb, handlebars and php templating language tags.",
    "source": "html"
  },
  {
    "category": "format",
    "command": "html.format.unformattedContentDelimiter.desc",
    "title": "Keep text content together between this string.",
    "source": "html"
  },
  {
    "category": "format",
    "command": "html.format.wrapAttributesIndentSize.desc",
    "title": "Indent wrapped attributes to after N characters. Use `null` to use the default indent size. Ignored if `#html.format.wrapAttributes#` is set to 'aligned'.",
    "source": "html"
  },
  {
    "category": "suggest",
    "command": "html.suggest.html5.desc",
    "title": "Controls whether the built-in HTML language support suggests HTML5 tags, properties and values.",
    "source": "html"
  },
  {
    "category": "trace",
    "command": "html.trace.server.desc",
    "title": "Traces the communication between VS Code and the HTML language server.",
    "source": "html"
  },
  {
    "category": "validate",
    "command": "html.validate.scripts",
    "title": "Controls whether the built-in HTML language support validates embedded scripts.",
    "source": "html"
  },
  {
    "category": "validate",
    "command": "html.validate.styles",
    "title": "Controls whether the built-in HTML language support validates embedded styles.",
    "source": "html"
  },
  {
    "category": "autoCreateQuotes",
    "command": "html.autoCreateQuotes",
    "title": "Enable/disable auto creation of quotes for HTML attribute assignment. The type of quotes can be configured by `#html.completion.attributeDefaultValue#`.",
    "source": "html"
  },
  {
    "category": "autoClosingTags",
    "command": "html.autoClosingTags",
    "title": "Enable/disable autoclosing of HTML tags.",
    "source": "html"
  },
  {
    "category": "completion",
    "command": "html.completion.attributeDefaultValue",
    "title": "Controls the default value for attributes when completion is accepted.",
    "source": "html"
  },
  {
    "category": "completion",
    "command": "html.completion.attributeDefaultValue.doublequotes",
    "title": "Attribute value is set to \"\".",
    "source": "html"
  },
  {
    "category": "completion",
    "command": "html.completion.attributeDefaultValue.singlequotes",
    "title": "Attribute value is set to ''.",
    "source": "html"
  },
  {
    "category": "completion",
    "command": "html.completion.attributeDefaultValue.empty",
    "title": "Attribute value is not set.",
    "source": "html"
  },
  {
    "category": "mirrorCursorOnMatchingTag",
    "command": "html.mirrorCursorOnMatchingTag",
    "title": "Enable/disable mirroring cursor on matching HTML tag.",
    "source": "html"
  },
  {
    "category": "mirrorCursorOnMatchingTagDeprecationMessage",
    "command": "html.mirrorCursorOnMatchingTagDeprecationMessage",
    "title": "Deprecated in favor of `editor.linkedEditing`",
    "source": "html"
  },
  {
    "category": "hover",
    "command": "html.hover.documentation",
    "title": "Show tag and attribute documentation in hover.",
    "source": "html"
  },
  {
    "category": "hover",
    "command": "html.hover.references",
    "title": "Show references to MDN in hover.",
    "source": "html"
  },
  {
    "category": "pasteImagesAsAttachments",
    "command": "ipynb.pasteImagesAsAttachments.enabled",
    "title": "Enable/disable pasting of images into Markdown cells in ipynb notebook files. Pasted images are inserted as attachments to the cell.",
    "source": "ipynb"
  },
  {
    "category": "title",
    "command": "newUntitledIpynb.title",
    "title": "New Jupyter Notebook",
    "source": "newUntitledIpynb"
  },
  {
    "category": "shortTitle",
    "command": "newUntitledIpynb.shortTitle",
    "title": "Jupyter Notebook",
    "source": "newUntitledIpynb"
  },
  {
    "category": "title",
    "command": "openIpynbInNotebookEditor.title",
    "title": "Open IPYNB File In Notebook Editor",
    "source": "openIpynbInNotebookEditor"
  },
  {
    "category": "title",
    "command": "cleanInvalidImageAttachment.title",
    "title": "Clean Invalid Image Attachment Reference",
    "source": "cleanInvalidImageAttachment"
  },
  {
    "category": "taskDefinition",
    "command": "jake.taskDefinition.type.description",
    "title": "The Jake task to customize.",
    "source": "jake"
  },
  {
    "category": "taskDefinition",
    "command": "jake.taskDefinition.file.description",
    "title": "The Jake file that provides the task. Can be omitted.",
    "source": "jake"
  },
  {
    "category": "jake",
    "command": "config.jake.autoDetect",
    "title": "Controls enablement of Jake task detection. Jake task detection can cause files in any open workspace to be executed.",
    "source": "config"
  },
  {
    "category": "schemas",
    "command": "json.schemas.desc",
    "title": "Associate schemas to JSON files in the current project.",
    "source": "json"
  },
  {
    "category": "schemas",
    "command": "json.schemas.url.desc",
    "title": "A URL to a schema or a relative path to a schema in the current directory",
    "source": "json"
  },
  {
    "category": "schemas",
    "command": "json.schemas.fileMatch.desc",
    "title": "An array of file patterns to match against when resolving JSON files to schemas. `*` can be used as a wildcard. Exclusion patterns can also be defined and start with '!'. A file matches when there is at least one matching pattern and the last matching pattern is not an exclusion pattern.",
    "source": "json"
  },
  {
    "category": "schemas",
    "command": "json.schemas.fileMatch.item.desc",
    "title": "A file pattern that can contain '*' to match against when resolving JSON files to schemas.",
    "source": "json"
  },
  {
    "category": "schemas",
    "command": "json.schemas.schema.desc",
    "title": "The schema definition for the given URL. The schema only needs to be provided to avoid accesses to the schema URL.",
    "source": "json"
  },
  {
    "category": "format",
    "command": "json.format.enable.desc",
    "title": "Enable/disable default JSON formatter",
    "source": "json"
  },
  {
    "category": "format",
    "command": "json.format.keepLines.desc",
    "title": "Keep all existing new lines when formatting.",
    "source": "json"
  },
  {
    "category": "validate",
    "command": "json.validate.enable.desc",
    "title": "Enable/disable JSON validation.",
    "source": "json"
  },
  {
    "category": "tracing",
    "command": "json.tracing.desc",
    "title": "Traces the communication between VS Code and the JSON language server.",
    "source": "json"
  },
  {
    "category": "colorDecorators",
    "command": "json.colorDecorators.enable.desc",
    "title": "Enables or disables color decorators",
    "source": "json"
  },
  {
    "category": "colorDecorators",
    "command": "json.colorDecorators.enable.deprecationMessage",
    "title": "The setting `json.colorDecorators.enable` has been deprecated in favor of `editor.colorDecorators`.",
    "source": "json"
  },
  {
    "category": "schemaResolutionErrorMessage",
    "command": "json.schemaResolutionErrorMessage",
    "title": "Unable to resolve schema.",
    "source": "json"
  },
  {
    "category": "clickToRetry",
    "command": "json.clickToRetry",
    "title": "Click to retry.",
    "source": "json"
  },
  {
    "category": "maxItemsComputed",
    "command": "json.maxItemsComputed.desc",
    "title": "The maximum number of outline symbols and folding regions computed (limited for performance reasons).",
    "source": "json"
  },
  {
    "category": "maxItemsExceededInformation",
    "command": "json.maxItemsExceededInformation.desc",
    "title": "Show notification when exceeding the maximum number of outline symbols and folding regions.",
    "source": "json"
  },
  {
    "category": "enableSchemaDownload",
    "command": "json.enableSchemaDownload.desc",
    "title": "When enabled, JSON schemas can be fetched from http and https locations.",
    "source": "json"
  },
  {
    "category": "command",
    "command": "json.command.clearCache",
    "title": "Clear Schema Cache",
    "source": "json"
  },
  {
    "category": "command",
    "command": "json.command.sort",
    "title": "Sort Document",
    "source": "json"
  },
  {
    "category": "preview",
    "command": "markdown.preview.breaks.desc",
    "title": "Sets how line-breaks are rendered in the Markdown preview. Setting it to 'true' creates a <br> for newlines inside paragraphs.",
    "source": "markdown"
  },
  {
    "category": "preview",
    "command": "markdown.preview.linkify",
    "title": "Convert URL-like text to links in the Markdown preview.",
    "source": "markdown"
  },
  {
    "category": "preview",
    "command": "markdown.preview.typographer",
    "title": "Enable some language-neutral replacement and quotes beautification in the Markdown preview.",
    "source": "markdown"
  },
  {
    "category": "preview",
    "command": "markdown.preview.doubleClickToSwitchToEditor.desc",
    "title": "Double-click in the Markdown preview to switch to the editor.",
    "source": "markdown"
  },
  {
    "category": "preview",
    "command": "markdown.preview.fontFamily.desc",
    "title": "Controls the font family used in the Markdown preview.",
    "source": "markdown"
  },
  {
    "category": "preview",
    "command": "markdown.preview.fontSize.desc",
    "title": "Controls the font size in pixels used in the Markdown preview.",
    "source": "markdown"
  },
  {
    "category": "preview",
    "command": "markdown.preview.lineHeight.desc",
    "title": "Controls the line height used in the Markdown preview. This number is relative to the font size.",
    "source": "markdown"
  },
  {
    "category": "preview",
    "command": "markdown.preview.markEditorSelection.desc",
    "title": "Mark the current editor selection in the Markdown preview.",
    "source": "markdown"
  },
  {
    "category": "preview",
    "command": "markdown.preview.scrollEditorWithPreview.desc",
    "title": "When a Markdown preview is scrolled, update the view of the editor.",
    "source": "markdown"
  },
  {
    "category": "preview",
    "command": "markdown.preview.scrollPreviewWithEditor.desc",
    "title": "When a Markdown editor is scrolled, update the view of the preview.",
    "source": "markdown"
  },
  {
    "category": "preview",
    "command": "markdown.preview.title",
    "title": "Open Preview",
    "source": "markdown"
  },
  {
    "category": "previewSide",
    "command": "markdown.previewSide.title",
    "title": "Open Preview to the Side",
    "source": "markdown"
  },
  {
    "category": "showLockedPreviewToSide",
    "command": "markdown.showLockedPreviewToSide.title",
    "title": "Open Locked Preview to the Side",
    "source": "markdown"
  },
  {
    "category": "showSource",
    "command": "markdown.showSource.title",
    "title": "Show Source",
    "source": "markdown"
  },
  {
    "category": "styles",
    "command": "markdown.styles.dec",
    "title": "A list of URLs or local paths to CSS style sheets to use from the Markdown preview. Relative paths are interpreted relative to the folder open in the Explorer. If there is no open folder, they are interpreted relative to the location of the Markdown file. All '\\' need to be written as '\\\\'.",
    "source": "markdown"
  },
  {
    "category": "showPreviewSecuritySelector",
    "command": "markdown.showPreviewSecuritySelector.title",
    "title": "Change Preview Security Settings",
    "source": "markdown"
  },
  {
    "category": "trace",
    "command": "markdown.trace.extension.desc",
    "title": "Enable debug logging for the Markdown extension.",
    "source": "markdown"
  },
  {
    "category": "trace",
    "command": "markdown.trace.server.desc",
    "title": "Traces the communication between VS Code and the Markdown language server.",
    "source": "markdown"
  },
  {
    "category": "server",
    "command": "markdown.server.log.desc",
    "title": "Controls the logging level of the Markdown language server.",
    "source": "markdown"
  },
  {
    "category": "preview",
    "command": "markdown.preview.refresh.title",
    "title": "Refresh Preview",
    "source": "markdown"
  },
  {
    "category": "preview",
    "command": "markdown.preview.toggleLock.title",
    "title": "Toggle Preview Locking",
    "source": "markdown"
  },
  {
    "category": "findAllFileReferences",
    "command": "markdown.findAllFileReferences",
    "title": "Find File References",
    "source": "markdown"
  },
  {
    "category": "editor",
    "command": "markdown.editor.insertLinkFromWorkspace",
    "title": "Insert Link to File in Workspace",
    "source": "markdown"
  },
  {
    "category": "editor",
    "command": "markdown.editor.insertImageFromWorkspace",
    "title": "Insert Image from Workspace",
    "source": "markdown"
  },
  {
    "category": "markdown",
    "command": "configuration.markdown.preview.openMarkdownLinks.description",
    "title": "Controls how links to other Markdown files in the Markdown preview should be opened.",
    "source": "configuration"
  },
  {
    "category": "markdown",
    "command": "configuration.markdown.preview.openMarkdownLinks.inEditor",
    "title": "Try to open links in the editor.",
    "source": "configuration"
  },
  {
    "category": "markdown",
    "command": "configuration.markdown.preview.openMarkdownLinks.inPreview",
    "title": "Try to open links in the Markdown preview.",
    "source": "configuration"
  },
  {
    "category": "markdown",
    "command": "configuration.markdown.links.openLocation.description",
    "title": "Controls where links in Markdown files should be opened.",
    "source": "configuration"
  },
  {
    "category": "markdown",
    "command": "configuration.markdown.links.openLocation.currentGroup",
    "title": "Open links in the active editor group.",
    "source": "configuration"
  },
  {
    "category": "markdown",
    "command": "configuration.markdown.links.openLocation.beside",
    "title": "Open links beside the active editor.",
    "source": "configuration"
  },
  {
    "category": "markdown",
    "command": "configuration.markdown.suggest.paths.enabled.description",
    "title": "Enable path suggestions while writing links in Markdown files.",
    "source": "configuration"
  },
  {
    "category": "markdown",
    "command": "configuration.markdown.suggest.paths.includeWorkspaceHeaderCompletions",
    "title": "Enable suggestions for headers in other Markdown files in the current workspace. Accepting one of these suggestions inserts the full path to header in that file, for example `[link text](/path/to/file.md#header)`.",
    "source": "configuration"
  },
  {
    "category": "markdown",
    "command": "configuration.markdown.suggest.paths.includeWorkspaceHeaderCompletions.never",
    "title": "Disable workspace header suggestions.",
    "source": "configuration"
  },
  {
    "category": "markdown",
    "command": "configuration.markdown.suggest.paths.includeWorkspaceHeaderCompletions.onDoubleHash",
    "title": "Enable workspace header suggestions after typing `##` in a path, for example `[link text](##`.",
    "source": "configuration"
  },
  {
    "category": "markdown",
    "command": "configuration.markdown.suggest.paths.includeWorkspaceHeaderCompletions.onSingleOrDoubleHash",
    "title": "Enable workspace header suggestions after typing either `##` or `#` in a path, for example `[link text](#` or `[link text](##`.",
    "source": "configuration"
  },
  {
    "category": "markdown",
    "command": "configuration.markdown.editor.drop.enabled",
    "title": "Enable dropping files into a Markdown editor while holding Shift. Requires enabling `#editor.dropIntoEditor.enabled#`.",
    "source": "configuration"
  },
  {
    "category": "markdown",
    "command": "configuration.markdown.editor.pasteLinks.enabled",
    "title": "Enable pasting files into a Markdown editor inserts Markdown links. Requires enabling `#editor.experimental.pasteActions.enabled#`.",
    "source": "configuration"
  },
  {
    "category": "markdown",
    "command": "configuration.markdown.validate.enabled.description",
    "title": "Enable all error reporting in Markdown files.",
    "source": "configuration"
  },
  {
    "category": "markdown",
    "command": "configuration.markdown.validate.referenceLinks.enabled.description",
    "title": "Validate reference links in Markdown files, for example `[link][ref]`. Requires enabling `#markdown.validate.enabled#`.",
    "source": "configuration"
  },
  {
    "category": "markdown",
    "command": "configuration.markdown.validate.fragmentLinks.enabled.description",
    "title": "Validate fragment links to headers in the current Markdown file, for example `[link](#header)`. Requires enabling `#markdown.validate.enabled#`.",
    "source": "configuration"
  },
  {
    "category": "markdown",
    "command": "configuration.markdown.validate.fileLinks.enabled.description",
    "title": "Validate links to other files in Markdown files, for example `[link](/path/to/file.md)`. This checks that the target files exists. Requires enabling `#markdown.validate.enabled#`.",
    "source": "configuration"
  },
  {
    "category": "markdown",
    "command": "configuration.markdown.validate.fileLinks.markdownFragmentLinks.description",
    "title": "Validate the fragment part of links to headers in other files in Markdown files, for example `[link](/path/to/file.md#header)`. Inherits the setting value from `#markdown.validate.fragmentLinks.enabled#` by default.",
    "source": "configuration"
  },
  {
    "category": "markdown",
    "command": "configuration.markdown.validate.ignoredLinks.description",
    "title": "Configure links that should not be validated. For example adding `/about` would not validate the link `[about](/about)`, while the glob `/assets/**/*.svg` would let you skip validation for any link to `.svg` files under the `assets` directory.",
    "source": "configuration"
  },
  {
    "category": "markdown",
    "command": "configuration.markdown.validate.unusedLinkDefinitions.description",
    "title": "Validate link definitions that are unused in the current file.",
    "source": "configuration"
  },
  {
    "category": "markdown",
    "command": "configuration.markdown.validate.duplicateLinkDefinitions.description",
    "title": "Validate duplicated definitions in the current file.",
    "source": "configuration"
  },
  {
    "category": "markdown",
    "command": "configuration.markdown.updateLinksOnFileMove.enabled",
    "title": "Try to update links in Markdown files when a file is renamed/moved in the workspace. Use `#markdown.updateLinksOnFileMove.include#` to configure which files trigger link updates.",
    "source": "configuration"
  },
  {
    "category": "markdown",
    "command": "configuration.markdown.updateLinksOnFileMove.enabled.prompt",
    "title": "Prompt on each file move.",
    "source": "configuration"
  },
  {
    "category": "markdown",
    "command": "configuration.markdown.updateLinksOnFileMove.enabled.always",
    "title": "Always update links automatically.",
    "source": "configuration"
  },
  {
    "category": "markdown",
    "command": "configuration.markdown.updateLinksOnFileMove.enabled.never",
    "title": "Never try to update link and don't prompt.",
    "source": "configuration"
  },
  {
    "category": "markdown",
    "command": "configuration.markdown.updateLinksOnFileMove.include",
    "title": "Glob patterns that specifies files that trigger automatic link updates. See `#markdown.updateLinksOnFileMove.enabled#` for details about this feature.",
    "source": "configuration"
  },
  {
    "category": "markdown",
    "command": "configuration.markdown.updateLinksOnFileMove.include.property",
    "title": "The glob pattern to match file paths against. Set to true to enable the pattern.",
    "source": "configuration"
  },
  {
    "category": "markdown",
    "command": "configuration.markdown.updateLinksOnFileMove.enableForDirectories",
    "title": "Enable updating links when a directory is moved or renamed in the workspace.",
    "source": "configuration"
  },
  {
    "category": "markdown",
    "command": "configuration.markdown.occurrencesHighlight.enabled",
    "title": "Enable highlighting link occurrences in the current document.",
    "source": "configuration"
  },
  {
    "category": "markdown",
    "command": "configuration.markdown.copyFiles.destination",
    "title": "Defines where files copied into a Markdown document should be created. This is a map from globs that match on the Markdown document to destinations.\n\nThe destinations may use the following variables:\n\n- `${documentFileName}` — The full filename of the Markdown document, for example `readme.md`.\n- `${documentBaseName}` — The basename of Markdown document, for example `readme`.\n- `${documentExtName}` — The extension of the Markdown document, for example `md`.\n- `${documentDirName}` — The name of the Markdown document's parent directory.\n- `${documentWorkspaceFolder}` — The workspace folder for the Markdown document, for examples, `/Users/me/myProject`. This is the same as `${documentDirName}` if the file is not part of in a workspace.\n- `${fileName}` — The file name of the dropped file, for example `image.png`.",
    "source": "configuration"
  },
  {
    "category": "markdown",
    "command": "configuration.markdown.preferredMdPathExtensionStyle",
    "title": "Controls if file extensions (e.g. `.md`) are added or not for links to Markdown files. This setting is used when file paths are added by tooling such as path completions or file renames.",
    "source": "configuration"
  },
  {
    "category": "markdown",
    "command": "configuration.markdown.preferredMdPathExtensionStyle.auto",
    "title": "For existing paths, try to maintain the file extension style. For new paths, add file extensions.",
    "source": "configuration"
  },
  {
    "category": "markdown",
    "command": "configuration.markdown.preferredMdPathExtensionStyle.includeExtension",
    "title": "Prefer including the file extension. For example, path completions to a file named `file.md` will insert `file.md`.",
    "source": "configuration"
  },
  {
    "category": "markdown",
    "command": "configuration.markdown.preferredMdPathExtensionStyle.removeExtension",
    "title": "Prefer removing the file extension. For example, path completions to a file named `file.md` will insert `file` without the `.md`.",
    "source": "configuration"
  },
  {
    "category": "markdown",
    "command": "config.markdown.math.enabled",
    "title": "Enable/disable rendering math in the built-in Markdown preview.",
    "source": "config"
  },
  {
    "category": "audioPreview",
    "command": "customEditor.audioPreview.displayName",
    "title": "Audio Preview",
    "source": "customEditor"
  },
  {
    "category": "imagePreview",
    "command": "customEditor.imagePreview.displayName",
    "title": "Image Preview",
    "source": "customEditor"
  },
  {
    "category": "videoPreview",
    "command": "customEditor.videoPreview.displayName",
    "title": "Video Preview",
    "source": "customEditor"
  },
  {
    "category": "zoomIn",
    "command": "command.zoomIn",
    "title": "Zoom in",
    "source": "command"
  },
  {
    "category": "zoomOut",
    "command": "command.zoomOut",
    "title": "Zoom out",
    "source": "command"
  },
  {
    "category": "category",
    "command": "command.category",
    "title": "Merge Conflict",
    "source": "command"
  },
  {
    "category": "accept",
    "command": "command.accept.all-current",
    "title": "Accept All Current",
    "source": "command"
  },
  {
    "category": "accept",
    "command": "command.accept.all-incoming",
    "title": "Accept All Incoming",
    "source": "command"
  },
  {
    "category": "accept",
    "command": "command.accept.all-both",
    "title": "Accept All Both",
    "source": "command"
  },
  {
    "category": "accept",
    "command": "command.accept.current",
    "title": "Accept Current",
    "source": "command"
  },
  {
    "category": "accept",
    "command": "command.accept.incoming",
    "title": "Accept Incoming",
    "source": "command"
  },
  {
    "category": "accept",
    "command": "command.accept.selection",
    "title": "Accept Selection",
    "source": "command"
  },
  {
    "category": "accept",
    "command": "command.accept.both",
    "title": "Accept Both",
    "source": "command"
  },
  {
    "category": "next",
    "command": "command.next",
    "title": "Next Conflict",
    "source": "command"
  },
  {
    "category": "previous",
    "command": "command.previous",
    "title": "Previous Conflict",
    "source": "command"
  },
  {
    "category": "compare",
    "command": "command.compare",
    "title": "Compare Current Conflict",
    "source": "command"
  },
  {
    "category": "title",
    "command": "config.title",
    "title": "Merge Conflict",
    "source": "config"
  },
  {
    "category": "autoNavigateNextConflictEnabled",
    "command": "config.autoNavigateNextConflictEnabled",
    "title": "Whether to automatically navigate to the next merge conflict after resolving a merge conflict.",
    "source": "config"
  },
  {
    "category": "codeLensEnabled",
    "command": "config.codeLensEnabled",
    "title": "Create a CodeLens for merge conflict blocks within editor.",
    "source": "config"
  },
  {
    "category": "decoratorsEnabled",
    "command": "config.decoratorsEnabled",
    "title": "Create decorators for merge conflict blocks within editor.",
    "source": "config"
  },
  {
    "category": "diffViewPosition",
    "command": "config.diffViewPosition",
    "title": "Controls where the diff view should be opened when comparing changes in merge conflicts.",
    "source": "config"
  },
  {
    "category": "diffViewPosition",
    "command": "config.diffViewPosition.current",
    "title": "Open the diff view in the current editor group.",
    "source": "config"
  },
  {
    "category": "diffViewPosition",
    "command": "config.diffViewPosition.beside",
    "title": "Open the diff view next to the current editor group.",
    "source": "config"
  },
  {
    "category": "diffViewPosition",
    "command": "config.diffViewPosition.below",
    "title": "Open the diff view below the current editor group.",
    "source": "config"
  },
  {
    "category": "endpoint",
    "command": "microsoft-sovereign-cloud.endpoint.description",
    "title": "Login endpoint for Azure authentication. Select a national cloud or enter the login URL for a custom Azure cloud.",
    "source": "microsoft-sovereign-cloud"
  },
  {
    "category": "npm",
    "command": "config.npm.autoDetect",
    "title": "Controls whether npm scripts should be automatically detected.",
    "source": "config"
  },
  {
    "category": "npm",
    "command": "config.npm.runSilent",
    "title": "Run npm commands with the `--silent` option.",
    "source": "config"
  },
  {
    "category": "npm",
    "command": "config.npm.packageManager",
    "title": "The package manager used to run scripts.",
    "source": "config"
  },
  {
    "category": "npm",
    "command": "config.npm.packageManager.npm",
    "title": "Use npm as the package manager for running scripts.",
    "source": "config"
  },
  {
    "category": "npm",
    "command": "config.npm.packageManager.yarn",
    "title": "Use yarn as the package manager for running scripts.",
    "source": "config"
  },
  {
    "category": "npm",
    "command": "config.npm.packageManager.pnpm",
    "title": "Use pnpm as the package manager for running scripts.",
    "source": "config"
  },
  {
    "category": "npm",
    "command": "config.npm.packageManager.auto",
    "title": "Auto-detect which package manager to use for running scripts based on lock files and installed package managers.",
    "source": "config"
  },
  {
    "category": "npm",
    "command": "config.npm.exclude",
    "title": "Configure glob patterns for folders that should be excluded from automatic script detection.",
    "source": "config"
  },
  {
    "category": "npm",
    "command": "config.npm.enableScriptExplorer",
    "title": "Enable an explorer view for npm scripts when there is no top-level 'package.json' file.",
    "source": "config"
  },
  {
    "category": "npm",
    "command": "config.npm.scriptExplorerAction",
    "title": "The default click action used in the NPM Scripts Explorer: `open` or `run`, the default is `open`.",
    "source": "config"
  },
  {
    "category": "npm",
    "command": "config.npm.scriptExplorerExclude",
    "title": "An array of regular expressions that indicate which scripts should be excluded from the NPM Scripts view.",
    "source": "config"
  },
  {
    "category": "npm",
    "command": "config.npm.enableRunFromFolder",
    "title": "Enable running npm scripts contained in a folder from the Explorer context menu.",
    "source": "config"
  },
  {
    "category": "npm",
    "command": "config.npm.fetchOnlinePackageInfo",
    "title": "Fetch data from https://registry.npmjs.org and https://registry.bower.io to provide auto-completion and information on hover features on npm dependencies.",
    "source": "config"
  },
  {
    "category": "npm",
    "command": "config.npm.scriptHover",
    "title": "Display hover with 'Run' and 'Debug' commands for scripts.",
    "source": "config"
  },
  {
    "category": "parseError",
    "command": "npm.parseError",
    "title": "Npm task detection: failed to parse the file {0}",
    "source": "npm"
  },
  {
    "category": "script",
    "command": "taskdef.script",
    "title": "The npm script to customize.",
    "source": "taskdef"
  },
  {
    "category": "path",
    "command": "taskdef.path",
    "title": "The path to the folder of the package.json file that provides the script. Can be omitted.",
    "source": "taskdef"
  },
  {
    "category": "name",
    "command": "view.name",
    "title": "NPM Scripts",
    "source": "view"
  },
  {
    "category": "refresh",
    "command": "command.refresh",
    "title": "Refresh",
    "source": "command"
  },
  {
    "category": "run",
    "command": "command.run",
    "title": "Run",
    "source": "command"
  },
  {
    "category": "debug",
    "command": "command.debug",
    "title": "Debug",
    "source": "command"
  },
  {
    "category": "openScript",
    "command": "command.openScript",
    "title": "Open",
    "source": "command"
  },
  {
    "category": "runInstall",
    "command": "command.runInstall",
    "title": "Run Install",
    "source": "command"
  },
  {
    "category": "runSelectedScript",
    "command": "command.runSelectedScript",
    "title": "Run Script",
    "source": "command"
  },
  {
    "category": "runScriptFromFolder",
    "command": "command.runScriptFromFolder",
    "title": "Run NPM Script in Folder...",
    "source": "command"
  },
  {
    "category": "packageManager",
    "command": "command.packageManager",
    "title": "Get Configured Package Manager",
    "source": "command"
  },
  {
    "category": "suggest",
    "command": "configuration.suggest.basic",
    "title": "Controls whether the built-in PHP language suggestions are enabled. The support suggests PHP globals and variables.",
    "source": "configuration"
  },
  {
    "category": "validate",
    "command": "configuration.validate.enable",
    "title": "Enable/disable built-in PHP validation.",
    "source": "configuration"
  },
  {
    "category": "validate",
    "command": "configuration.validate.executablePath",
    "title": "Points to the PHP executable.",
    "source": "configuration"
  },
  {
    "category": "validate",
    "command": "configuration.validate.run",
    "title": "Whether the linter is run on save or on type.",
    "source": "configuration"
  },
  {
    "category": "title",
    "command": "configuration.title",
    "title": "PHP",
    "source": "configuration"
  },
  {
    "category": "categroy",
    "command": "commands.categroy.php",
    "title": "PHP",
    "source": "commands"
  },
  {
    "category": "untrustValidationExecutable",
    "command": "command.untrustValidationExecutable",
    "title": "Disallow PHP validation executable (defined as workspace setting)",
    "source": "command"
  },
  {
    "category": "references",
    "command": "config.references.preferredLocation",
    "title": "Controls whether 'Peek References' or 'Find References' is invoked when selecting CodeLens references.",
    "source": "config"
  },
  {
    "category": "references",
    "command": "config.references.preferredLocation.peek",
    "title": "Show references in peek editor.",
    "source": "config"
  },
  {
    "category": "references",
    "command": "config.references.preferredLocation.view",
    "title": "Show references in separate view.",
    "source": "config"
  },
  {
    "category": "title",
    "command": "container.title",
    "title": "References",
    "source": "container"
  },
  {
    "category": "title",
    "command": "view.title",
    "title": "Reference Search Results",
    "source": "view"
  },
  {
    "category": "category",
    "command": "cmd.category.references",
    "title": "References",
    "source": "cmd"
  },
  {
    "category": "references-view",
    "command": "cmd.references-view.findReferences",
    "title": "Find All References",
    "source": "cmd"
  },
  {
    "category": "references-view",
    "command": "cmd.references-view.findImplementations",
    "title": "Find All Implementations",
    "source": "cmd"
  },
  {
    "category": "references-view",
    "command": "cmd.references-view.clearHistory",
    "title": "Clear History",
    "source": "cmd"
  },
  {
    "category": "references-view",
    "command": "cmd.references-view.clear",
    "title": "Clear",
    "source": "cmd"
  },
  {
    "category": "references-view",
    "command": "cmd.references-view.refresh",
    "title": "Refresh",
    "source": "cmd"
  },
  {
    "category": "references-view",
    "command": "cmd.references-view.pickFromHistory",
    "title": "Show History",
    "source": "cmd"
  },
  {
    "category": "references-view",
    "command": "cmd.references-view.removeReferenceItem",
    "title": "Dismiss",
    "source": "cmd"
  },
  {
    "category": "references-view",
    "command": "cmd.references-view.copy",
    "title": "Copy",
    "source": "cmd"
  },
  {
    "category": "references-view",
    "command": "cmd.references-view.copyAll",
    "title": "Copy All",
    "source": "cmd"
  },
  {
    "category": "references-view",
    "command": "cmd.references-view.copyPath",
    "title": "Copy Path",
    "source": "cmd"
  },
  {
    "category": "references-view",
    "command": "cmd.references-view.refind",
    "title": "Rerun",
    "source": "cmd"
  },
  {
    "category": "references-view",
    "command": "cmd.references-view.showCallHierarchy",
    "title": "Show Call Hierarchy",
    "source": "cmd"
  },
  {
    "category": "references-view",
    "command": "cmd.references-view.showOutgoingCalls",
    "title": "Show Outgoing Calls",
    "source": "cmd"
  },
  {
    "category": "references-view",
    "command": "cmd.references-view.showIncomingCalls",
    "title": "Show Incoming Calls",
    "source": "cmd"
  },
  {
    "category": "references-view",
    "command": "cmd.references-view.removeCallItem",
    "title": "Dismiss",
    "source": "cmd"
  },
  {
    "category": "references-view",
    "command": "cmd.references-view.next",
    "title": "Go to Next Reference",
    "source": "cmd"
  },
  {
    "category": "references-view",
    "command": "cmd.references-view.prev",
    "title": "Go to Previous Reference",
    "source": "cmd"
  },
  {
    "category": "references-view",
    "command": "cmd.references-view.showTypeHierarchy",
    "title": "Show Type Hierarchy",
    "source": "cmd"
  },
  {
    "category": "references-view",
    "command": "cmd.references-view.showSupertypes",
    "title": "Show Supertypes",
    "source": "cmd"
  },
  {
    "category": "references-view",
    "command": "cmd.references-view.showSubtypes",
    "title": "Show Subtypes",
    "source": "cmd"
  },
  {
    "category": "references-view",
    "command": "cmd.references-view.removeTypeItem",
    "title": "Dismiss",
    "source": "cmd"
  },
  {
    "category": "focusLockIndicator",
    "command": "configuration.focusLockIndicator.enabled.description",
    "title": "Enable/disable the floating indicator that shows when focused in the simple browser.",
    "source": "configuration"
  },
  {
    "category": "title",
    "command": "reloadProjects.title",
    "title": "Reload Project",
    "source": "reloadProjects"
  },
  {
    "category": "typescript",
    "command": "configuration.typescript",
    "title": "TypeScript",
    "source": "configuration"
  },
  {
    "category": "suggest",
    "command": "configuration.suggest.completeFunctionCalls",
    "title": "Complete functions with their parameter signature.",
    "source": "configuration"
  },
  {
    "category": "suggest",
    "command": "configuration.suggest.includeAutomaticOptionalChainCompletions",
    "title": "Enable/disable showing completions on potentially undefined values that insert an optional chain call. Requires strict null checks to be enabled.",
    "source": "configuration"
  },
  {
    "category": "suggest",
    "command": "configuration.suggest.includeCompletionsForImportStatements",
    "title": "Enable/disable auto-import-style completions on partially-typed import statements.",
    "source": "configuration"
  },
  {
    "category": "tsdk",
    "command": "typescript.tsdk.desc",
    "title": "Specifies the folder path to the tsserver and `lib*.d.ts` files under a TypeScript install to use for IntelliSense, for example: `./node_modules/typescript/lib`.\n\n- When specified as a user setting, the TypeScript version from `typescript.tsdk` automatically replaces the built-in TypeScript version.\n- When specified as a workspace setting, `typescript.tsdk` allows you to switch to use that workspace version of TypeScript for IntelliSense with the `TypeScript: Select TypeScript version` command.\n\nSee the [TypeScript documentation](https://code.visualstudio.com/docs/typescript/typescript-compiling#_using-newer-typescript-versions) for more detail about managing TypeScript versions.",
    "source": "typescript"
  },
  {
    "category": "disableAutomaticTypeAcquisition",
    "command": "typescript.disableAutomaticTypeAcquisition",
    "title": "Disables [automatic type acquisition](https://code.visualstudio.com/docs/nodejs/working-with-javascript#_typings-and-automatic-type-acquisition). Automatic type acquisition fetches `@types` packages from npm to improve IntelliSense for external libraries.",
    "source": "typescript"
  },
  {
    "category": "enablePromptUseWorkspaceTsdk",
    "command": "typescript.enablePromptUseWorkspaceTsdk",
    "title": "Enables prompting of users to use the TypeScript version configured in the workspace for Intellisense.",
    "source": "typescript"
  },
  {
    "category": "tsserver",
    "command": "typescript.tsserver.enableTracing",
    "title": "Enables tracing TS server performance to a directory. These trace files can be used to diagnose TS Server performance issues. The log may contain file paths, source code, and other potentially sensitive information from your project.",
    "source": "typescript"
  },
  {
    "category": "tsserver",
    "command": "typescript.tsserver.log",
    "title": "Enables logging of the TS server to a file. This log can be used to diagnose TS Server issues. The log may contain file paths, source code, and other potentially sensitive information from your project.",
    "source": "typescript"
  },
  {
    "category": "tsserver",
    "command": "typescript.tsserver.pluginPaths",
    "title": "Additional paths to discover TypeScript Language Service plugins.",
    "source": "typescript"
  },
  {
    "category": "tsserver",
    "command": "typescript.tsserver.pluginPaths.item",
    "title": "Either an absolute or relative path. Relative path will be resolved against workspace folder(s).",
    "source": "typescript"
  },
  {
    "category": "tsserver",
    "command": "typescript.tsserver.trace",
    "title": "Enables tracing of messages sent to the TS server. This trace can be used to diagnose TS Server issues. The trace may contain file paths, source code, and other potentially sensitive information from your project.",
    "source": "typescript"
  },
  {
    "category": "validate",
    "command": "typescript.validate.enable",
    "title": "Enable/disable TypeScript validation.",
    "source": "typescript"
  },
  {
    "category": "format",
    "command": "typescript.format.enable",
    "title": "Enable/disable default TypeScript formatter.",
    "source": "typescript"
  },
  {
    "category": "format",
    "command": "javascript.format.enable",
    "title": "Enable/disable default JavaScript formatter.",
    "source": "javascript"
  },
  {
    "category": "insertSpaceAfterCommaDelimiter",
    "command": "format.insertSpaceAfterCommaDelimiter",
    "title": "Defines space handling after a comma delimiter.",
    "source": "format"
  },
  {
    "category": "insertSpaceAfterConstructor",
    "command": "format.insertSpaceAfterConstructor",
    "title": "Defines space handling after the constructor keyword.",
    "source": "format"
  },
  {
    "category": "insertSpaceAfterSemicolonInForStatements",
    "command": "format.insertSpaceAfterSemicolonInForStatements",
    "title": "Defines space handling after a semicolon in a for statement.",
    "source": "format"
  },
  {
    "category": "insertSpaceBeforeAndAfterBinaryOperators",
    "command": "format.insertSpaceBeforeAndAfterBinaryOperators",
    "title": "Defines space handling after a binary operator.",
    "source": "format"
  },
  {
    "category": "insertSpaceAfterKeywordsInControlFlowStatements",
    "command": "format.insertSpaceAfterKeywordsInControlFlowStatements",
    "title": "Defines space handling after keywords in a control flow statement.",
    "source": "format"
  },
  {
    "category": "insertSpaceAfterFunctionKeywordForAnonymousFunctions",
    "command": "format.insertSpaceAfterFunctionKeywordForAnonymousFunctions",
    "title": "Defines space handling after function keyword for anonymous functions.",
    "source": "format"
  },
  {
    "category": "insertSpaceBeforeFunctionParenthesis",
    "command": "format.insertSpaceBeforeFunctionParenthesis",
    "title": "Defines space handling before function argument parentheses.",
    "source": "format"
  },
  {
    "category": "insertSpaceAfterOpeningAndBeforeClosingNonemptyParenthesis",
    "command": "format.insertSpaceAfterOpeningAndBeforeClosingNonemptyParenthesis",
    "title": "Defines space handling after opening and before closing non-empty parenthesis.",
    "source": "format"
  },
  {
    "category": "insertSpaceAfterOpeningAndBeforeClosingNonemptyBrackets",
    "command": "format.insertSpaceAfterOpeningAndBeforeClosingNonemptyBrackets",
    "title": "Defines space handling after opening and before closing non-empty brackets.",
    "source": "format"
  },
  {
    "category": "insertSpaceAfterOpeningAndBeforeClosingNonemptyBraces",
    "command": "format.insertSpaceAfterOpeningAndBeforeClosingNonemptyBraces",
    "title": "Defines space handling after opening and before closing non-empty braces.",
    "source": "format"
  },
  {
    "category": "insertSpaceAfterOpeningAndBeforeClosingEmptyBraces",
    "command": "format.insertSpaceAfterOpeningAndBeforeClosingEmptyBraces",
    "title": "Defines space handling after opening and before closing empty braces.",
    "source": "format"
  },
  {
    "category": "insertSpaceAfterOpeningAndBeforeClosingTemplateStringBraces",
    "command": "format.insertSpaceAfterOpeningAndBeforeClosingTemplateStringBraces",
    "title": "Defines space handling after opening and before closing template string braces.",
    "source": "format"
  },
  {
    "category": "insertSpaceAfterOpeningAndBeforeClosingJsxExpressionBraces",
    "command": "format.insertSpaceAfterOpeningAndBeforeClosingJsxExpressionBraces",
    "title": "Defines space handling after opening and before closing JSX expression braces.",
    "source": "format"
  },
  {
    "category": "insertSpaceAfterTypeAssertion",
    "command": "format.insertSpaceAfterTypeAssertion",
    "title": "Defines space handling after type assertions in TypeScript.",
    "source": "format"
  },
  {
    "category": "placeOpenBraceOnNewLineForFunctions",
    "command": "format.placeOpenBraceOnNewLineForFunctions",
    "title": "Defines whether an open brace is put onto a new line for functions or not.",
    "source": "format"
  },
  {
    "category": "placeOpenBraceOnNewLineForControlBlocks",
    "command": "format.placeOpenBraceOnNewLineForControlBlocks",
    "title": "Defines whether an open brace is put onto a new line for control blocks or not.",
    "source": "format"
  },
  {
    "category": "semicolons",
    "command": "format.semicolons",
    "title": "Defines handling of optional semicolons.",
    "source": "format"
  },
  {
    "category": "semicolons",
    "command": "format.semicolons.ignore",
    "title": "Don't insert or remove any semicolons.",
    "source": "format"
  },
  {
    "category": "semicolons",
    "command": "format.semicolons.insert",
    "title": "Insert semicolons at statement ends.",
    "source": "format"
  },
  {
    "category": "semicolons",
    "command": "format.semicolons.remove",
    "title": "Remove unnecessary semicolons.",
    "source": "format"
  },
  {
    "category": "validate",
    "command": "javascript.validate.enable",
    "title": "Enable/disable JavaScript validation.",
    "source": "javascript"
  },
  {
    "category": "title",
    "command": "goToProjectConfig.title",
    "title": "Go to Project Configuration",
    "source": "goToProjectConfig"
  },
  {
    "category": "referencesCodeLens",
    "command": "javascript.referencesCodeLens.enabled",
    "title": "Enable/disable references CodeLens in JavaScript files.",
    "source": "javascript"
  },
  {
    "category": "referencesCodeLens",
    "command": "javascript.referencesCodeLens.showOnAllFunctions",
    "title": "Enable/disable references CodeLens on all functions in JavaScript files.",
    "source": "javascript"
  },
  {
    "category": "referencesCodeLens",
    "command": "typescript.referencesCodeLens.enabled",
    "title": "Enable/disable references CodeLens in TypeScript files.",
    "source": "typescript"
  },
  {
    "category": "referencesCodeLens",
    "command": "typescript.referencesCodeLens.showOnAllFunctions",
    "title": "Enable/disable references CodeLens on all functions in TypeScript files.",
    "source": "typescript"
  },
  {
    "category": "implementationsCodeLens",
    "command": "typescript.implementationsCodeLens.enabled",
    "title": "Enable/disable implementations CodeLens. This CodeLens shows the implementers of an interface.",
    "source": "typescript"
  },
  {
    "category": "openTsServerLog",
    "command": "typescript.openTsServerLog.title",
    "title": "Open TS Server log",
    "source": "typescript"
  },
  {
    "category": "restartTsServer",
    "command": "typescript.restartTsServer",
    "title": "Restart TS Server",
    "source": "typescript"
  },
  {
    "category": "selectTypeScriptVersion",
    "command": "typescript.selectTypeScriptVersion.title",
    "title": "Select TypeScript Version...",
    "source": "typescript"
  },
  {
    "category": "reportStyleChecksAsWarnings",
    "command": "typescript.reportStyleChecksAsWarnings",
    "title": "Report style checks as warnings.",
    "source": "typescript"
  },
  {
    "category": "npm",
    "command": "typescript.npm",
    "title": "Specifies the path to the npm executable used for [Automatic Type Acquisition](https://code.visualstudio.com/docs/nodejs/working-with-javascript#_typings-and-automatic-type-acquisition).",
    "source": "typescript"
  },
  {
    "category": "check",
    "command": "typescript.check.npmIsInstalled",
    "title": "Check if npm is installed for [Automatic Type Acquisition](https://code.visualstudio.com/docs/nodejs/working-with-javascript#_typings-and-automatic-type-acquisition).",
    "source": "typescript"
  },
  {
    "category": "suggest",
    "command": "configuration.suggest.names",
    "title": "Enable/disable including unique names from the file in JavaScript suggestions. Note that name suggestions are always disabled in JavaScript code that is semantically checked using `@ts-check` or `checkJs`.",
    "source": "configuration"
  },
  {
    "category": "tsc",
    "command": "typescript.tsc.autoDetect",
    "title": "Controls auto detection of tsc tasks.",
    "source": "typescript"
  },
  {
    "category": "tsc",
    "command": "typescript.tsc.autoDetect.off",
    "title": "Disable this feature.",
    "source": "typescript"
  },
  {
    "category": "tsc",
    "command": "typescript.tsc.autoDetect.on",
    "title": "Create both build and watch tasks.",
    "source": "typescript"
  },
  {
    "category": "tsc",
    "command": "typescript.tsc.autoDetect.build",
    "title": "Only create single run compile tasks.",
    "source": "typescript"
  },
  {
    "category": "tsc",
    "command": "typescript.tsc.autoDetect.watch",
    "title": "Only create compile and watch tasks.",
    "source": "typescript"
  },
  {
    "category": "problemMatchers",
    "command": "typescript.problemMatchers.tsc.label",
    "title": "TypeScript problems",
    "source": "typescript"
  },
  {
    "category": "problemMatchers",
    "command": "typescript.problemMatchers.tscWatch.label",
    "title": "TypeScript problems (watch mode)",
    "source": "typescript"
  },
  {
    "category": "suggest",
    "command": "configuration.suggest.paths",
    "title": "Enable/disable suggestions for paths in import statements and require calls.",
    "source": "configuration"
  },
  {
    "category": "tsserver",
    "command": "configuration.tsserver.useSeparateSyntaxServer",
    "title": "Enable/disable spawning a separate TypeScript server that can more quickly respond to syntax related operations, such as calculating folding or computing document symbols.",
    "source": "configuration"
  },
  {
    "category": "tsserver",
    "command": "configuration.tsserver.useSeparateSyntaxServer.deprecation",
    "title": "This setting has been deprecated in favor of `typescript.tsserver.useSyntaxServer`.",
    "source": "configuration"
  },
  {
    "category": "tsserver",
    "command": "configuration.tsserver.useSyntaxServer",
    "title": "Controls if TypeScript launches a dedicated server to more quickly handle syntax related operations, such as computing code folding.",
    "source": "configuration"
  },
  {
    "category": "tsserver",
    "command": "configuration.tsserver.useSyntaxServer.always",
    "title": "Use a lighter weight syntax server to handle all IntelliSense operations. This syntax server can only provide IntelliSense for opened files.",
    "source": "configuration"
  },
  {
    "category": "tsserver",
    "command": "configuration.tsserver.useSyntaxServer.never",
    "title": "Don't use a dedicated syntax server. Use a single server to handle all IntelliSense operations.",
    "source": "configuration"
  },
  {
    "category": "tsserver",
    "command": "configuration.tsserver.useSyntaxServer.auto",
    "title": "Spawn both a full server and a lighter weight server dedicated to syntax operations. The syntax server is used to speed up syntax operations and provide IntelliSense while projects are loading.",
    "source": "configuration"
  },
  {
    "category": "tsserver",
    "command": "configuration.tsserver.maxTsServerMemory",
    "title": "The maximum amount of memory (in MB) to allocate to the TypeScript server process.",
    "source": "configuration"
  },
  {
    "category": "tsserver",
    "command": "configuration.tsserver.experimental.enableProjectDiagnostics",
    "title": "(Experimental) Enables project wide error reporting.",
    "source": "configuration"
  },
  {
    "category": "locale",
    "command": "typescript.locale",
    "title": "Sets the locale used to report JavaScript and TypeScript errors. Defaults to use VS Code's locale.",
    "source": "typescript"
  },
  {
    "category": "implicitProjectConfig",
    "command": "configuration.implicitProjectConfig.module",
    "title": "Sets the module system for the program. See more: https://www.typescriptlang.org/tsconfig#module.",
    "source": "configuration"
  },
  {
    "category": "implicitProjectConfig",
    "command": "configuration.implicitProjectConfig.target",
    "title": "Set target JavaScript language version for emitted JavaScript and include library declarations. See more: https://www.typescriptlang.org/tsconfig#target.",
    "source": "configuration"
  },
  {
    "category": "implicitProjectConfig",
    "command": "configuration.implicitProjectConfig.checkJs",
    "title": "Enable/disable semantic checking of JavaScript files. Existing `jsconfig.json` or `tsconfig.json` files override this setting.",
    "source": "configuration"
  },
  {
    "category": "javascript",
    "command": "configuration.javascript.checkJs.checkJs.deprecation",
    "title": "This setting has been deprecated in favor of `js/ts.implicitProjectConfig.checkJs`.",
    "source": "configuration"
  },
  {
    "category": "implicitProjectConfig",
    "command": "configuration.implicitProjectConfig.experimentalDecorators",
    "title": "Enable/disable `experimentalDecorators` in JavaScript files that are not part of a project. Existing `jsconfig.json` or `tsconfig.json` files override this setting.",
    "source": "configuration"
  },
  {
    "category": "javascript",
    "command": "configuration.javascript.checkJs.experimentalDecorators.deprecation",
    "title": "This setting has been deprecated in favor of `js/ts.implicitProjectConfig.experimentalDecorators`.",
    "source": "configuration"
  },
  {
    "category": "implicitProjectConfig",
    "command": "configuration.implicitProjectConfig.strictNullChecks",
    "title": "Enable/disable [strict null checks](https://www.typescriptlang.org/tsconfig#strictNullChecks) in JavaScript and TypeScript files that are not part of a project. Existing `jsconfig.json` or `tsconfig.json` files override this setting.",
    "source": "configuration"
  },
  {
    "category": "implicitProjectConfig",
    "command": "configuration.implicitProjectConfig.strictFunctionTypes",
    "title": "Enable/disable [strict function types](https://www.typescriptlang.org/tsconfig#strictFunctionTypes) in JavaScript and TypeScript files that are not part of a project. Existing `jsconfig.json` or `tsconfig.json` files override this setting.",
    "source": "configuration"
  },
  {
    "category": "suggest",
    "command": "configuration.suggest.jsdoc.generateReturns",
    "title": "Enable/disable generating `@returns` annotations for JSDoc templates.",
    "source": "configuration"
  },
  {
    "category": "suggest",
    "command": "configuration.suggest.autoImports",
    "title": "Enable/disable auto import suggestions.",
    "source": "configuration"
  },
  {
    "category": "preferGoToSourceDefinition",
    "command": "configuration.preferGoToSourceDefinition",
    "title": "Makes Go to Definition avoid type declaration files when possible by triggering Go to Source Definition instead. This allows Go to Source Definition to be triggered with the mouse gesture. Requires using TypeScript 4.7+ in the workspace.",
    "source": "configuration"
  },
  {
    "category": "parameterNames",
    "command": "inlayHints.parameterNames.none",
    "title": "Disable parameter name hints.",
    "source": "inlayHints"
  },
  {
    "category": "parameterNames",
    "command": "inlayHints.parameterNames.literals",
    "title": "Enable parameter name hints only for literal arguments.",
    "source": "inlayHints"
  },
  {
    "category": "parameterNames",
    "command": "inlayHints.parameterNames.all",
    "title": "Enable parameter name hints for literal and non-literal arguments.",
    "source": "inlayHints"
  },
  {
    "category": "inlayHints",
    "command": "configuration.inlayHints.parameterNames.suppressWhenArgumentMatchesName",
    "title": "Suppress parameter name hints on arguments whose text is identical to the parameter name.",
    "source": "configuration"
  },
  {
    "category": "inlayHints",
    "command": "configuration.inlayHints.variableTypes.suppressWhenTypeMatchesName",
    "title": "Suppress type hints on variables whose name is identical to the type name. Requires using TypeScript 4.8+ in the workspace.",
    "source": "configuration"
  },
  {
    "category": "tsconfig",
    "command": "taskDefinition.tsconfig.description",
    "title": "The tsconfig file that defines the TS build.",
    "source": "taskDefinition"
  },
  {
    "category": "suggestionActions",
    "command": "javascript.suggestionActions.enabled",
    "title": "Enable/disable suggestion diagnostics for JavaScript files in the editor.",
    "source": "javascript"
  },
  {
    "category": "suggestionActions",
    "command": "typescript.suggestionActions.enabled",
    "title": "Enable/disable suggestion diagnostics for TypeScript files in the editor.",
    "source": "typescript"
  },
  {
    "category": "preferences",
    "command": "typescript.preferences.quoteStyle",
    "title": "Preferred quote style to use for Quick Fixes.",
    "source": "typescript"
  },
  {
    "category": "preferences",
    "command": "typescript.preferences.quoteStyle.single",
    "title": "Always use single quotes: `'`",
    "source": "typescript"
  },
  {
    "category": "preferences",
    "command": "typescript.preferences.quoteStyle.double",
    "title": "Always use double quotes: `\"`",
    "source": "typescript"
  },
  {
    "category": "preferences",
    "command": "typescript.preferences.quoteStyle.auto",
    "title": "Infer quote type from existing code",
    "source": "typescript"
  },
  {
    "category": "preferences",
    "command": "typescript.preferences.importModuleSpecifier",
    "title": "Preferred path style for auto imports.",
    "source": "typescript"
  },
  {
    "category": "preferences",
    "command": "typescript.preferences.importModuleSpecifier.shortest",
    "title": "Prefers a non-relative import only if one is available that has fewer path segments than a relative import.",
    "source": "typescript"
  },
  {
    "category": "preferences",
    "command": "typescript.preferences.importModuleSpecifier.relative",
    "title": "Prefers a relative path to the imported file location.",
    "source": "typescript"
  },
  {
    "category": "preferences",
    "command": "typescript.preferences.importModuleSpecifier.nonRelative",
    "title": "Prefers a non-relative import based on the `baseUrl` or `paths` configured in your `jsconfig.json` / `tsconfig.json`.",
    "source": "typescript"
  },
  {
    "category": "preferences",
    "command": "typescript.preferences.importModuleSpecifier.projectRelative",
    "title": "Prefers a non-relative import only if the relative import path would leave the package or project directory.",
    "source": "typescript"
  },
  {
    "category": "preferences",
    "command": "typescript.preferences.importModuleSpecifierEnding",
    "title": "Preferred path ending for auto imports.",
    "source": "typescript"
  },
  {
    "category": "preferences",
    "command": "typescript.preferences.importModuleSpecifierEnding.auto",
    "title": "Use project settings to select a default.",
    "source": "typescript"
  },
  {
    "category": "preferences",
    "command": "typescript.preferences.importModuleSpecifierEnding.minimal",
    "title": "Shorten `./component/index.js` to `./component`.",
    "source": "typescript"
  },
  {
    "category": "preferences",
    "command": "typescript.preferences.importModuleSpecifierEnding.index",
    "title": "Shorten `./component/index.js` to `./component/index`.",
    "source": "typescript"
  },
  {
    "category": "preferences",
    "command": "typescript.preferences.importModuleSpecifierEnding.js",
    "title": "Do not shorten path endings; include the `.js` extension.",
    "source": "typescript"
  },
  {
    "category": "preferences",
    "command": "typescript.preferences.jsxAttributeCompletionStyle",
    "title": "Preferred style for JSX attribute completions.",
    "source": "typescript"
  },
  {
    "category": "preferences",
    "command": "javascript.preferences.jsxAttributeCompletionStyle.auto",
    "title": "Insert `={}` or `=\"\"` after attribute names based on the prop type. See `javascript.preferences.quoteStyle` to control the type of quotes used for string attributes.",
    "source": "javascript"
  },
  {
    "category": "preferences",
    "command": "typescript.preferences.jsxAttributeCompletionStyle.auto",
    "title": "Insert `={}` or `=\"\"` after attribute names based on the prop type. See `typescript.preferences.quoteStyle` to control the type of quotes used for string attributes.",
    "source": "typescript"
  },
  {
    "category": "preferences",
    "command": "typescript.preferences.jsxAttributeCompletionStyle.braces",
    "title": "Insert `={}` after attribute names.",
    "source": "typescript"
  },
  {
    "category": "preferences",
    "command": "typescript.preferences.jsxAttributeCompletionStyle.none",
    "title": "Only insert attribute names.",
    "source": "typescript"
  },
  {
    "category": "preferences",
    "command": "typescript.preferences.includePackageJsonAutoImports",
    "title": "Enable/disable searching `package.json` dependencies for available auto imports.",
    "source": "typescript"
  },
  {
    "category": "preferences",
    "command": "typescript.preferences.includePackageJsonAutoImports.auto",
    "title": "Search dependencies based on estimated performance impact.",
    "source": "typescript"
  },
  {
    "category": "preferences",
    "command": "typescript.preferences.includePackageJsonAutoImports.on",
    "title": "Always search dependencies.",
    "source": "typescript"
  },
  {
    "category": "preferences",
    "command": "typescript.preferences.includePackageJsonAutoImports.off",
    "title": "Never search dependencies.",
    "source": "typescript"
  },
  {
    "category": "preferences",
    "command": "typescript.preferences.autoImportFileExcludePatterns",
    "title": "Specify glob patterns of files to exclude from auto imports. Requires using TypeScript 4.8 or newer in the workspace.",
    "source": "typescript"
  },
  {
    "category": "updateImportsOnFileMove",
    "command": "typescript.updateImportsOnFileMove.enabled",
    "title": "Enable/disable automatic updating of import paths when you rename or move a file in VS Code.",
    "source": "typescript"
  },
  {
    "category": "updateImportsOnFileMove",
    "command": "typescript.updateImportsOnFileMove.enabled.prompt",
    "title": "Prompt on each rename.",
    "source": "typescript"
  },
  {
    "category": "updateImportsOnFileMove",
    "command": "typescript.updateImportsOnFileMove.enabled.always",
    "title": "Always update paths automatically.",
    "source": "typescript"
  },
  {
    "category": "updateImportsOnFileMove",
    "command": "typescript.updateImportsOnFileMove.enabled.never",
    "title": "Never rename paths and don't prompt.",
    "source": "typescript"
  },
  {
    "category": "autoClosingTags",
    "command": "typescript.autoClosingTags",
    "title": "Enable/disable automatic closing of JSX tags.",
    "source": "typescript"
  },
  {
    "category": "suggest",
    "command": "typescript.suggest.enabled",
    "title": "Enabled/disable autocomplete suggestions.",
    "source": "typescript"
  },
  {
    "category": "surveys",
    "command": "configuration.surveys.enabled",
    "title": "Enabled/disable occasional surveys that help us improve VS Code's JavaScript and TypeScript support.",
    "source": "configuration"
  },
  {
    "category": "suggest",
    "command": "configuration.suggest.completeJSDocs",
    "title": "Enable/disable suggestion to complete JSDoc comments.",
    "source": "configuration"
  },
  {
    "category": "tsserver",
    "command": "configuration.tsserver.watchOptions",
    "title": "Configure which watching strategies should be used to keep track of files and directories.",
    "source": "configuration"
  },
  {
    "category": "tsserver",
    "command": "configuration.tsserver.watchOptions.watchFile",
    "title": "Strategy for how individual files are watched.",
    "source": "configuration"
  },
  {
    "category": "tsserver",
    "command": "configuration.tsserver.watchOptions.watchFile.fixedChunkSizePolling",
    "title": "Polls files in chunks at regular interval.",
    "source": "configuration"
  },
  {
    "category": "tsserver",
    "command": "configuration.tsserver.watchOptions.watchFile.fixedPollingInterval",
    "title": "Check every file for changes several times a second at a fixed interval.",
    "source": "configuration"
  },
  {
    "category": "tsserver",
    "command": "configuration.tsserver.watchOptions.watchFile.priorityPollingInterval",
    "title": "Check every file for changes several times a second, but use heuristics to check certain types of files less frequently than others.",
    "source": "configuration"
  },
  {
    "category": "tsserver",
    "command": "configuration.tsserver.watchOptions.watchFile.dynamicPriorityPolling",
    "title": "Use a dynamic queue where less-frequently modified files will be checked less often.",
    "source": "configuration"
  },
  {
    "category": "tsserver",
    "command": "configuration.tsserver.watchOptions.watchFile.useFsEvents",
    "title": "Attempt to use the operating system/file system's native events for file changes.",
    "source": "configuration"
  },
  {
    "category": "tsserver",
    "command": "configuration.tsserver.watchOptions.watchFile.useFsEventsOnParentDirectory",
    "title": "Attempt to use the operating system/file system's native events to listen for changes on a file's containing directories. This can use fewer file watchers, but might be less accurate.",
    "source": "configuration"
  },
  {
    "category": "tsserver",
    "command": "configuration.tsserver.watchOptions.watchDirectory",
    "title": "Strategy for how entire directory trees are watched under systems that lack recursive file-watching functionality.",
    "source": "configuration"
  },
  {
    "category": "tsserver",
    "command": "configuration.tsserver.watchOptions.watchDirectory.fixedChunkSizePolling",
    "title": "Polls directories in chunks at regular interval.",
    "source": "configuration"
  },
  {
    "category": "tsserver",
    "command": "configuration.tsserver.watchOptions.watchDirectory.fixedPollingInterval",
    "title": "Check every directory for changes several times a second at a fixed interval.",
    "source": "configuration"
  },
  {
    "category": "tsserver",
    "command": "configuration.tsserver.watchOptions.watchDirectory.dynamicPriorityPolling",
    "title": "Use a dynamic queue where less-frequently modified directories will be checked less often.",
    "source": "configuration"
  },
  {
    "category": "tsserver",
    "command": "configuration.tsserver.watchOptions.watchDirectory.useFsEvents",
    "title": "Attempt to use the operating system/file system's native events for directory changes.",
    "source": "configuration"
  },
  {
    "category": "tsserver",
    "command": "configuration.tsserver.watchOptions.fallbackPolling",
    "title": "When using file system events, this option specifies the polling strategy that gets used when the system runs out of native file watchers and/or doesn't support native file watchers.",
    "source": "configuration"
  },
  {
    "category": "tsserver",
    "command": "configuration.tsserver.watchOptions.fallbackPolling.fixedPollingInterval",
    "title": "Check every file for changes several times a second at a fixed interval.",
    "source": "configuration"
  },
  {
    "category": "tsserver",
    "command": "configuration.tsserver.watchOptions.fallbackPolling.priorityPollingInterval",
    "title": "Check every file for changes several times a second, but use heuristics to check certain types of files less frequently than others.",
    "source": "configuration"
  },
  {
    "category": "tsserver",
    "command": "configuration.tsserver.watchOptions.fallbackPolling.dynamicPriorityPolling ",
    "title": "Use a dynamic queue where less-frequently modified files will be checked less often.",
    "source": "configuration"
  },
  {
    "category": "tsserver",
    "command": "configuration.tsserver.watchOptions.synchronousWatchDirectory",
    "title": "Disable deferred watching on directories. Deferred watching is useful when lots of file changes might occur at once (e.g. a change in node_modules from running npm install), but you might want to disable it with this flag for some less-common setups.",
    "source": "configuration"
  },
  {
    "category": "preferences",
    "command": "typescript.preferences.renameShorthandProperties.deprecationMessage",
    "title": "The setting 'typescript.preferences.renameShorthandProperties' has been deprecated in favor of 'typescript.preferences.useAliasesForRenames'",
    "source": "typescript"
  },
  {
    "category": "preferences",
    "command": "typescript.preferences.useAliasesForRenames",
    "title": "Enable/disable introducing aliases for object shorthand properties during renames.",
    "source": "typescript"
  },
  {
    "category": "workspaceSymbols",
    "command": "typescript.workspaceSymbols.scope",
    "title": "Controls which files are searched by [Go to Symbol in Workspace](https://code.visualstudio.com/docs/editor/editingevolved#_open-symbol-by-name).",
    "source": "typescript"
  },
  {
    "category": "workspaceSymbols",
    "command": "typescript.workspaceSymbols.scope.allOpenProjects",
    "title": "Search all open JavaScript or TypeScript projects for symbols.",
    "source": "typescript"
  },
  {
    "category": "workspaceSymbols",
    "command": "typescript.workspaceSymbols.scope.currentProject",
    "title": "Only search for symbols in the current JavaScript or TypeScript project.",
    "source": "typescript"
  },
  {
    "category": "refactor",
    "command": "codeActions.refactor.extract.constant.title",
    "title": "Extract constant",
    "source": "codeActions"
  },
  {
    "category": "refactor",
    "command": "codeActions.refactor.extract.constant.description",
    "title": "Extract expression to constant.",
    "source": "codeActions"
  },
  {
    "category": "refactor",
    "command": "codeActions.refactor.extract.function.title",
    "title": "Extract function",
    "source": "codeActions"
  },
  {
    "category": "refactor",
    "command": "codeActions.refactor.extract.function.description",
    "title": "Extract expression to method or function.",
    "source": "codeActions"
  },
  {
    "category": "refactor",
    "command": "codeActions.refactor.extract.type.title",
    "title": "Extract type",
    "source": "codeActions"
  },
  {
    "category": "refactor",
    "command": "codeActions.refactor.extract.type.description",
    "title": "Extract type to a type alias.",
    "source": "codeActions"
  },
  {
    "category": "refactor",
    "command": "codeActions.refactor.extract.interface.title",
    "title": "Extract interface",
    "source": "codeActions"
  },
  {
    "category": "refactor",
    "command": "codeActions.refactor.extract.interface.description",
    "title": "Extract type to an interface.",
    "source": "codeActions"
  },
  {
    "category": "refactor",
    "command": "codeActions.refactor.rewrite.import.title",
    "title": "Convert import",
    "source": "codeActions"
  },
  {
    "category": "refactor",
    "command": "codeActions.refactor.rewrite.import.description",
    "title": "Convert between named imports and namespace imports.",
    "source": "codeActions"
  },
  {
    "category": "refactor",
    "command": "codeActions.refactor.rewrite.export.title",
    "title": "Convert export",
    "source": "codeActions"
  },
  {
    "category": "refactor",
    "command": "codeActions.refactor.rewrite.export.description",
    "title": "Convert between default export and named export.",
    "source": "codeActions"
  },
  {
    "category": "refactor",
    "command": "codeActions.refactor.move.newFile.title",
    "title": "Move to a new file",
    "source": "codeActions"
  },
  {
    "category": "refactor",
    "command": "codeActions.refactor.move.newFile.description",
    "title": "Move the expression to a new file.",
    "source": "codeActions"
  },
  {
    "category": "refactor",
    "command": "codeActions.refactor.rewrite.arrow.braces.title",
    "title": "Rewrite arrow braces",
    "source": "codeActions"
  },
  {
    "category": "refactor",
    "command": "codeActions.refactor.rewrite.arrow.braces.description",
    "title": "Add or remove braces in an arrow function.",
    "source": "codeActions"
  },
  {
    "category": "refactor",
    "command": "codeActions.refactor.rewrite.parameters.toDestructured.title",
    "title": "Convert parameters to destructured object",
    "source": "codeActions"
  },
  {
    "category": "refactor",
    "command": "codeActions.refactor.rewrite.property.generateAccessors.title",
    "title": "Generate accessors",
    "source": "codeActions"
  },
  {
    "category": "refactor",
    "command": "codeActions.refactor.rewrite.property.generateAccessors.description",
    "title": "Generate 'get' and 'set' accessors",
    "source": "codeActions"
  },
  {
    "category": "source",
    "command": "codeActions.source.organizeImports.title",
    "title": "Organize Imports",
    "source": "codeActions"
  },
  {
    "category": "sortImports",
    "command": "typescript.sortImports",
    "title": "Sort Imports",
    "source": "typescript"
  },
  {
    "category": "removeUnusedImports",
    "command": "typescript.removeUnusedImports",
    "title": "Remove Unused Imports",
    "source": "typescript"
  },
  {
    "category": "findAllFileReferences",
    "command": "typescript.findAllFileReferences",
    "title": "Find File References",
    "source": "typescript"
  },
  {
    "category": "goToSourceDefinition",
    "command": "typescript.goToSourceDefinition",
    "title": "Go to Source Definition",
    "source": "typescript"
  },
  {
    "category": "suggest",
    "command": "configuration.suggest.classMemberSnippets.enabled",
    "title": "Enable/disable snippet completions for class members.",
    "source": "configuration"
  },
  {
    "category": "suggest",
    "command": "configuration.suggest.objectLiteralMethodSnippets.enabled",
    "title": "Enable/disable snippet completions for methods in object literals. Requires using TypeScript 4.7+ in the workspace.",
    "source": "configuration"
  },
  {
    "category": "experimental",
    "command": "typescript.experimental.tsserver.web.enableProjectWideIntellisense",
    "title": "Enable/disable project-wide IntelliSense on web. Requires that VS Code is running in a trusted context.",
    "source": "typescript"
  },
  {
    "category": "nodejsWelcome",
    "command": "walkthroughs.nodejsWelcome.title",
    "title": "Get started with JavaScript and Node.js",
    "source": "walkthroughs"
  },
  {
    "category": "nodejsWelcome",
    "command": "walkthroughs.nodejsWelcome.description",
    "title": "Make the most of Visual Studio Code's first-class JavaScript experience.",
    "source": "walkthroughs"
  },
  {
    "category": "nodejsWelcome",
    "command": "walkthroughs.nodejsWelcome.downloadNode.forMacOrWindows.title",
    "title": "Install Node.js",
    "source": "walkthroughs"
  },
  {
    "category": "nodejsWelcome",
    "command": "walkthroughs.nodejsWelcome.downloadNode.forMacOrWindows.description",
    "title": "Node.js is an easy way to run JavaScript code. You can use it to quickly build command-line apps and servers. It also comes with npm, a package manager which makes reusing and sharing JavaScript code easy.\n[Install Node.js](https://nodejs.org/en/download/)",
    "source": "walkthroughs"
  },
  {
    "category": "nodejsWelcome",
    "command": "walkthroughs.nodejsWelcome.downloadNode.forLinux.title",
    "title": "Install Node.js",
    "source": "walkthroughs"
  },
  {
    "category": "nodejsWelcome",
    "command": "walkthroughs.nodejsWelcome.downloadNode.forLinux.description",
    "title": "Node.js is an easy way to run JavaScript code. You can use it to quickly build command-line apps and servers. It also comes with npm, a package manager which makes reusing and sharing JavaScript code easy.\n[Install Node.js](https://nodejs.org/en/download/package-manager/)",
    "source": "walkthroughs"
  },
  {
    "category": "nodejsWelcome",
    "command": "walkthroughs.nodejsWelcome.makeJsFile.title",
    "title": "Create a JavaScript File",
    "source": "walkthroughs"
  },
  {
    "category": "nodejsWelcome",
    "command": "walkthroughs.nodejsWelcome.makeJsFile.description",
    "title": "Let's write our first JavaScript file. We'll have to create a new file and save it with the ``.js`` extension at the end of the file name.\n[Create a JavaScript File](command:javascript-walkthrough.commands.createJsFile)",
    "source": "walkthroughs"
  },
  {
    "category": "nodejsWelcome",
    "command": "walkthroughs.nodejsWelcome.debugJsFile.title",
    "title": "Run and Debug your JavaScript",
    "source": "walkthroughs"
  },
  {
    "category": "nodejsWelcome",
    "command": "walkthroughs.nodejsWelcome.debugJsFile.description",
    "title": "Once you've installed Node.js, you can run JavaScript programs at a terminal by entering ``node your-file-name.js``\nAnother easy way to run Node.js programs is by using VS Code's debugger which lets you run your code, pause at different points, and help you understand what's going on step-by-step.\n[Start Debugging](command:javascript-walkthrough.commands.debugJsFile)",
    "source": "walkthroughs"
  },
  {
    "category": "nodejsWelcome",
    "command": "walkthroughs.nodejsWelcome.debugJsFile.altText",
    "title": "Debug and run your JavaScript code in Node.js with Visual Studio Code.",
    "source": "walkthroughs"
  },
  {
    "category": "nodejsWelcome",
    "command": "walkthroughs.nodejsWelcome.learnMoreAboutJs.title",
    "title": "Explore More",
    "source": "walkthroughs"
  },
  {
    "category": "nodejsWelcome",
    "command": "walkthroughs.nodejsWelcome.learnMoreAboutJs.description",
    "title": "Want to get more comfortable with JavaScript, Node.js, and VS Code? Be sure to check out our docs!\nWe've got lots of resources for learning [JavaScript](https://code.visualstudio.com/docs/nodejs/working-with-javascript) and [Node.js](https://code.visualstudio.com/docs/nodejs/nodejs-tutorial).\n\n[Learn More](https://code.visualstudio.com/docs/nodejs/nodejs-tutorial)",
    "source": "walkthroughs"
  },
  {
    "category": "nodejsWelcome",
    "command": "walkthroughs.nodejsWelcome.learnMoreAboutJs.altText",
    "title": "Learn more about JavaScript and Node.js in Visual Studio Code.",
    "source": "walkthroughs"
  }
]